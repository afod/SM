#Область ПрограммныйИнтерфейс

#Область ПроцедурыИФункцииПроверкиВозможностиВыполненияДействий

#КонецОбласти

#Область ПроцедурыОбработкиКомандПользователя

Процедура ПриИзмененииСменыСтатуса(Форма, ИмяКоманды) Экспорт

	ТекущийСтатус = Форма.Объект.Статус;
	СсылкаНаобъект = Форма.Объект.Ссылка;
	
	Если ТекущийСтатус = ПредопределенноеЗначение("Перечисление.vftСтатусыДокументовСообщений.Отправлен") Тогда 
		НовыйСтастус = ПредопределенноеЗначение("Перечисление.vftСтатусыДокументовСообщений.Черновик");
	ИначеЕсли ТекущийСтатус = ПредопределенноеЗначение("Перечисление.vftСтатусыДокументовСообщений.Закрыт") Тогда
		НовыйСтастус = ПредопределенноеЗначение("Перечисление.vftСтатусыДокументовСообщений.Получен");
	ИначеЕсли ТекущийСтатус = ПредопределенноеЗначение("Перечисление.vftСтатусыДокументовСообщений.Инициировано") Тогда
		НовыйСтастус = ПредопределенноеЗначение("Перечисление.vftСтатусыДокументовСообщений.Черновик");
	ИначеЕсли ТекущийСтатус = ПредопределенноеЗначение("Перечисление.vftСтатусыДокументовСообщений.Проведено") Тогда
		НовыйСтастус = ПредопределенноеЗначение("Перечисление.vftСтатусыДокументовСообщений.Черновик");
	КонецЕсли;
	
	Форма.Объект.Статус = НовыйСтастус;
	
	Если ТипЗнч(СсылкаНаобъект) = Тип("СправочникСсылка.vftДокладыОНесоответствии") 
		И ТекущийСтатус = ПредопределенноеЗначение("Перечисление.vftСтатусыДокументовСообщений.Отправлен") Тогда	
		рарусСУБВызовСервера.СменитьСтатусыПодчиненныхЗамечаний(СсылкаНаобъект, НовыйСтастус);				
	КонецЕсли;
	
	////////	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("РежимЗаписи", РежимЗаписиДокумента.Запись);
	
	Если Форма.Записать(ПараметрыЗаписи) Тогда	
		Форма.Закрыть();                                                                         
	КонецЕсли;
	///////////
		
КонецПроцедуры

Процедура СменитьСтатусОбъекта(Объект, НовыйСтастус)
	
	Объект.Статус = НовыйСтастус;
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("РежимЗаписи", РежимЗаписиДокумента.Запись);
	
	Если Объект.Записать(ПараметрыЗаписи) Тогда	
		Объект.Закрыть();
	КонецЕсли;

КонецПроцедуры

Процедура ПриИзмененииСтатусаВзаимодействияСБерегом(Объект, ИмяКоманды) Экспорт
	
	ДополнительныеПараметры = Новый Структура;

	Если ИмяКоманды = "ОтправитьВБереговоеПодразделение" Тогда
		
		ДополнительныеПараметры.Вставить("Объект", Объект);
		ДополнительныеПараметры.Вставить("Статус", ПредопределенноеЗначение("Перечисление.vftСтатусыДокументовСообщений.Отправлен"));
		
		ТекстВопроса = "Документ будет зарегистрирован к отправке в береговую систему. Продолжить?";
			
	ИначеЕсли  ИмяКоманды = "ЗакрытьДокумент" Тогда
		
		ДополнительныеПараметры.Вставить("Объект", Объект);
		ДополнительныеПараметры.Вставить("Статус", ПредопределенноеЗначение("Перечисление.vftСтатусыДокументовСообщений.Закрыт"));
		
		ТекстВопроса = "Документ будет закрыт. Продолжить?";
	
	КонецЕсли;
	
	ВопросОИзмененииСтатусаПользователю(Объект, ТекстВопроса, ДополнительныеПараметры); 
	
КонецПроцедуры

Процедура ВопросОИзмененииСтатусаПользователю(Объект, ТекстВопроса, ДополнительныеПараметры) Экспорт

	ОписаниеОповещения = Новый ОписаниеОповещения("УстановитьСтатусСогласованияЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);

КонецПроцедуры

Процедура УстановитьСтатусСогласованияЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		УстановитьСтатусСогласованияЗаписатьИЗакрыть(ДополнительныеПараметры);
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура УстановитьСтатусСогласованияЗаписатьИЗакрыть(ДополнительныеПараметры)
		
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("РежимЗаписи", РежимЗаписиДокумента.Запись);
	
	Форма = ДополнительныеПараметры.Объект;
	
	ТекущийСтатус = Форма.Объект.Статус;

	Форма.Объект.Статус = ДополнительныеПараметры.Статус;
	
	Отказ = Не Форма.ПроверитьЗаполнение();

	Если Не Отказ Тогда
		
		Если Форма.Записать(ПараметрыЗаписи) Тогда
			Форма.Закрыть();
		КонецЕсли;		
	Иначе		
		Форма.Модифицированность = Истина; 	
		Форма.Объект.Статус = ТекущийСтатус;
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьПараметрГруппаСудов(Список, ГруппаСудов) Экспорт

	МассивСудовВходящихВГруппу = рарусСУБВызовСервера.ПолучитьМассивСудовВходящихВГруппу(ГруппаСудов);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "МассивСудовВходящихВГруппу", МассивСудовВходящихВГруппу);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "НеИспользоватьОтборСписка", ?(ЗначениеЗаполнено(ГруппаСудов), Ложь, Истина));	

КонецПроцедуры

#КонецОбласти

#Область Печать

Функция ПечатьДокладаОНесоответствииСУБWord(ОписаниеКоманды) Экспорт
	
	Состояние(НСтр("ru = 'Выполняется формирование печатных форм';
	|en = 'Generating print forms'"));
	
	Если ОписаниеКоманды.Идентификатор = "ДокладОНесоответствииСУБMicrosoftWord" Тогда
		ИмяМакета = "ПФ_DOC_ДокладОНесоответствииСУБ";
	ИначеЕсли ОписаниеКоманды.Идентификатор = "РешениеПоДокладуСУБMicrosoftWord" Тогда
		ИмяМакета = "ПФ_DOC_РешениеПоДокладуСУБ";	
	ИначеЕсли ОписаниеКоманды.Идентификатор = "ДонесениеОбУстраненииСУБMicrosoftWord" Тогда
		ИмяМакета = "ПФ_DOC_ДонесениеОбУстраненииСУБ";
	КонецЕсли;
	
	ТипМакета = "doc";
	
	МакетИДанныеОбъекта = УправлениеПечатьюВызовСервера.МакетыИДанныеОбъектовДляПечати("Справочник.vftДокладыОНесоответствии",
	ИмяМакета,
	ОписаниеКоманды.ОбъектыПечати);
	
	ДвоичныеДанныеМакетов = МакетИДанныеОбъекта.Макеты.ДвоичныеДанныеМакетов;
	
	Секции = МакетИДанныеОбъекта.Макеты.ОписаниеСекций;
	
	Для Каждого ДокументСсылка Из ОписаниеКоманды.ОбъектыПечати Цикл
		
		ДанныеОбъекта = МакетИДанныеОбъекта.Данные[ДокументСсылка];
		
		Попытка	
			
			ПечатнаяФорма = УправлениеПечатьюКлиент.ИнициализироватьПечатнуюФорму(ТипМакета);
			Макет = УправлениеПечатьюКлиент.ИнициализироватьМакетОфисногоДокумента(
			ДвоичныеДанныеМакетов[ИмяМакета], ТипМакета, " ");
			
			// Вывод колонтитулов документа.
			Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет, Секции[ИмяМакета]["ВерхнийКолонтитул"]);
			УправлениеПечатьюКлиент.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеОбъекта, Ложь);
			
			Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет, Секции[ИмяМакета]["НижнийКолонтитул"]);
			УправлениеПечатьюКлиент.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеОбъекта, Ложь);
			
			Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет, Секции[ИмяМакета].ШапкаДоклада);
			УправлениеПечатьюКлиент.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеОбъекта, Истина);
			
			///	
			Для Каждого СтрокаТЧ Из ДанныеОбъекта.Замечания Цикл
				
				Масс = Новый Массив;
				Масс.Добавить(СтрокаТЧ);
				
				Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет, Секции[ИмяМакета].Несоответствие);
				УправлениеПечатьюКлиент.ПрисоединитьИЗаполнитьКоллекцию(ПечатнаяФорма, Область, Масс, Ложь);
				
			КонецЦикла;
			
			Если ОписаниеКоманды.Идентификатор = "ДонесениеОбУстраненииСУБMicrosoftWord" Тогда
				
				Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет, Секции[ИмяМакета].Подпись);
				УправлениеПечатьюКлиент.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеОбъекта, Истина);
				
				Для Каждого СтрокаТЧ Из ДанныеОбъекта.Замечания Цикл
					
					Масс = Новый Массив;
					Масс.Добавить(СтрокаТЧ);
					
					Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет, Секции[ИмяМакета].Дополнительно);
					УправлениеПечатьюКлиент.ПрисоединитьИЗаполнитьКоллекцию(ПечатнаяФорма, Область, Масс, Ложь);				
					
				КонецЦикла;
				
			КонецЕсли;				
			//
			
			УправлениеПечатьюКлиент.ПоказатьДокумент(ПечатнаяФорма);
			
		Исключение
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			УправлениеПечатьюКлиент.ОчиститьСсылки(ПечатнаяФорма);
			УправлениеПечатьюКлиент.ОчиститьСсылки(Макет);
			
			Возврат Ложь;
			
		КонецПопытки;
		
		УправлениеПечатьюКлиент.ОчиститьСсылки(ПечатнаяФорма, Ложь);
		УправлениеПечатьюКлиент.ОчиститьСсылки(Макет);
		
	КонецЦикла;
	
	Состояние(НСтр("ru = 'Формирование печатных форм завершено';
	|en = 'Print from generation is completed'"));

КонецФункции

Функция ПечатьСпискаЗамечанийWord(ОписаниеКоманды) Экспорт // ++ rarus zalikh 2021-05-07 [27315]
	
	Состояние(НСтр("ru = 'Выполняется формирование печатных форм';
	|en = 'Generating print forms'"));
	
	Если ОписаниеКоманды.Идентификатор = "СписокЗамечанийMicrosoftWord" Тогда
		ИмяМакета = "ПФ_DOC_СписокЗамечаний";
	КонецЕсли;
	
	ТипМакета = "doc";
	
	МакетИДанныеОбъекта = УправлениеПечатьюВызовСервера.МакетыИДанныеОбъектовДляПечати("Документ.рарусМероприятиеСУБ",
	ИмяМакета,
	ОписаниеКоманды.ОбъектыПечати);
	
	ДвоичныеДанныеМакетов = МакетИДанныеОбъекта.Макеты.ДвоичныеДанныеМакетов;
	
	Секции = МакетИДанныеОбъекта.Макеты.ОписаниеСекций;
	
	Для Каждого ДокументСсылка Из ОписаниеКоманды.ОбъектыПечати Цикл
		
		ДанныеОбъекта = МакетИДанныеОбъекта.Данные[ДокументСсылка];
		
		Попытка	
			
			ПечатнаяФорма = УправлениеПечатьюКлиент.ИнициализироватьПечатнуюФорму(ТипМакета);
			Макет = УправлениеПечатьюКлиент.ИнициализироватьМакетОфисногоДокумента(
			ДвоичныеДанныеМакетов[ИмяМакета], ТипМакета);
			
			// Вывод колонтитулов документа.
			Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет, Секции[ИмяМакета]["ВерхнийКолонтитул"]);
			УправлениеПечатьюКлиент.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеОбъекта, Ложь);
			
			Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет, Секции[ИмяМакета]["НижнийКолонтитул"]);
			УправлениеПечатьюКлиент.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеОбъекта, Ложь);
			
			Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет, Секции[ИмяМакета].Шапка);
			УправлениеПечатьюКлиент.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеОбъекта, Истина);
			
			Для Каждого СтрокаТЧ Из ДанныеОбъекта.Замечания Цикл
				
				Масс = Новый Массив;
				Масс.Добавить(СтрокаТЧ);
				
				Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет, Секции[ИмяМакета].Замечания);
				УправлениеПечатьюКлиент.ПрисоединитьИЗаполнитьКоллекцию(ПечатнаяФорма, Область, Масс, Ложь);
				
			КонецЦикла;
						
			Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет, Секции[ИмяМакета].Подпись);
			УправлениеПечатьюКлиент.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеОбъекта, Истина);
			
			УправлениеПечатьюКлиент.ПоказатьДокумент(ПечатнаяФорма);
			
		Исключение
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			УправлениеПечатьюКлиент.ОчиститьСсылки(ПечатнаяФорма);
			УправлениеПечатьюКлиент.ОчиститьСсылки(Макет);
			
			Возврат Ложь;
			
		КонецПопытки;
		
		УправлениеПечатьюКлиент.ОчиститьСсылки(ПечатнаяФорма, Ложь);
		УправлениеПечатьюКлиент.ОчиститьСсылки(Макет);
		
	КонецЦикла;
	
	Состояние(НСтр("ru = 'Формирование печатных форм завершено';
	|en = 'Print from generation is completed'"));
	
КонецФункции // -- rarus zalikh 2021-05-07 [27315]

#КонецОбласти
