#Область РегистрацияОбмена

Процедура ПередОбработкой(ИмяПланаОбмена, Отказ, Объект, ОбъектМетаданных, Выгрузка, ПРО) Экспорт
	
	Если ИмяПланаОбмена = "впОбменТОиР20СМ31" тогда
		
		Если ТипЗнч(Объект) = Тип("ДокументСсылка.vftСообщениеОПотенциальномИнциденте")
			Или ТипЗнч(Объект) = Тип("ДокументОбъект.vftСообщениеОПотенциальномИнциденте") Тогда
			
			ПередОбработкойСообщениеОПотенциальномИнциденте(ИмяПланаОбмена, Отказ, Объект, ОбъектМетаданных, Выгрузка, ПРО);
			
		ИначеЕсли ТипЗнч(Объект) = Тип("СправочникОбъект.vftСообщениеОПотенциальномИнцидентеПрисоединенныеФайлы")
			Или ТипЗнч(Объект) = Тип("СправочникСсылка.vftСообщениеОПотенциальномИнцидентеПрисоединенныеФайлы") тогда
			
			
		ИначеЕсли ТипЗнч(Объект) = Тип("СправочникОбъект.vftДокладыОНесоответствии") 
			Или ТипЗнч(Объект) = Тип("СправочникСсылка.vftДокладыОНесоответствии") Тогда
			
			ПередОбработкойДокладыОНесоответствии(ИмяПланаОбмена, Отказ, Объект, ОбъектМетаданных, Выгрузка, ПРО);
			
		ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.vftНесоответствия")
			Или ТипЗнч(Объект) = Тип("СправочникОбъект.vftНесоответствия") Тогда	
			
			ПередОбработкойНесоответствия(ИмяПланаОбмена, Отказ, Объект, ОбъектМетаданных, Выгрузка, ПРО);
			
		ИначеЕсли ТипЗнч(Объект) = Тип("ДокументСсылка.рарусОтчетСУБ")
			Или ТипЗнч(Объект) = Тип("ДокументОбъект.рарусОтчетСУБ") Тогда	
			
			ПередОбработкойОтчетаСУБ(ИмяПланаОбмена, Отказ, Объект, ОбъектМетаданных, Выгрузка, ПРО);
				
		ИначеЕсли ТипЗнч(Объект) = Тип("ДокументСсылка.vftДокладОСостоянииБезопасности")
			Или ТипЗнч(Объект) = Тип("ДокументОбъект.vftДокладОСостоянииБезопасности") Тогда	
			
			ПередОбработкойДокладаОСостоянииБезопасности(ИмяПланаОбмена, Отказ, Объект, ОбъектМетаданных, Выгрузка, ПРО);
			
		ИначеЕсли ТипЗнч(Объект) = Тип("ДокументСсылка.vftАнализСУБ")
			Или ТипЗнч(Объект) = Тип("ДокументОбъект.vftАнализСУБ") Тогда	 
			
			ПередОбработкойАнализаСУБКапитаном(ИмяПланаОбмена, Отказ, Объект, ОбъектМетаданных, Выгрузка, ПРО);
			
		ИначеЕсли ТипЗнч(Объект) = Тип("ДокументСсылка.рарусМероприятиеСУБ")
			Или ТипЗнч(Объект) = Тип("ДокументОбъект.рарусМероприятиеСУБ") Тогда	 
			
			ПередОбработкойМероприятийСУБ(ИмяПланаОбмена, Отказ, Объект, ОбъектМетаданных, Выгрузка, ПРО);
					
		ИначеЕсли ТипЗнч(Объект) = Тип("ДокументСсылка.рарусУчение")
			Или ТипЗнч(Объект) = Тип("ДокументОбъект.рарусУчение") Тогда	 
			
			ПередОбработкойУчений(ИмяПланаОбмена, Отказ, Объект, ОбъектМетаданных, Выгрузка, ПРО);
					
		ИначеЕсли ТипЗнч(Объект) = Тип("СправочникОбъект.vftАнализСУБПрисоединенныеФайлы")
			Или ТипЗнч(Объект) = Тип("СправочникСсылка.vftАнализСУБПрисоединенныеФайлы") Тогда	 
			
			ПередОбработкойПрисоединенныхФайловАнализаСУБ(ИмяПланаОбмена, Отказ, Объект, ОбъектМетаданных, Выгрузка, ПРО);
					
		ИначеЕсли ТипЗнч(Объект) = Тип("СправочникОбъект.vftДокладОСостоянииБезопасностиПрисоединенныеФайлы")
			Или ТипЗнч(Объект) = Тип("СправочникСсылка.vftДокладОСостоянииБезопасностиПрисоединенныеФайлы") Тогда	
			
			ПередОбработкойПрисоединенныхФайловДокладОсостоянииБезопасности(ИмяПланаОбмена, Отказ, Объект, ОбъектМетаданных, Выгрузка, ПРО);
			
			//rarus_AfoD 23.09.2021 < 
		ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.Пользователи")
			Или ТипЗнч(Объект) = Тип("СправочникОбъект.Пользователи") Тогда	
			
			ПередОбработкойПользователей(ИмяПланаОбмена, Отказ, Объект, ОбъектМетаданных, Выгрузка, ПРО);
			//rarus_AfoD 23.09.2021 > 
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Процедура ПослеОбработки(ИмяПланаОбмена, Отказ, Объект, ОбъектМетаданных, Выгрузка, Получатели) Экспорт

	Если ИмяПланаОбмена = "впОбменТОиР20СМ31" тогда
		
		Если ТипЗнч(Объект) = Тип("ДокументОбъект.vftСообщениеОПотенциальномИнциденте")
			ИЛИ ТипЗнч(Объект) = Тип("ДокументСсылка.vftСообщениеОПотенциальномИнциденте") тогда
			
			ПослеОбработкиСообщениеОПотенциальномИнциденте(ИмяПланаОбмена, Отказ, Объект, ОбъектМетаданных, Выгрузка, Получатели);										
			
		КонецЕсли;	
		
	ИначеЕсли ИмяПланаОбмена = "Полный" тогда
		
		Если ТипЗнч(Объект) = Тип("ДокументОбъект.vftСообщениеОПотенциальномИнциденте")
			ИЛИ ТипЗнч(Объект) = Тип("ДокументСсылка.vftСообщениеОПотенциальномИнциденте") тогда
													
		КонецЕсли;
	КонецЕсли;	


КонецПроцедуры

Процедура ПередОбработкойСообщениеОПотенциальномИнциденте(ИмяПланаОбмена, Отказ, Объект, ОбъектМетаданных, Выгрузка, ПРО) 
	
	Отказ = Истина;	
	
	Если Объект.Статус = Перечисления.vftСтатусыДокументовСообщений.Отправлен 
		  Или Объект.Статус = Перечисления.vftСтатусыДокументовСообщений.Закрыт Тогда
		Отказ = Ложь; 
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередОбработкойСообщениеОПотенциальномИнцидентеПрисоединенныеФайлы(ИмяПланаОбмена, Отказ, Объект, ОбъектМетаданных, Выгрузка, ПРО) 

	Если ЗначениеЗаполнено(Объект.ВладелецФайла) тогда
		
		Документы.vftСообщениеОПотенциальномИнциденте.ПередОбработкой(ИмяПланаОбмена, Отказ, Объект.ВладелецФайла, ОбъектМетаданных, Выгрузка, ПРО);	
	
	КонецЕсли;
		
КонецПроцедуры

Процедура ПередОбработкойДокладыОНесоответствии(ИмяПланаОбмена, Отказ, Объект, ОбъектМетаданных, Выгрузка, ПРО)
	
	Отказ = ПроверитьГотовностьОбъектаКОбмену(Объект);
	
	//Если Не Отказ Тогда
	//	ЗарегестрироватьЗамечаниеКОбмену(Объект);
	//	Отказ = ПроверитьГотовностьОбъектаКОбмену(Объект);
	//КонецЕсли;
	
КонецПроцедуры

Процедура ПередОбработкойНесоответствия(ИмяПланаОбмена, Отказ, Объект, ОбъектМетаданных, Выгрузка, ПРО)
	
	Отказ = ПроверитьГотовностьОбъектаКОбмену(Объект);
	
КонецПроцедуры

Процедура ПередОбработкойДокладаОСостоянииБезопасности(ИмяПланаОбмена, Отказ, Объект, ОбъектМетаданных, Выгрузка, ПРО)
	
	Отказ = ПроверитьГотовностьОбъектаКОбмену(Объект);
	
КонецПроцедуры

Процедура ПередОбработкойАнализаСУБКапитаном(ИмяПланаОбмена, Отказ, Объект, ОбъектМетаданных, Выгрузка, ПРО)
	
	Отказ = ПроверитьГотовностьОбъектаКОбмену(Объект);
	
КонецПроцедуры

Процедура ПередОбработкойМероприятийСУБ(ИмяПланаОбмена, Отказ, Объект, ОбъектМетаданных, Выгрузка, ПРО)
	
	Отказ = ПроверитьГотовностьОбъектаКОбмену(Объект);
	
КонецПроцедуры

Процедура ПередОбработкойУчений(ИмяПланаОбмена, Отказ, Объект, ОбъектМетаданных, Выгрузка, ПРО)
	
	Отказ = ПроверитьГотовностьОбъектаКОбмену(Объект);
	
КонецПроцедуры

Процедура ПередОбработкойОтчетаСУБ(ИмяПланаОбмена, Отказ, Объект, ОбъектМетаданных, Выгрузка, ПРО)
	
	Отказ = ПроверитьГотовностьОбъектаКОбмену(Объект);
	
КонецПроцедуры

//rarus_AfoD 23.09.2021 < 
Процедура ПередОбработкойПользователей(ИмяПланаОбмена, Отказ, Объект, ОбъектМетаданных, Выгрузка, ПРО)
	
	Отказ = ПользовательБереговогоМодуля(Объект) ИЛИ Объект.Недействителен;
	
КонецПроцедуры
//rarus_AfoD 23.09.2021 > 

#Область ПрисоединенныеФайлы

Процедура ПередОбработкойПрисоединенныхФайловАнализаСУБ(ИмяПланаОбмена, Отказ, Объект, ОбъектМетаданных, Выгрузка, ПРО)
	
КонецПроцедуры

Процедура ПередОбработкойПрисоединенныхФайловДокладОсостоянииБезопасности(ИмяПланаОбмена, Отказ, Объект, ОбъектМетаданных, Выгрузка, ПРО)
	
КонецПроцедуры

#КонецОбласти

Процедура ПослеОбработкиСообщениеОПотенциальномИнциденте(ИмяПланаОбмена, Отказ, Объект, ОбъектМетаданных, Выгрузка, Получатели)

	ВыборкаФайлы = Справочники.vftСообщениеОПотенциальномИнцидентеПрисоединенныеФайлы.Выбрать(,,Новый Структура("ВладелецФайла", Объект.Ссылка));	
	
	Пока ВыборкаФайлы.Следующий() цикл
		
		впОбменТОиР20СМ31Обмен.ЗарегистрироватьИзмененияДанных(Получатели, ВыборкаФайлы.Ссылка, Ложь);
		
	КонецЦикла;	

КонецПроцедуры

#Область Прочее

Функция ПроверитьГотовностьОбъектаКОбмену(Объект)
			
	Отказ = Истина;	
	
	Если Объект.Статус = Перечисления.vftСтатусыДокументовСообщений.Отправлен 
		  Или Объект.Статус = Перечисления.vftСтатусыДокументовСообщений.Закрыт
		  Или Объект.Статус = Перечисления.vftСтатусыДокументовСообщений.Проведено Тогда
		Отказ = Ложь; 
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции

Процедура ДозаполнитьЗамечание(Объект, Ссылка, ОбъектНайден, ОбъектМодифицирован, ПараметрыОбъекта, Отказ) Экспорт
	
	ТаблицаПодразделенийПриемник = Объект.ОтветственныеПодразделения;
	ТаблицаПодразделенийЗаПредупреждающиеДействия = Объект.ОтветственныеПодразделенияЗаПредупреждающиеДействия;
	
	ТаблицаЗоныОтветственности = Объект.ЗоныОтветственности;
	
	СодержаниеКорректирующихДействий = "";
	
	Для Каждого СтрокаТч Из ТаблицаЗоныОтветственности Цикл
		
		НайденноеПодразделение = Справочники.vftПодразделенияКомпании.НайтиПоНаименованию(СокрЛП(Строка(СтрокаТч.ЗанаОтветственности)));
		СодержаниеКорректирующихДействий = СодержаниеКорректирующихДействий +  СтрокаТч.КорректирующиеДействия+ "; ";	
		
		Если ЗначениеЗаполнено(НайденноеПодразделение) Тогда
			НоваяСтрока = ТаблицаПодразделенийПриемник.Добавить();	
			НоваяСтрока.Подразделение = НайденноеПодразделение;
		КонецЕсли;
		
	КонецЦикла;
		
	НайденноеПодразделениеПредупреждающиеДействия 
	                =  Справочники.vftПодразделенияКомпании.НайтиПоНаименованию(СокрЛП(Строка(Объект.ОтветственныйЗаПредупреждающиеДействия)));
	Если ЗначениеЗаполнено(НайденноеПодразделениеПредупреждающиеДействия) Тогда		  
		НоваяСтрокаПодразделений = ТаблицаПодразделенийЗаПредупреждающиеДействия.Добавить();		  
		НоваяСтрокаПодразделений.Подразделение =  НайденноеПодразделениеПредупреждающиеДействия;
	КонецЕсли;
	
	Объект.СодержаниеКорректирующийхДействий = СодержаниеКорректирующихДействий;
		
КонецПроцедуры

//rarus_AfoD 23.09.2021 < 
Функция ПользовательБереговогоМодуля(ПользовательСсылка)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ГруппаПользователей", 	Справочники.ГруппыПользователей.ПользователиБереговогоМодуля);
	Запрос.УстановитьПараметр("Пользователь", 			?(ТипЗнч(ПользовательСсылка) = Тип("СправочникОбъект.Пользователи"), ПользовательСсылка.Ссылка, ПользовательСсылка));
	
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	СоставыГруппПользователей.Пользователь КАК Пользователь
	               |ИЗ
	               |	РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
	               |ГДЕ
	               |	СоставыГруппПользователей.ГруппаПользователей = &ГруппаПользователей
	               |	И СоставыГруппПользователей.Пользователь = &Пользователь";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции // ПользовательБереговогоМодуля()
//rarus_AfoD 23.09.2021 > 

#КонецОбласти

#КонецОбласти

