
Процедура рарусРассчитатьСтатусЗаявкиНаСнабжениеПриПроведенииОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт
	
	РассчитатьСтатусЗаявкиНаСнабжениеПриПроведенииОбработкаПроведения(Источник, Отказ, РежимПроведения);	
	
КонецПроцедуры

Процедура РассчитатьСтатусЗаявкиНаСнабжениеПриПроведенииОбработкаПроведения(Источник, Отказ, РежимПроведения)
	
	СтатусОприходыванияУстановить = Неопределено;
	Если Источник.ДополнительныеСвойства.Свойство("СтатусОприходыванияУстановить", СтатусОприходыванияУстановить)
		И СтатусОприходыванияУстановить = Истина тогда
		
		// ++ rarus makole 2021-03-16
		//рарусЗаявкаНаСнабжениеСервер.СформироватьПриходТМЦИпровести(Источник.Ссылка, Отказ);
		рарусЗаявкаНаСнабжениеСервер.СформироватьПриходТМЦИпровести(Источник.Ссылка, Отказ, Источник.ДополнительныеСвойства);
		// -- rarus makole 2021-03-16
	
	КонецЕсли;
	
КонецПроцедуры	

// Устарела. Используется расчет через рег задание
Процедура РассчитатьСостояниеДокумента(Источник, Отказ)
	
	Если Источник.Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;	

	рарусЗаявкаНаСнабжениеСтатусы.РассчитатьСостояниеДокумента(Источник.Ссылка, Отказ);
	
КонецПроцедуры	

Процедура рарусПостановкаВОчередьЗаявкиНаСнабжениеОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт
	
	рарусЗаявкаНаСнабжениеСостояния.ДобавитьЗаявкуНаСнабжениеВОчередь(Источник.Ссылка, Отказ);	
	
КонецПроцедуры

Процедура рарусПостановкаВОчередьЗаявкиНаСнабжениеОтменаПроведенияОбработкаУдаленияПроведения(Источник, Отказ) Экспорт
	
	рарусЗаявкаНаСнабжениеСостояния.ДобавитьЗаявкуНаСнабжениеВОчередь(Источник.Ссылка, Отказ);	
	
КонецПроцедуры
