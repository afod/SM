

#Область СформироватьФайлJSON


&НаСервере
Функция СформированныйФайлJSON(Документ) Экспорт
	
	//Создали запись ЗаписьJSON
    ЗаписьJSON = Новый ЗаписьJSON;
	НастройкиСериализацииJSON = Новый НастройкиСериализацииJSON;
	НастройкиСериализацииJSON.ФорматСериализацииДаты = ФорматДатыJSON.ISO;
    //Задаем параметры без переноса строк, можно и с переносом, как кому нравится
    тПараметрыJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет," ", Истина);  
    ЗаписьJSON.УстановитьСтроку(тПараметрыJSON); 
			
	Данные = СформированныеДанные(Документ);
			
    ЗаписатьJSON(ЗаписьJSON, Данные, НастройкиСериализацииJSON, , Документ);
    //Здесь нам платформа переделала нашу сложную структуру в строку данных в формате JSON 
    СтрокаJS = ЗаписьJSON.Закрыть();
	
	Возврат СтрокаJS;
	
КонецФункции

&НаСервере
Функция СформированныеДанные(Документ)
	
	ДанныеДокумента = Новый Структура;
	ДанныеДокумента.Вставить("ID",ФункцияПреобразованияЗаписи(Документ));
	РезультатЗапроса = ДанныеДокумента(Документ); 

	ОсновныеРеквизиты 		= РезультатЗапроса[0].Выгрузить();
	ДинамическиеРеквизиты 	= РезультатЗапроса[1].Выгрузить();
	Стоянки 				= РезультатЗапроса[2].Выгрузить();
	Грузы 					= РезультатЗапроса[3].Выгрузить();
	ЗапасыТоплива			= РезультатЗапроса[4].Выгрузить();
	
	//ПреобразоватьДанные(ОсновныеРеквизиты);
	//ПреобразоватьДанные(ДинамическиеРеквизиты);
	//ПреобразоватьДанные(Стоянки);
	//ПреобразоватьДанные(Грузы);
	//ПреобразоватьДанные(ЗапасыТоплива);

	СтруктураДанных = ПреобразованныеВМассивСтруктур(ОсновныеРеквизиты);
	ПреобразоватьДанные(СтруктураДанных);
	ДанныеДокумента.Вставить("ОсновныеРеквизиты", СтруктураДанных);
	
	СтруктураДанных = ПреобразованныеВМассивСтруктур(ДинамическиеРеквизиты);
	ПреобразоватьДанные(СтруктураДанных);
	ДанныеДокумента.Вставить("ДинамическиеРеквизиты", СтруктураДанных);

	СтруктураДанных = ПреобразованныеВМассивСтруктур(Стоянки);
	ПреобразоватьДанные(СтруктураДанных);
	ДанныеДокумента.Вставить("Стоянки", СтруктураДанных);
	
	СтруктураДанных = ПреобразованныеВМассивСтруктур(Грузы);
	ПреобразоватьДанные(СтруктураДанных);
	ДанныеДокумента.Вставить("Грузы", СтруктураДанных);

	СтруктураДанных = ПреобразованныеВМассивСтруктур(ЗапасыТоплива);
	ПреобразоватьДанные(СтруктураДанных);
	ДанныеДокумента.Вставить("ЗапасыТоплива", СтруктураДанных);

	
	Возврат ДанныеДокумента; 
	
КонецФункции

&НаСервере
Процедура ПреобразоватьДанные(Данные)

	Для каждого СтрокаДанных Из Данные Цикл
	
		
		Для каждого Строка Из СтрокаДанных Цикл
		
			СтрокаДанных[Строка.Ключ] = ФункцияПреобразованияЗаписи(Строка.Значение);
				
		КонецЦикла;
	
	КонецЦикла;
	

КонецПроцедуры


&НаСервере
Функция ПреобразованныеВМассивСтруктур(ДанныеТЗ)
	
	
	СформированныеДанные = Новый Массив;
	
	
	
	Для каждого Строка Из ДанныеТЗ Цикл
		// ++ rarus Чернавин Г.К 15.04.2020
		СтрокаТЗ = Новый Структура;
		// -- rarus Чернавин Г.К 15.04.2020
		Для каждого Колонка Из ДанныеТЗ.Колонки Цикл
			
			СтрокаТЗ.Вставить(Колонка.Имя, Строка [Колонка.Имя]); 
			
		КонецЦикла;
		
		СформированныеДанные.Добавить(СтрокаТЗ); 
		
	КонецЦикла;
	
	Возврат СформированныеДанные; 
	
КонецФункции


&НаСервере
Функция ФункцияПреобразованияЗаписи(Значение) Экспорт  //(Свойство, Значение, ДополнительныеПараметры, Отказ)
	
	Если ТипЗнч(Значение) = Тип("УникальныйИдентификатор") Тогда
		
        Результат =  Строка(Значение);
		
	ИначеЕсли Перечисления.ТипВсеСсылки().СодержитТип(ТипЗнч(Значение)) Тогда
		
        Результат = Строка(Значение);
		
	ИначеЕсли ОбщегоНазначения.ЭтоСсылка(ТипЗнч(Значение))  Тогда
		
        Результат = Строка(Значение.УникальныйИдентификатор());
		
	Иначе
		
		Результат = Значение; 
		
	КонецЕсли;

   Возврат Результат;
	
КонецФункции

&НаСервере
Функция ДанныеДокумента(Документ)
		
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	vftРДО.Дата КАК Дата,
		|	vftРДО.Проведен КАК Проведен,
		|	vftРДО.Судно КАК Судно,
		|	vftРДО.ВидОперации КАК ВидОперации,
		|	vftРДО.Рейс КАК Рейс,
		|	vftРДО.Шаблон КАК Шаблон,
		|	vftРДО.СтатусОтправления КАК СтатусОтправления,
		|	vftРДО.Сообщение КАК Сообщение,
		|	vftРДО.Ответственный КАК Ответственный,
		|	vftРДО.Комментарий КАК Комментарий,
		|	vftРДО.ИмяФайла КАК ИмяФайла,
		|	vftРДО.Шаблон.КодШаблона КАК КодШаблона
		|ИЗ
		|	Документ.vftРДО КАК vftРДО
		|ГДЕ
		|	vftРДО.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	vftРДО.Ссылка КАК Ссылка,
		|	vftРДО.ВерсияДанных КАК ВерсияДанных,
		|	vftРДО.ПометкаУдаления КАК ПометкаУдаления,
		|	vftРДО.ДислокацияКм КАК ДислокацияКм,
		|	vftРДО.ДислокацияБассейн КАК ДислокацияБассейн,
		|	vftРДО.ДислокацияКоординаты КАК ДислокацияКоординаты,
		|	vftРДО.ЗапасВоды КАК ЗапасВоды,
		|	vftРДО.ПунктСледования КАК ПунктСледования,
		//++ rarus isaeva 16.04.2021
		|	vftРДО.УточнениеМестонахожденияСтрока КАК УточнениеМестонахожденияПриПодаче,
		//-- rarus isaeva 16.04.2021
		//++ rarus isaeva 15.07.2021
		//Перепутаны ЕТА и ЕТАПункта в двух базах: СМ и ERP
		//|	vftРДО.ETA КАК ETA,
		|	vftРДО.ETA КАК ETAПункта,
		//-- rarus isaeva 15.07.2021
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(vftРДО.НаправлениеВетра) = ТИП(СТРОКА)
		|			ТОГДА vftРДО.НаправлениеВетра
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК НаправлениеВетра,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(vftРДО.НаправлениеВетра) = ТИП(Перечисление.рарусНаправленияВетра)
		|			ТОГДА ПРЕДСТАВЛЕНИЕ(vftРДО.НаправлениеВетра)
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК НВСтрокой,
		|	vftРДО.СкоростьВетра КАК СкоростьВетра,
		|	vftРДО.Волнение КАК Волнение,
		|	vftРДО.СредняяСкоростьДвижения КАК СредняяСкоростьДвижения,
		|	vftРДО.ПройденноеРасстояние КАК ПройденноеРасстояние,
		|	vftРДО.ETB КАК ETB,
		|	vftРДО.ETCommenced КАК ETCommenced,
		|	vftРДО.ETCompleted КАК ETCompleted,
		|	vftРДО.ETS КАК ETS,
		|	vftРДО.ОсадкаКорма КАК ОсадкаКорма,
		|	vftРДО.ОсадкаНос КАК ОсадкаНос,
		|	vftРДО.ОсадкаМидель КАК ОсадкаМидель,
		|	vftРДО.ПрогнозноеВремяЗавершенияСтоянки КАК ПрогнозноеВремяЗавершенияСтоянки,
		|	vftРДО.ИнформацияПоОбслуживанию КАК ИнформацияПоОбслуживанию,
		|	vftРДО.Примечание КАК Примечание,
		|	vftРДО.СредняяТемператураГрузаПоСудовымЗамерам КАК СредняяТемператураГрузаПоСудовымЗамерам,
		|	vftРДО.ПлотностьГруза КАК ПлотностьГруза,
		|	vftРДО.ВидСтоянки КАК ВидСтоянки,
		|	vftРДО.ВремяЗавершенияСтоянки КАК ВремяЗавершенияСтоянки,
		|	vftРДО.ДислокацияПункт КАК ДислокацияПункт,
		|	vftРДО.Провизия КАК Провизия,
		|	vftРДО.ТранзитныйПункт КАК ТранзитныйПункт,
		|	vftРДО.ТемператураГрузаПодогрев КАК ТемператураГрузаПодогрев,
		|	vftРДО.ПройденноеРасстояниеОтПунктаОбработки КАК ПройденноеРасстояниеОтПунктаОбработки,
		|	vftРДО.МестоПолученияТоплива КАК МестоПолученияТоплива,
		|	vftРДО.КоличествоIFOЗаказ КАК КоличествоIFOЗаказ,
		|	vftРДО.КоличествоMGOЗаказ КАК КоличествоMGOЗаказ,
		|	vftРДО.КоличествоMDOЗаказ КАК КоличествоMDOЗаказ,
		|	vftРДО.КоличествоMDOЗаказВсп КАК КоличествоMDOЗаказВсп,
		|	vftРДО.КоличествоМаслаЗаказ КАК КоличествоМаслаЗаказ,
		|	vftРДО.КоличествоIFOПолучено КАК КоличествоIFOПолучено,
		|	vftРДО.КоличествоMGOПолучено КАК КоличествоMGOПолучено,
		|	vftРДО.КоличествоMDOПолучено КАК КоличествоMDOПолучено,
		|	vftРДО.КоличествоMDOПолученоВсп КАК КоличествоMDOПолученоВсп,
		|	vftРДО.КоличествоМаслаПолучено КАК КоличествоМаслаПолучено,
		|	vftРДО.МестоПолученияКОФ КАК МестоПолученияКОФ,
		|	vftРДО.КоличествоВодыЗаказ КАК КоличествоВодыЗаказ,
		|	vftРДО.КоличествоКОФЗаказ КАК КоличествоКОФЗаказ,
		|	vftРДО.КоличествоВодыПолучено КАК КоличествоВодыПолучено,
		|	vftРДО.КоличествоКОФПолучено КАК КоличествоКОФПолучено,
		|	vftРДО.КоличествоМаслаВеретенноеЗаказ КАК КоличествоМаслаВеретенноеЗаказ,
		|	vftРДО.КоличествоМаслаВеретенноеПолучено КАК КоличествоМаслаВеретенноеПолучено,
		//++ rarus isaeva 15.07.2021
		//Перепутаны ЕТА и ЕТАПункта в двух базах: СМ и ERP
		//|	vftРДО.ETAПункта КАК ETAПункта,
		|	vftРДО.ETAПункта КАК ETA,
		//-- rarus isaeva 15.07.2021
		|	vftРДО.ВремяПолученияТопливаПлан КАК ВремяПолученияТопливаПлан,
		|	vftРДО.ВремяПолученияКОФПлан КАК ВремяПолученияКОФПлан,
		|	vftРДО.Бункеровщик КАК Бункеровщик,
		|	vftРДО.Сборщик КАК Сборщик,
		|	vftРДО.ДислокацияОсобая КАК ДислокацияОсобая,
		|	vftРДО.ПараметрNS КАК ПараметрNS,
		|	vftРДО.ПараметрWE КАК ПараметрWE,
		|	vftРДО.КоординатыN КАК КоординатыN,
		|	vftРДО.КоординатыE КАК КоординатыE,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА vftРДО.ДислокацияПункт <> ЗНАЧЕНИЕ(Справочник.vftПунктыСледования.ПустаяСсылка)
		|				ТОГДА vftРДО.ДислокацияПункт.ШифрРДО
		|			КОГДА vftРДО.ДислокацияКоординаты <> """"
		|				ТОГДА vftРДО.ДислокацияКоординаты
		|		КОНЕЦ, """") КАК ДислокацияСтрокой,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА vftРДО.ПунктСледования <> ЗНАЧЕНИЕ(Справочник.vftПунктыСледования.ПустаяСсылка)
		|				ТОГДА vftРДО.ПунктСледования.ШифрРДО
		|		КОНЕЦ, """") КАК ПунктСледованияСтрокой
		|ИЗ
		|	Документ.vftРДО КАК vftРДО
		|ГДЕ
		|	vftРДО.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	vftРДОСтоянки.ВидСтоянки КАК ВидСтоянки,
		|	vftРДОСтоянки.Время КАК Время,
		// ++ rarus Чернавин Г.К 19.02.2021 № 27333
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(vftРДОСтоянки.ПунктСтоянки) = ТИП(Справочник.vftПунктыСледования)
		|			ТОГДА vftРДОСтоянки.ПунктСтоянки
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.vftПунктыСледования.ПустаяСсылка)
		|	КОНЕЦ КАК ПунктСтоянки,
		// -- rarus Чернавин Г.К 19.02.2021
		|	vftРДОСтоянки.Начало КАК Начало,
		|	vftРДОСтоянки.Окончание КАК Окончание,
		|	vftРДОСтоянки.Примечание КАК Примечание,
		// ++ rarus Чернавин Г.К 19.02.2021 № 27333
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(vftРДОСтоянки.ПунктСтоянки) = ТИП(СТРОКА)
		|			ТОГДА vftРДОСтоянки.ПунктСтоянки
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК ПунктСтоянкиСтрокой
		// -- rarus Чернавин Г.К 19.02.2021
		|ИЗ
		|	Документ.vftРДО.Стоянки КАК vftРДОСтоянки
		|ГДЕ
		|	vftРДОСтоянки.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	vftРДОГрузы.Груз КАК Груз,
		|	vftРДОГрузы.КоносаментноеКоличествоГруза КАК КоносаментноеКоличество,
		|	vftРДОГрузы.КоличествоГрузаПоСудовымЗамерам КАК КоличествоГрузаПоСудовымЗамерам,
		|	vftРДОГрузы.КоличествоГрузаПоСудовымЗамерамСVEF КАК КоличествоГрузаПоСудовымЗамерамСVEF,
		|	vftРДОГрузы.КоличествоГрузаПоСудовымЗамерамСдано КАК КоличествоГрузаПоСудовымЗамерамСдано,
		|	vftРДОГрузы.КоличествоГрузаПоСудовымЗамерамСданоСVEF КАК КоличествоГрузаПоСудовымЗамерамСданоСVEF,
		|	vftРДОГрузы.КоличествоГрузаСдано КАК КоличествоГрузаСдано,
		|	vftРДОГрузы.СредняяТемператураГрузаПоСудовымЗамерам КАК СредняяТемператураГрузаПоСудовымЗамерам,
		|	vftРДОГрузы.ПлотностьГруза КАК ПлотностьГруза,
		|	vftРДОГрузы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		// ++ rarus Чернавин Г.К 17.02.2021 № 27215
		|	ВЫБОР
		|		КОГДА vftРДОГрузы.Секция = ЗНАЧЕНИЕ(Справочник.vftСуда.ПустаяСсылка)
		|			ТОГДА vftРДОГрузы.Ссылка.Судно
		|		ИНАЧЕ vftРДОГрузы.Секция
		|	КОНЕЦ КАК Судно
		// -- rarus Чернавин Г.К 17.02.2021
		|ИЗ
		|	Документ.vftРДО.Грузы КАК vftРДОГрузы
		|ГДЕ
		|	vftРДОГрузы.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	vftРДО.ЗапасТопливаСМТ КАК ЗапасТопливаСМТ,
		|	vftРДО.ЗапасТопливаМТ01 КАК ЗапасТопливаМТ01,
		|	vftРДО.ЗапасТопливаМТ05 КАК ЗапасТопливаМТ05,
		|	vftРДО.ЗапасТопливаМТ15 КАК ЗапасТопливаМТ15,
		|	vftРДО.ЗапасМаслаГД КАК ЗапасМаслаГД,
		|	vftРДО.ЗапасМаслаДГ КАК ЗапасМаслаДГ,
		|	vftРДО.ЗапасМаслаРРП КАК ЗапасМаслаРРП
		|ИЗ
		|	Документ.vftРДО КАК vftРДО
		|ГДЕ
		|	vftРДО.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Документ);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Возврат РезультатЗапроса;
	
КонецФункции

&НаСервере
Функция ВнешниеДанные(Судно, Ошибка)
	
	Результат = "";
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	vftВнешниеДанные.ВнешнийИсточник КАК ВнешнийИсточник,
		|	vftВнешниеДанные.Судно КАК Судно,
		|	vftВнешниеДанные.WSURLВебСервиса КАК WSURLВебСервиса,
		|	vftВнешниеДанные.WSURLПространстваИменСервиса КАК WSURLПространстваИменСервиса,
		|	vftВнешниеДанные.WSИмяПользователя КАК WSИмяПользователя,
		|	vftВнешниеДанные.WSИмяСервиса КАК WSИмяСервиса,
		|	vftВнешниеДанные.WSПароль КАК WSПароль
		|ИЗ
		|	РегистрСведений.vftВнешниеДанные КАК vftВнешниеДанные
		|ГДЕ
		|	vftВнешниеДанные.ВнешнийИсточник = &ВнешнийИсточник
		|	И vftВнешниеДанные.Судно = &Судно";
	
	Запрос.УстановитьПараметр("ВнешнийИсточник", Справочники.vftВнешниеИсточники.WEBСервис);
	Запрос.УстановитьПараметр("Судно", Судно);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
			
	Если Выборка.Следующий() Тогда
		
		Результат = Выборка;
		
	Иначе
		
		Ошибка = "Для судна не заполнены данные в Регистре сведений Внешние данные"
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПолучитьСтруктуруНастройкиВебСервиса()Экспорт 
	
	Настройки = Новый Структура;
	Настройки.Вставить("WSURLВебСервиса",);
	Настройки.Вставить("WSИмяПользователя",);
	Настройки.Вставить("WSИмяСервиса",);
	Настройки.Вставить("WSПароль",);
	Настройки.Вставить("HTTPСервис",);
	Настройки.Вставить("WSURLПространстваИменСервиса",);

	Возврат Настройки; 
КонецФункции

#КонецОбласти

