#Область ПрограммныйИнтерфейс

Функция СоздатьИзменениеСтатусаТМЦНаОснованииПриходТМЦ(ДокументОснование, ПараметрыВыполнения) Экспорт
	
	КатегорииВыдаваемые = рарусИмущественныйУчетВызовСервера.КатегорииНоменклатурыДокументаВыдаваемыеЭкипажу(ДокументОснование);
	
	Если КатегорииВыдаваемые.Количество() > 0 Тогда
		
		СоздатьДокументыПриходаРасходаИзмененияСтатусаПоКатегориямНоменклатуры("рарусИзменениеСтатусаТМЦ", 
			ДокументОснование, КатегорииВыдаваемые); 
		
	Иначе
		
		ПоказатьПредупреждение(, "В документе отсутствует номенклатура категорий, выдаваемых экипажу. Ввод на основании невозможен");
		
	КонецЕсли;
	
КонецФункции

Функция СоздатьРасходТМЦНаОснованииПриходТМЦ(ДокументОснование, ПараметрыВыполнения) Экспорт
	
	КатегорииНеВыдаваемые = рарусИмущественныйУчетВызовСервера.КатегорииНоменклатурыДокументаНеВыдаваемыеЭкипажу(ДокументОснование);
	
	Если КатегорииНеВыдаваемые.Количество() > 0 Тогда
		
		СоздатьДокументыПриходаРасходаИзмененияСтатусаПоКатегориямНоменклатуры("рарусРасходТМЦ", 
			ДокументОснование, КатегорииНеВыдаваемые);
		
	Иначе
		
		ПоказатьПредупреждение(, "В документе отсутствует номенклатура категорий, не выдаваемых экипажу. Ввод на основании невозможен.");
		
	КонецЕсли;
	
КонецФункции

Функция СоздатьРасходТМЦНаОснованииИзменениеСтатусаТМЦ(ДокументОснование, ПараметрыВыполнения) Экспорт
	
	Категории = рарусИмущественныйУчетВызовСервера.КатегорииНоменклатурыДокумента(ДокументОснование);
	
	Если Категории.Количество() > 0 Тогда
		
		СоздатьДокументыПриходаРасходаИзмененияСтатусаПоКатегориямНоменклатуры("рарусРасходТМЦ", 
			ДокументОснование, Категории);
		
	Иначе
		
		ПоказатьПредупреждение(, "В документе отсутствует номенклатура с заполненным категориями. Ввод на основании невозможен.");
		
	КонецЕсли;
	
КонецФункции

Функция СоздатьПриходТМЦНаОснованииЗаявкаНаСнабжение(ДокументОснование, ПараметрыВыполнения) Экспорт
	
	СообщениеОбОшибке = "";
	Если НЕ рарусИмущественныйУчетВызовСервера.МожноВвестиПриходТМЦНаОснованииЗаявкиНаСнабжение(
		ДокументОснование, СообщениеОбОшибке) Тогда
		ПоказатьПредупреждение(, СообщениеОбОшибке);
		Возврат Ложь;
	КонецЕсли;
	
	ФормаПриходаТМЦ = ПолучитьФормуНовогоДокументаСЗаполнением("впПриходТМЦ", ДокументОснование, ДокументОснование);
	
	Если ФормаПриходаТМЦ.Объект.ТМЦ.Количество() = 0 Тогда
		СообщениеОбОшибке = СтрШаблон("По заявке ""%1"" все ТМЦ уже отражены документами ""Приход ТМЦ"".",
			Строка(ДокументОснование));
		ПоказатьПредупреждение(, СообщениеОбОшибке);
		Возврат Ложь;
	КонецЕсли; 
	
	ФормаПриходаТМЦ.Открыть();
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СоздатьДокументыПриходаРасходаИзмененияСтатусаПоКатегориямНоменклатуры(ИмяСоздаваемыхДокументов, ДокументОснование, КатегорииНоменклатуры)
	
	Для Каждого КатегорияНоменклатуры Из КатегорииНоменклатуры Цикл
		
		ДанныеЗаполнения = Новый Структура;
		ДанныеЗаполнения.Вставить("ДокументОснование", ДокументОснование);
		ДанныеЗаполнения.Вставить("Категория", КатегорияНоменклатуры);
		
		ОткрытьФормуНовогоДокументаСЗаполнением(ИмяСоздаваемыхДокументов, ДокументОснование, ДанныеЗаполнения);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьФормуНовогоДокументаСЗаполнением(ИмяДокумента, ДокументОснование, ДанныеЗаполнения)
	
	ИмяФормы = СтрШаблон("Документ.%1.Форма.ФормаДокумента", ИмяДокумента);
	
	ПараметрыФормы = Новый Структура("ДокументОснование", ДокументОснование);
	ФормаНовогоДокумента = ПолучитьФорму(ИмяФормы, ПараметрыФормы, , Истина);
		
	ДанныеФормыНовогоДокумента = ФормаНовогоДокумента.Объект;
	рарусИмущественныйУчетВызовСервера.ВыполнитьЗаполнениеДокумента(ДанныеФормыНовогоДокумента, ДанныеЗаполнения);
	КопироватьДанныеФормы(ДанныеФормыНовогоДокумента, ФормаНовогоДокумента.Объект);
	ФормаНовогоДокумента.Модифицированность = Истина;
	
	Возврат ФормаНовогоДокумента;
	
КонецФункции


Процедура ОткрытьФормуНовогоДокументаСЗаполнением(ИмяДокумента, ДокументОснование, ДанныеЗаполнения)
	
	ФормаНовогоДокумента = ПолучитьФормуНовогоДокументаСЗаполнением(ИмяДокумента, ДокументОснование, ДанныеЗаполнения);
	
	ФормаНовогоДокумента.Открыть();
	
КонецПроцедуры

#КонецОбласти 