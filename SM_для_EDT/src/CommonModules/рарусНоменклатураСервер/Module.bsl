Функция ЭтоЗаблокированнаяНоменклатура(Номенклатура) Экспорт
	
	Возврат ЗначениеЗаполнено(Номенклатура.СтатусНоменклатуры)
		И Номенклатура.СтатусНоменклатуры <> Перечисления.рспбСтатусыНоменклатуры.НеЗаблокирован;
	
КонецФункции
	
Функция НоменклатураПоОбъектамРемонта(ОбъектыРемонта) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОбъектыРемонта", ОбъектыРемонта);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	впОбъектыРемонта.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОбъектыРемонта
	|ИЗ
	|	Справочник.впОбъектыРемонта КАК впОбъектыРемонта
	|ГДЕ
	|	впОбъектыРемонта.Ссылка В(&ОбъектыРемонта)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбъектыРемонта.Ссылка КАК ОбъектРемонта,
	|	ЕСТЬNULL(впЗапчасти.Номенклатура, НЕОПРЕДЕЛЕНО) КАК Номенклатура
	|ИЗ
	|	ОбъектыРемонта КАК ОбъектыРемонта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.впЗапчасти КАК впЗапчасти
	|		ПО ОбъектыРемонта.Ссылка = впЗапчасти.ОбъектРемонта";
	
	НоменклатураПоОбъектам = Новый Соответствие;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() цикл
		
		Если НоменклатураПоОбъектам.Получить(Выборка.ОбъектРемонта) = Неопределено тогда
			НоменклатураПоОбъектам.Вставить(Выборка.ОбъектРемонта, Новый Массив);	
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(Выборка.Номенклатура) тогда
			НоменклатураПоОбъектам[Выборка.ОбъектРемонта].Добавить(Выборка.Номенклатура);	
		КонецЕсли;	
		
	КонецЦикла;	
	
	Возврат НоменклатураПоОбъектам;
	
КонецФункции	

Функция НоменклатураПоОбъектуРемонта(ОбъектРемонта, Строго = Ложь) Экспорт 
	
	МассивНоменклатуры = Новый Массив;
	
	Если Строго тогда
		
		Массив = Новый Массив;
		
		Массив.Добавить(ОбъектРемонта);
		
		НоменклатураПоОбъектам = НоменклатураПоОбъектамРемонта(Массив);
		
		МассивНоменклатуры = НоменклатураПоОбъектам[ОбъектРемонта];
		
	Иначе
		
		МассивНоменклатуры = НоменклатураПоОбъектуРемонтаИерархия(ОбъектРемонта);
		
	КонецЕсли;
	
	Возврат МассивНоменклатуры;
	
КонецФункции	

Функция НоменклатураПоОбъектуРемонтаИерархия(ОбъектРемонта) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОбъектРемонта", ОбъектРемонта);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	впОбъектыРемонта.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОбъектыРемонта
	|ИЗ
	|	Справочник.впОбъектыРемонта КАК впОбъектыРемонта
	|ГДЕ
	|	впОбъектыРемонта.Ссылка В Иерархии(&ОбъектРемонта)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбъектыРемонта.Ссылка КАК ОбъектРемонта,
	|	ЕСТЬNULL(впЗапчасти.Номенклатура, НЕОПРЕДЕЛЕНО) КАК Номенклатура
	|ИЗ
	|	ОбъектыРемонта КАК ОбъектыРемонта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.впЗапчасти КАК впЗапчасти
	|		ПО ОбъектыРемонта.Ссылка = впЗапчасти.ОбъектРемонта";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Массив = Новый Массив;
	
	Пока Выборка.Следующий() цикл
		
		Если ЗначениеЗаполнено(Выборка.Номенклатура) тогда
			Массив.Добавить(Выборка.Номенклатура);	
		КонецЕсли;	
		
	КонецЦикла;	
	
	Возврат Массив;
	
КонецФункции

Процедура УстановитьОтборПоОбъектуРемонта(Форма, ОбъектРемонта) Экспорт
	
	МассивНоменклатуры = рарусНоменклатураСервер.НоменклатураПоОбъектуРемонта(ОбъектРемонта);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
				Форма.СписокНоменклатура, "Номенклатура", МассивНоменклатуры, 
				ВидСравненияКомпоновкиДанных.ВСписке, , Истина);
	
КонецПроцедуры

//rarus_AfoD 31.08.2021 < 
Процедура УстановитьОтборПоКатегории(Форма, Категория) Экспорт
	
	МассивНоменклатуры = НоменклатураПоКатегории(Категория);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
				Форма.СписокНоменклатура, "Номенклатура", МассивНоменклатуры, 
				ВидСравненияКомпоновкиДанных.ВСписке, , Истина);
	
КонецПроцедуры

Функция НоменклатураПоКатегориямВыдаваемымЭкипажу() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	рарусКатегорииНоменклатуры.Ссылка КАК Категория
	               |ИЗ
	               |	Справочник.рарусКатегорииНоменклатуры КАК рарусКатегорииНоменклатуры
	               |ГДЕ
	               |	рарусКатегорииНоменклатуры.ВыдаетсяЭкипажу";
	
	МассивТиповНоменклатуры = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Категория");
		
	Возврат МассивТиповНоменклатуры;
	
КонецФункции

Функция НоменклатураПоКатегории(Категория) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Категория", Категория);
	Запрос.Текст = "ВЫБРАТЬ
	               |	Номенклатура.Ссылка КАК Номенклатура
	               |ИЗ
	               |	Справочник.Номенклатура КАК Номенклатура
	               |ГДЕ
	               |	Номенклатура.Категория = &Категория";
	
	МассивНоменклатуры = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Номенклатура");
		
	Возврат МассивНоменклатуры;
	
КонецФункции
//rarus_AfoD 31.08.2021 > 

// ++ rarus makole 2021-06-23 [РАIT-0023374]
// Учёт номенклатуры разного качества 

// Процедура проверки соответствия вида номенклатуры товаров другого качества виду номенклатуры исходного качества.
// Для номенклатуры, по которой ведется учет серий, товары другого качества должны быть одного вида с исходными.
//
// Параметры:
//	Объект - ДокументОбъект - документ, для которого проверяется соответствие номенклатуры;
//	Отказ - Булево - отказ продолжения операции;
//	ИмяТЧДляПроверки - Строка - значение по умолчанию "Товары";
//	ТаблицаДляПроверки - ТаблицаЗначений, Неопределено - если передана таблица значений, то проверяется она, попытка выгрузки из объекта не делается:
//		* НомерСтроки - Число;
//		* Номенклатура - СправочникСсылка.Номенклатура;
//		* НоменклатураОприходование - СправочникСсылка.Номенклатура.
//
Процедура ПроверитьВидНоменклатурыОприходования(Объект, Отказ, ИмяТЧДляПроверки = "Товары", ТаблицаДляПроверки = Неопределено) Экспорт
	
	//ПАН+ Нет никаких серий в судовом модуле
	Возврат;	
	//ПАН-
	
	// Номенклатура с разным качеством должна быть совместима по настройкам серий:
	// - или у серий должен быть один владелец (тогда настройки учета совпадают)
	// - или учета серий быть не должно.
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Товары.НомерСтроки,
	|	Товары.Номенклатура,
	|	Товары.НоменклатураОприходование КАК НоменклатураБрак
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыДляЗапроса.НомерСтроки,
	|	ТоварыДляЗапроса.Номенклатура,
	|	ТоварыДляЗапроса.НоменклатураБрак,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ТоварыДляЗапроса.Номенклатура КАК Справочник.Номенклатура).ВладелецСерий = ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)
	|			ТОГДА ВЫРАЗИТЬ(ТоварыДляЗапроса.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры
	|		ИНАЧЕ ВЫРАЗИТЬ(ТоварыДляЗапроса.Номенклатура КАК Справочник.Номенклатура).ВладелецСерий
	|	КОНЕЦ КАК ВладелецСерий,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ТоварыДляЗапроса.НоменклатураБрак КАК Справочник.Номенклатура).ВладелецСерий = ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)
	|			ТОГДА ВЫРАЗИТЬ(ТоварыДляЗапроса.НоменклатураБрак КАК Справочник.Номенклатура).ВидНоменклатуры
	|		ИНАЧЕ ВЫРАЗИТЬ(ТоварыДляЗапроса.НоменклатураБрак КАК Справочник.Номенклатура).ВладелецСерий
	|	КОНЕЦ КАК ВладелецСерийБрак
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК ТоварыДляЗапроса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыДляЗапроса.НомерСтроки,
	|	ТоварыДляЗапроса.Номенклатура КАК Номенклатура,
	|	ТоварыДляЗапроса.НоменклатураБрак КАК НоменклатураБрак
	|ИЗ
	|	ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|ГДЕ
	|	ТоварыДляЗапроса.ВладелецСерий <> ТоварыДляЗапроса.ВладелецСерийБрак
	|	И (ТоварыДляЗапроса.ВладелецСерий.ИспользоватьСерии
	|		ИЛИ ТоварыДляЗапроса.ВладелецСерийБрак.ИспользоватьСерии)";
	
	Если ТаблицаДляПроверки <> Неопределено Тогда
		Запрос.УстановитьПараметр("Товары", ТаблицаДляПроверки);
	Иначе
		Запрос.УстановитьПараметр("Товары",
			Объект[ИмяТЧДляПроверки].Выгрузить(,"НомерСтроки,Номенклатура,НоменклатураОприходование"));
	КонецЕсли;
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ТекстОшибки = НСтр("ru = 'По номенклатурам %Номенклатура% и %НоменклатураБрак%(испорченный товар) различаются настройки учета по сериям.';
							|en = 'Settings of series accounting differ for products %Номенклатура% and %НоменклатураБрак% (spoiled goods).'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Номенклатура%", Выборка.Номенклатура);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НоменклатураБрак%", Выборка.НоменклатураБрак);
		Если ТаблицаДляПроверки = Неопределено Тогда
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТЧДляПроверки,Выборка.НомерСтроки,"НоменклатураОприходование");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,Объект,Поле,,Отказ);
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,,,Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры
// -- rarus makole 2021-06-23 [РАIT-0023374]
 