////////////////////////////////////////////////////////////////////////////////
// торо_Ремонты: общие процедуры и функции для работы с ремонтами
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Процедура выполняет построение диагрммы Ганта для графика ППР
//
// Параметры:
//  Диаграмма - Диаграмма - диаграмма Ганта.
//  ТаблицаДанныхППР - ТаблицаЗначений - таблица значений исходных данных.
//  СтруктураИерархии - СправочникСсылка.торо_СтруктурыОР - структура иерархии.
//  ОтображатьИерархию - Булево - отображать иерархию.
//  ИспользоватьИерархию - Булево - использовать иерархию.
//  РезультатЗапроса - РезультатЗапроса - результат запроса.
//  ЭтоКорректировка - Булево - Это корректировка.
//  Редактировать - Булево - редактировать.
//  ИспользоватьРасшифровку - Булево - использовать расшифровку.
//  ДиаграммаДляОтчета - Булево - это для диаграммы.
//  СортироватьПоНаименованию - Булево - выполнить сортировку по наименованию.
//
Процедура ПостроитьДиаграммуГантаДляППР(Диаграмма, ТаблицаДанныхППР, СтруктураИерархии = Неопределено, ОтображатьИерархию = Ложь, ИспользоватьИерархию = Ложь, РезультатЗапроса = Неопределено, ЭтоКорректировка = Ложь, Редактировать = Истина, ИспользоватьРасшифровку = Истина, ДиаграммаДляОтчета = Ложь, СортироватьПоНаименованию = Истина) Экспорт 
	
	//////////////////////////////////////////////////////
	ТекДата = ТекущаяДата();
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Булево"));
	
	ОписаниеТ = новый ОписаниеТипов(МассивТипов);
	
	ЕстьЦепочки = ТаблицаДанныхППР.Колонки.Найти("Цепочка") <> Неопределено;
	
	Если ТаблицаДанныхППР.Колонки.Найти("ЕстьВЗ") = Неопределено Тогда
		ТаблицаДанныхППР.Колонки.Добавить("ЕстьВЗ",ОписаниеТ);
		ТаблицаДанныхППР.ЗаполнитьЗначения(Ложь,"ЕстьВЗ");
	КонецЕсли;
	
	Если ТаблицаДанныхППР.Колонки.Найти("ЕстьДвиженияПоВЗ") = Неопределено Тогда
		ТаблицаДанныхППР.Колонки.Добавить("ЕстьДвиженияПоВЗ",ОписаниеТ);
		ТаблицаДанныхППР.ЗаполнитьЗначения(Ложь,"ЕстьДвиженияПоВЗ");
	КонецЕсли;
	
	Если ТаблицаДанныхППР.Колонки.Найти("ID") = Неопределено Тогда
		ТаблицаДанныхППР.Колонки.Добавить("ID",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(36)));
		ТаблицаДанныхППР.ЗаполнитьЗначения("","ID");
	КонецЕсли;
	
	Диаграмма.Очистить();
	Диаграмма.АвтоОпределениеПолногоИнтервала = Ложь;
	
	СерияРемонт = Диаграмма.Серии.Добавить();
	СерияРемонт.Текст = "График ремонта";
	
	СтруктураЦветов = Новый Структура("ЦветИсходного, ЦветВыполненого, ЦветИзмененного, ЦветОтмененного, ЦветЗамещенного, ЦветЗапланированного, ЦветЗамещенногоИсходного");
	СтруктураЦветов.ЦветВыполненого 			= WebЦвета.Черный;
	СтруктураЦветов.ЦветИзмененного 			= WebЦвета.Томатный;
	СтруктураЦветов.ЦветОтмененного 			= WebЦвета.Красный;
	СтруктураЦветов.ЦветЗапланированного 		= WebЦвета.Васильковый;
	СтруктураЦветов.ЦветЗамещенногоИсходного 	= WebЦвета.СеребристоСерый;
	СтруктураЦветов.ЦветИсходного 				= WebЦвета.ГолубойСоСтальнымОттенком;
	СтруктураЦветов.ЦветЗамещенного 			= WebЦвета.СветлоСерый;
	
	
	Запрос = Новый Запрос;
	Если Не ОтображатьИерархию И НЕ ИспользоватьИерархию Тогда
		
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаДанныхППР.ОбъектРемонтныхРабот,
		|	ТаблицаДанныхППР.ВидРемонтныхРабот,
		|	ТаблицаДанныхППР.ДокументППР,
		|	ТаблицаДанныхППР.ID,
		|	ТаблицаДанныхППР.ДатаНач,
		|	ТаблицаДанныхППР.ДатаКон,
		|	ТаблицаДанныхППР.ДатаНачСт,
		|	ТаблицаДанныхППР.ДатаКонСт,
		|	ТаблицаДанныхППР.ЕстьВЗ,
		|  ТаблицаДанныхППР.Отменен,
		|  ТаблицаДанныхППР.Замещен,
		|  ТаблицаДанныхППР.ЗамещенСт,
		|	ТаблицаДанныхППР.ЕстьДвиженияПоВЗ,
		|	ТаблицаДанныхППР.ДоступенДляРедактирования ";
		Если НЕ СортироватьПоНаименованию Тогда
			Запрос.Текст = Запрос.Текст + ", ТаблицаДанныхППР.НомерОР";
		КонецЕсли;
		Если ЕстьЦепочки Тогда
			Запрос.Текст = Запрос.Текст + ", ТаблицаДанныхППР.Цепочка, ТаблицаДанныхППР.НомерСтрокиВРЦепочки";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|ПОМЕСТИТЬ ТаблицаДанныхППР
		|ИЗ
		|	&ТаблицаДанныхППР КАК ТаблицаДанныхППР
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаДанныхППР.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
		|	ТаблицаДанныхППР.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
		|	ТаблицаДанныхППР.ДокументППР,
		|	ТаблицаДанныхППР.ID,
		|	ТаблицаДанныхППР.ДатаНач КАК ДатаНач,
		|	ТаблицаДанныхППР.ДатаКон КАК ДатаКон,
		|	ТаблицаДанныхППР.ДатаНачСт,
		|	ТаблицаДанныхППР.ДатаКонСт,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДанныхППР.ОбъектРемонтныхРабот),
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДанныхППР.ВидРемонтныхРабот),
		|	ТаблицаДанныхППР.ЕстьВЗ,
		|	ТаблицаДанныхППР.ЕстьДвиженияПоВЗ,
		|	ТаблицаДанныхППР.Отменен,
		|  ТаблицаДанныхППР.ЗамещенСт,
		|  ТаблицаДанныхППР.Замещен,
		|	ТаблицаДанныхППР.ДоступенДляРедактирования ";
		Если НЕ СортироватьПоНаименованию Тогда
			Запрос.Текст = Запрос.Текст + ", ТаблицаДанныхППР.НомерОР";
		КонецЕсли;
		Если ЕстьЦепочки Тогда
			Запрос.Текст = Запрос.Текст + ", ТаблицаДанныхППР.Цепочка, ТаблицаДанныхППР.НомерСтрокиВРЦепочки";
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + "
		|ИЗ
		|	ТаблицаДанныхППР КАК ТаблицаДанныхППР
		|ГДЕ ДатаНач > ДАТАВРЕМЯ(1,1,1,0,0,0) ";
		Если СортироватьПоНаименованию Тогда
			Если ЕстьЦепочки Тогда
				Запрос.Текст = Запрос.Текст + "
				|УПОРЯДОЧИТЬ ПО
				|	ОбъектРемонтныхРабот.Наименование,
				|	НомерСтрокиВРЦепочки,
				|	ВидРемонтныхРабот.Наименование,
				|	ДатаНач,
				|	ДатаКон ";
			Иначе
				Запрос.Текст = Запрос.Текст + "
				|УПОРЯДОЧИТЬ ПО
				|	ОбъектРемонтныхРабот.Наименование,
				|	ВидРемонтныхРабот.Наименование,
				|	ДатаНач,
				|	ДатаКон ";
			КонецЕсли;
		Иначе
			Если ЕстьЦепочки Тогда
				Запрос.Текст = Запрос.Текст + "
				|УПОРЯДОЧИТЬ ПО
				|	НомерОР,
				|	ВидРемонтныхРабот.Наименование,
				|	НомерСтрокиВРЦепочки";
			Иначе
				Запрос.Текст = Запрос.Текст + "
				|УПОРЯДОЧИТЬ ПО
				|	НомерОР,
				|	ВидРемонтныхРабот.Наименование";
			КонецЕсли;
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|ИТОГИ ПО
		|	ОбъектРемонтныхРабот";
		Если ЕстьЦепочки Тогда
			Запрос.Текст = Запрос.Текст + ", НомерСтрокиВРЦепочки";
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + ", ВидРемонтныхРабот";
			
		Запрос.УстановитьПараметр("ТаблицаДанныхППР", ТаблицаДанныхППР);
		
		Результат = Запрос.Выполнить();
		
		ВыборкаПоОР = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоОР.Следующий() Цикл
			
			ТочкаОРР = Диаграмма.Точки.Добавить();
			ТочкаОРР.Текст = ВыборкаПоОР.ОбъектРемонтныхРаботПредставление;
			Если ИспользоватьРасшифровку Тогда
				ТочкаОРР.Расшифровка = ВыборкаПоОР.ОбъектРемонтныхРабот;
			КонецЕсли;
			
			ВыборкаПоВРИлиЦепочкам = ВыборкаПоОР.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоВРИлиЦепочкам.Следующий() Цикл
				
				Если ЕстьЦепочки Тогда
					ВыборкаПоВР = ВыборкаПоВРИлиЦепочкам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Пока ВыборкаПоВР.Следующий() Цикл
						ВывестиЧастьГрафикаПервыйВариант(ВыборкаПоВР, ВыборкаПоОР, ТекДата, ТочкаОРР, СерияРемонт, Диаграмма, СтруктураЦветов, ИспользоватьРасшифровку, ЭтоКорректировка,Редактировать);
					КонецЦикла;
					
				Иначе
					ВыборкаПоВР = ВыборкаПоВРИлиЦепочкам;					
					ВывестиЧастьГрафикаПервыйВариант(ВыборкаПоВР, ВыборкаПоОР, ТекДата, ТочкаОРР, СерияРемонт, Диаграмма, СтруктураЦветов, ИспользоватьРасшифровку, ЭтоКорректировка,Редактировать);
					
				КонецЕсли;	
			КонецЦикла;
			
		КонецЦикла;
		
	ИначеЕсли Не ЗначениеЗаполнено(СтруктураИерархии) И НЕ ИспользоватьИерархию Тогда
		
		
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаДанныхППР.ОбъектРемонтныхРабот,
		|	ТаблицаДанныхППР.ВидРемонтныхРабот,
		|	ТаблицаДанныхППР.ID,
		|	ТаблицаДанныхППР.ДатаНач,
		|	ТаблицаДанныхППР.ДатаКон,
		|	ТаблицаДанныхППР.ДатаНачСт,
		|	ТаблицаДанныхППР.ДатаКонСт,
		|	ТаблицаДанныхППР.ЕстьВЗ,
		|	ТаблицаДанныхППР.ЕстьДвиженияПоВЗ,
		|  ТаблицаДанныхППР.Отменен,
		|  ТаблицаДанныхППР.Замещен,
		|  ТаблицаДанныхППР.ЗамещенСт,
		|	ТаблицаДанныхППР.ДоступенДляРедактирования ";
		Если НЕ СортироватьПоНаименованию Тогда
			Запрос.Текст = Запрос.Текст + ", ТаблицаДанныхППР.НомерОР";
		КонецЕсли;
		Если ЕстьЦепочки Тогда
			Запрос.Текст = Запрос.Текст + ", ТаблицаДанныхППР.Цепочка, ТаблицаДанныхППР.НомерСтрокиВРЦепочки";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|ПОМЕСТИТЬ ТаблицаДанныхППР
		|ИЗ
		|	&ТаблицаДанныхППР КАК ТаблицаДанныхППР
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаДанныхППР.ОбъектРемонтныхРабот.Родитель КАК Положение,
		|	ТаблицаДанныхППР.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
		|	ТаблицаДанныхППР.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
		|	ТаблицаДанныхППР.ID,
		|	ТаблицаДанныхППР.ДатаНач КАК ДатаНач,
		|	ТаблицаДанныхППР.ДатаКон КАК ДатаКон,
		|	ТаблицаДанныхППР.ДатаНачСт,
		|	ТаблицаДанныхППР.ДатаКонСт,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДанныхППР.ОбъектРемонтныхРабот),
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДанныхППР.ВидРемонтныхРабот),
		|	ТаблицаДанныхППР.ЕстьВЗ,
		|	ТаблицаДанныхППР.ЕстьДвиженияПоВЗ,
		|  ТаблицаДанныхППР.Отменен,
		|  ТаблицаДанныхППР.Замещен,
		|  ТаблицаДанныхППР.ЗамещенСт,
		|	ТаблицаДанныхППР.ДоступенДляРедактирования ";
		Если НЕ СортироватьПоНаименованию Тогда
			Запрос.Текст = Запрос.Текст + ", ТаблицаДанныхППР.НомерОР";
		КонецЕсли;
		Если ЕстьЦепочки Тогда
			Запрос.Текст = Запрос.Текст + ", ТаблицаДанныхППР.Цепочка, ТаблицаДанныхППР.НомерСтрокиВРЦепочки";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|ИЗ
		|	ТаблицаДанныхППР КАК ТаблицаДанныхППР
		|ГДЕ ДатаНач > ДАТАВРЕМЯ(1,1,1,0,0,0) ";
		Если СортироватьПоНаименованию Тогда
			Если ЕстьЦепочки Тогда
				Запрос.Текст = Запрос.Текст + "
				|УПОРЯДОЧИТЬ ПО
				|	ОбъектРемонтныхРабот.Наименование,
				|	НомерСтрокиВРЦепочки,
				|	ВидРемонтныхРабот.Наименование,
				|	ДатаНач,
				|	ДатаКон ";
			Иначе
				Запрос.Текст = Запрос.Текст + "
				|УПОРЯДОЧИТЬ ПО
				|	ОбъектРемонтныхРабот.Наименование,
				|	ВидРемонтныхРабот.Наименование,
				|	ДатаНач,
				|	ДатаКон ";
			КонецЕсли;
		Иначе
			Если ЕстьЦепочки Тогда
				Запрос.Текст = Запрос.Текст + "
				|УПОРЯДОЧИТЬ ПО
				|	НомерОР,
				|	ВидРемонтныхРабот.Наименование,
				|	НомерСтрокиВРЦепочки";
			Иначе
				Запрос.Текст = Запрос.Текст + "
				|УПОРЯДОЧИТЬ ПО
				|	НомерОР,
				|	ВидРемонтныхРабот.Наименование";
			КонецЕсли;
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|ИТОГИ ПО
		|	Положение,
		|	ОбъектРемонтныхРабот";
		Если ЕстьЦепочки Тогда
			Запрос.Текст = Запрос.Текст + ", НомерСтрокиВРЦепочки";
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + ", ВидРемонтныхРабот";
		
		Запрос.УстановитьПараметр("ТаблицаДанныхППР", ТаблицаДанныхППР);
		Запрос.УстановитьПараметр("СтруктураИерархии", СтруктураИерархии);
		
		Результат = Запрос.Выполнить();
		
		ВыборкаПоПоложению = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоПоложению.Следующий() Цикл
			
			ТочкаПоложение = Диаграмма.Точки.Добавить();
			ТочкаПоложение.Текст = СокрЛП(ВыборкаПоПоложению.Положение);
			Если ИспользоватьРасшифровку Тогда
				ТочкаПоложение.Расшифровка = ВыборкаПоПоложению.Положение;
			КонецЕсли;
			
			ВыборкаПоОР = ВыборкаПоПоложению.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоОР.Следующий() Цикл
				
				ТочкаОРР = ТочкаПоложение.Точки.Добавить();
				ТочкаОРР.Текст = ВыборкаПоОР.ОбъектРемонтныхРаботПредставление;
				Если ИспользоватьРасшифровку Тогда
					ТочкаОРР.Расшифровка = ВыборкаПоОР.ОбъектРемонтныхРабот;
				КонецЕсли;
				
				ВыборкаПоВРИлиЦепочкам = ВыборкаПоОР.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаПоВРИлиЦепочкам.Следующий() Цикл
					
					Если ЕстьЦепочки Тогда
						ВыборкаПоВР = ВыборкаПоВРИлиЦепочкам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Пока ВыборкаПоВР.Следующий() Цикл
							ВывестиЧастьГрафикаВторойВариант(ВыборкаПоВР, ВыборкаПоОр, ТекДата, ТочкаОРР, ТочкаПоложение, СерияРемонт, Диаграмма, СтруктураЦветов, ИспользоватьРасшифровку, ЭтоКорректировка, Редактировать);
						КонецЦикла;
						
					Иначе
						ВыборкаПоВР = ВыборкаПоВРИлиЦепочкам; 						
						ВывестиЧастьГрафикаВторойВариант(ВыборкаПоВР, ВыборкаПоОр, ТекДата, ТочкаОРР, ТочкаПоложение, СерияРемонт, Диаграмма, СтруктураЦветов, ИспользоватьРасшифровку, ЭтоКорректировка, Редактировать);
					КонецЕсли;	
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
	ИначеЕсли НЕ ИспользоватьИерархию И СтруктураИерархии.ИзменяетсяДокументами Тогда
		
		
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаДанныхППР.ОбъектРемонтныхРабот,
		|	ТаблицаДанныхППР.ВидРемонтныхРабот,
		|	ТаблицаДанныхППР.ID,
		|	ТаблицаДанныхППР.ДатаНач,
		|	ТаблицаДанныхППР.ДатаКон,
		|	ТаблицаДанныхППР.ДатаНачСт,
		|	ТаблицаДанныхППР.ДатаКонСт,
		|	ТаблицаДанныхППР.ЕстьВЗ,
		|	ТаблицаДанныхППР.ЕстьДвиженияПоВЗ,
		|  ТаблицаДанныхППР.Отменен,
		|  ТаблицаДанныхППР.Замещен,
		|  ТаблицаДанныхППР.ЗамещенСт,
		|	ТаблицаДанныхППР.ДоступенДляРедактирования ";
		Если НЕ СортироватьПоНаименованию Тогда
			Запрос.Текст = Запрос.Текст + ", ТаблицаДанныхППР.НомерОР";
		КонецЕсли;
		Если ЕстьЦепочки Тогда
			Запрос.Текст = Запрос.Текст + ", ТаблицаДанныхППР.Цепочка, ТаблицаДанныхППР.НомерСтрокиВРЦепочки";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|ПОМЕСТИТЬ ТаблицаДанныхППР
		|ИЗ
		|	&ТаблицаДанныхППР КАК ТаблицаДанныхППР
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	торо_ИерархическиеСтруктурыОР.РодительИерархии КАК Положение,
		|	торо_ИерархическиеСтруктурыОР.ОбъектИерархии
		|ПОМЕСТИТЬ ТаблицаСтруктуры
		|ИЗ
		|	РегистрСведений.торо_ИерархическиеСтруктурыОР КАК торо_ИерархическиеСтруктурыОР
		|ГДЕ
		|	торо_ИерархическиеСтруктурыОР.СтруктураИерархии = &СтруктураИерархии
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаДанныхППР.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
		|	ТаблицаДанныхППР.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
		|	ТаблицаДанныхППР.ID,
		|	ТаблицаДанныхППР.ДатаНач КАК ДатаНач,
		|	ТаблицаДанныхППР.ДатаКон КАК ДатаКон,
		|	ТаблицаДанныхППР.ДатаНачСт,
		|	ТаблицаДанныхППР.ДатаКонСт,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДанныхППР.ОбъектРемонтныхРабот),
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДанныхППР.ВидРемонтныхРабот),
		|	ЕСТЬNULL(ТаблицаСтруктуры.Положение, НЕОПРЕДЕЛЕНО) КАК Положение,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаСтруктуры.Положение) КАК ПоложениеПредставление,
		|	ТаблицаДанныхППР.ЕстьВЗ,
		|	ТаблицаДанныхППР.ЕстьДвиженияПоВЗ,
		|  ТаблицаДанныхППР.Отменен,
		|  ТаблицаДанныхППР.Замещен,
		|  ТаблицаДанныхППР.ЗамещенСт,
		|	ТаблицаДанныхППР.ДоступенДляРедактирования ";
		Если НЕ СортироватьПоНаименованию Тогда
			Запрос.Текст = Запрос.Текст + ", ТаблицаДанныхППР.НомерОР";
		КонецЕсли;
		Если ЕстьЦепочки Тогда
			Запрос.Текст = Запрос.Текст + ", ТаблицаДанныхППР.Цепочка, ТаблицаДанныхППР.НомерСтрокиВРЦепочки";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|ИЗ
		|	ТаблицаДанныхППР КАК ТаблицаДанныхППР
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСтруктуры КАК ТаблицаСтруктуры
		|		ПО ТаблицаДанныхППР.ОбъектРемонтныхРабот = ТаблицаСтруктуры.ОбъектИерархии
		|ГДЕ ДатаНач > ДАТАВРЕМЯ(1,1,1,0,0,0) ";
		Если СортироватьПоНаименованию Тогда
			Если ЕстьЦепочки Тогда
				Запрос.Текст = Запрос.Текст + "
				|УПОРЯДОЧИТЬ ПО
				|	ОбъектРемонтныхРабот.Наименование,
				|	НомерСтрокиВРЦепочки,
				|	ВидРемонтныхРабот.Наименование,
				|	ДатаНач,
				|	ДатаКон ";
			Иначе
				Запрос.Текст = Запрос.Текст + "
				|УПОРЯДОЧИТЬ ПО
				|	ОбъектРемонтныхРабот.Наименование,
				|	ВидРемонтныхРабот.Наименование,
				|	ДатаНач,
				|	ДатаКон ";
			КонецЕсли;
		Иначе
			Если ЕстьЦепочки Тогда
				Запрос.Текст = Запрос.Текст + "
				|УПОРЯДОЧИТЬ ПО
				|	НомерОР,
				|	ВидРемонтныхРабот.Наименование,
				|	НомерСтрокиВРЦепочки";
			Иначе
				Запрос.Текст = Запрос.Текст + "
				|УПОРЯДОЧИТЬ ПО
				|	НомерОР, 
				|	ВидРемонтныхРабот.Наименование";
			КонецЕсли;
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|ИТОГИ ПО
		|	Положение,
		|	ОбъектРемонтныхРабот";
		Если ЕстьЦепочки Тогда
			Запрос.Текст = Запрос.Текст + ", НомерСтрокиВРЦепочки";
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + ", ВидРемонтныхРабот";
		
		Запрос.УстановитьПараметр("ТаблицаДанныхППР", ТаблицаДанныхППР);
		Запрос.УстановитьПараметр("СтруктураИерархии", СтруктураИерархии);
		
		Результат = Запрос.Выполнить();
		
		ВыборкаПоПоложению = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоПоложению.Следующий() Цикл
			
			ТочкаПоложение = Диаграмма.Точки.Добавить();
			ТочкаПоложение.Текст = СокрЛП(ВыборкаПоПоложению.Положение);
			Если ИспользоватьРасшифровку Тогда
				ТочкаПоложение.Расшифровка = ВыборкаПоПоложению.Положение;
			КонецЕсли;
			
			ВыборкаПоОР = ВыборкаПоПоложению.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоОР.Следующий() Цикл
				
				ТочкаОРР = ТочкаПоложение.Точки.Добавить();
				ТочкаОРР.Текст = ВыборкаПоОР.ОбъектРемонтныхРаботПредставление;
				Если ИспользоватьРасшифровку Тогда
					ТочкаОРР.Расшифровка = ВыборкаПоОР.ОбъектРемонтныхРабот;
				КонецЕсли;
				
				ВыборкаПоВРИлиЦепочкам = ВыборкаПоОР.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаПоВРИлиЦепочкам.Следующий() Цикл
					
					Если ЕстьЦепочки Тогда
						ВыборкаПоВР = ВыборкаПоВРИлиЦепочкам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Пока ВыборкаПоВР.Следующий() Цикл
							ВывестиЧастьГрафикаТретийВариант(ВыборкаПоВР, ВыборкаПоОр, ТекДата, ТочкаОРР, ТочкаПоложение, СерияРемонт, Диаграмма, СтруктураЦветов, ИспользоватьРасшифровку, ЭтоКорректировка, Редактировать);
						КонецЦикла;
						
					Иначе
						ВыборкаПоВР = ВыборкаПоВРИлиЦепочкам;						
						ВывестиЧастьГрафикаТретийВариант(ВыборкаПоВР, ВыборкаПоОр, ТекДата, ТочкаОРР, ТочкаПоложение, СерияРемонт, Диаграмма, СтруктураЦветов, ИспользоватьРасшифровку, ЭтоКорректировка, Редактировать);
						
					КонецЕсли;
					
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
	ИначеЕсли ИспользоватьИерархию Тогда
		
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаДанныхППР.ОбъектРемонтныхРабот,
		|	ТаблицаДанныхППР.ВидРемонтныхРабот,
		|	ТаблицаДанныхППР.ДокументППР,
		|	ТаблицаДанныхППР.ID,
		|	ТаблицаДанныхППР.ДатаНач,
		|	ТаблицаДанныхППР.ДатаКон,
		|	ТаблицаДанныхППР.ДатаНачСт,
		|	ТаблицаДанныхППР.ДатаКонСт,
		|	ТаблицаДанныхППР.ЕстьВЗ,
		|	ТаблицаДанныхППР.ЕстьДвиженияПоВЗ,
		|  ТаблицаДанныхППР.Отменен,
		|  ТаблицаДанныхППР.Замещен,
		|  ТаблицаДанныхППР.ЗамещенСт,
		|	ТаблицаДанныхППР.ДоступенДляРедактирования ";
		Если НЕ СортироватьПоНаименованию Тогда
			Запрос.Текст = Запрос.Текст + ", ТаблицаДанныхППР.НомерОР";
		КонецЕсли;
		Если ЕстьЦепочки Тогда
			Запрос.Текст = Запрос.Текст + ", ТаблицаДанныхППР.Цепочка, ТаблицаДанныхППР.НомерСтрокиВРЦепочки";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|ПОМЕСТИТЬ ТаблицаДанныхППР
		|ИЗ
		|	&ТаблицаДанныхППР КАК ТаблицаДанныхППР
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаДанныхППР.ОбъектРемонтныхРабот.Родитель КАК Родитель,
		|	ТаблицаДанныхППР.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
		|	ТаблицаДанныхППР.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
		|	ТаблицаДанныхППР.ДокументППР,
		|	ТаблицаДанныхППР.ID,
		|	ТаблицаДанныхППР.ДатаНач КАК ДатаНач,
		|	ТаблицаДанныхППР.ДатаКон КАК ДатаКон,
		|	ТаблицаДанныхППР.ДатаНачСт,
		|	ТаблицаДанныхППР.ДатаКонСт,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДанныхППР.ОбъектРемонтныхРабот),
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДанныхППР.ВидРемонтныхРабот),
		|	ТаблицаДанныхППР.ЕстьВЗ,
		|	ТаблицаДанныхППР.ЕстьДвиженияПоВЗ,
		|  ТаблицаДанныхППР.Отменен,
		|  ТаблицаДанныхППР.Замещен,
		|  ТаблицаДанныхППР.ЗамещенСт,
		|	ТаблицаДанныхППР.ДоступенДляРедактирования ";
		Если НЕ СортироватьПоНаименованию Тогда
			Запрос.Текст = Запрос.Текст + ", ТаблицаДанныхППР.НомерОР";
		КонецЕсли;
		Если ЕстьЦепочки Тогда
			Запрос.Текст = Запрос.Текст + ", ТаблицаДанныхППР.Цепочка, ТаблицаДанныхППР.НомерСтрокиВРЦепочки";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|ИЗ
		|	ТаблицаДанныхППР КАК ТаблицаДанныхППР
		|ГДЕ ДатаНач > ДАТАВРЕМЯ(1,1,1,0,0,0) ";
		Если СортироватьПоНаименованию Тогда
			Если ЕстьЦепочки Тогда
				Запрос.Текст = Запрос.Текст + "
				|УПОРЯДОЧИТЬ ПО
				|	ОбъектРемонтныхРабот.Наименование,
				|	НомерСтрокиВРЦепочки,
				|	ВидРемонтныхРабот.Наименование,
				|	ДатаНач,
				|	ДатаКон ";
			Иначе
				Запрос.Текст = Запрос.Текст + "
				|УПОРЯДОЧИТЬ ПО
				|	ОбъектРемонтныхРабот.Наименование,
				|	ВидРемонтныхРабот.Наименование,
				|	ДатаНач,
				|	ДатаКон ";
			КонецЕсли;
		Иначе
			Если ЕстьЦепочки Тогда
				Запрос.Текст = Запрос.Текст + "
				|УПОРЯДОЧИТЬ ПО
				|	НомерОР,
				|   ВидРемонтныхРабот.Наименование,
				|	НомерСтрокиВРЦепочки";
			Иначе
				Запрос.Текст = Запрос.Текст + "
				|УПОРЯДОЧИТЬ ПО
				| НомерОР,
				| ВидРемонтныхРабот.Наименование";
			КонецЕсли;
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|ИТОГИ ПО
		|	ОбъектРемонтныхРабот ИЕРАРХИЯ";
		
		Если ЕстьЦепочки Тогда
			Запрос.Текст = Запрос.Текст + ", НомерСтрокиВРЦепочки";
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + ", ВидРемонтныхРабот";
		
		Запрос.УстановитьПараметр("ТаблицаДанныхППР", ТаблицаДанныхППР);
		
		Результат = Запрос.Выполнить();
		
		ВыборкаПоПоложению = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		ТаблицаОбъектовРемонта = Новый ТаблицаЗначений();
		ТаблицаОбъектовРемонта.Колонки.Добавить("РодительОбъекта");
		ТаблицаОбъектовРемонта.Колонки.Добавить("СамОбъект");  		
		
		Пока ВыборкаПоПоложению.Следующий() Цикл 			
			
			Если ТаблицаОбъектовРемонта.Найти(ВыборкаПоПоложению.Родитель, "СамОбъект") = Неопределено Тогда
				ТочкаПоложение = Диаграмма.Точки.Добавить();
				ТочкаПоложение.Текст = СокрЛП(ВыборкаПоПоложению.ОбъектРемонтныхРабот);
				ТочкаПоложение.Расшифровка = ВыборкаПоПоложению.ОбъектРемонтныхРабот;
				
				СтрокаТаблицы = ТаблицаОбъектовРемонта.Добавить();
				СтрокаТаблицы.РодительОбъекта = ТочкаПоложение;
				СтрокаТаблицы.СамОбъект = ВыборкаПоПоложению.ОбъектРемонтныхРабот;
			Иначе
				ТочкаПоложение = ТаблицаОбъектовРемонта.Найти(ВыборкаПоПоложению.Родитель, "СамОбъект").РодительОбъекта.Точки.Добавить();
				ТочкаПоложение.Текст = СокрЛП(ВыборкаПоПоложению.ОбъектРемонтныхРабот);
				ТочкаПоложение.Расшифровка = ВыборкаПоПоложению.ОбъектРемонтныхРабот;
				
				СтрокаТаблицы = ТаблицаОбъектовРемонта.Добавить();
				СтрокаТаблицы.РодительОбъекта = ТочкаПоложение;
				СтрокаТаблицы.СамОбъект = ВыборкаПоПоложению.ОбъектРемонтныхРабот;
			КонецЕсли;
			
			ВыборкаПоОР = ВыборкаПоПоложению.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоОР.Следующий() Цикл 						
				ТочкаОРР = ТочкаПоложение.Точки.Добавить();
				ТочкаОРР.Текст = ВыборкаПоОР.ВидРемонтныхРабот;
				ТочкаОРР.Расшифровка = ВыборкаПоОР.ВидРемонтныхРабот;
				
				Если ЭтоКорректировка Тогда
					// корректировка
					ТочкаВРРСт = ТочкаОРР.Точки.Добавить();
					ТочкаВРРСт.Текст = "План до корректировки";
					ТочкаВРРСт.Расшифровка = ВыборкаПоВР.ВидРемонтныхРабот;
				КонецЕсли;
				
				ВыборкаПоВРИлиЦепочкам = ВыборкаПоОР.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
				
				
				Пока ВыборкаПоВРИлиЦепочкам.Следующий() Цикл
					
					Если ЕстьЦепочки Тогда
						ВыборкаПоВР = ВыборкаПоВРИлиЦепочкам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Пока ВыборкаПоВР.Следующий() Цикл  								
							ВывестиЧастьГрафикаЧетвертыйВариант(ВыборкаПоВР, ВыборкаПоОр, ТекДата, ТочкаОРР, ТочкаПоложение, ТочкаВРРСт, СерияРемонт, Диаграмма, СтруктураЦветов, ИспользоватьРасшифровку, ЭтоКорректировка, Редактировать);
						КонецЦикла;
					Иначе
						ВыборкаПоВР = ВыборкаПоВРИлиЦепочкам;				
						ВывестиЧастьГрафикаЧетвертыйВариант(ВыборкаПоВР, ВыборкаПоОр, ТекДата, ТочкаОРР, ТочкаПоложение, ТочкаВРРСт, СерияРемонт, Диаграмма, СтруктураЦветов, ИспользоватьРасшифровку, ЭтоКорректировка, Редактировать);
						
					КонецЕсли;
					
				КонецЦикла; 
			КонецЦикла; 
			
		КонецЦикла;
		
	Иначе
		
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаДанныхППР.ОбъектРемонтныхРабот,
		|	ТаблицаДанныхППР.ВидРемонтныхРабот,
		|	ТаблицаДанныхППР.ID,
		|	ТаблицаДанныхППР.ДатаНач,
		|	ТаблицаДанныхППР.ДатаКон,
		|	ТаблицаДанныхППР.ДатаНачСт,
		|	ТаблицаДанныхППР.ДатаКонСт,
		|	ТаблицаДанныхППР.ЕстьВЗ,
		|	ТаблицаДанныхППР.ЕстьДвиженияПоВЗ,
		|  ТаблицаДанныхППР.Отменен,
		|  ТаблицаДанныхППР.Замещен,
		|  ТаблицаДанныхППР.ЗамещенСт,
		|	ТаблицаДанныхППР.ДоступенДляРедактирования ";
		Если НЕ СортироватьПоНаименованию Тогда
			Запрос.Текст = Запрос.Текст + ", ТаблицаДанныхППР.НомерОР";
		КонецЕсли;
		Если ЕстьЦепочки Тогда
			Запрос.Текст = Запрос.Текст + ", ТаблицаДанныхППР.Цепочка, ТаблицаДанныхППР.НомерСтрокиВРЦепочки";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|ПОМЕСТИТЬ ТаблицаДанныхППР
		|ИЗ
		|	&ТаблицаДанныхППР КАК ТаблицаДанныхППР
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	торо_ИерархическиеСтруктурыОР.РодительИерархии КАК Положение,
		|	торо_ИерархическиеСтруктурыОР.ОбъектИерархии
		|ПОМЕСТИТЬ ТаблицаСтруктуры
		|ИЗ
		|	РегистрСведений.торо_ИерархическиеСтруктурыОР КАК торо_ИерархическиеСтруктурыОР
		|ГДЕ
		|	торо_ИерархическиеСтруктурыОР.СтруктураИерархии = &СтруктураИерархии
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЕСТЬNULL(ТаблицаСтруктуры.Положение, НЕОПРЕДЕЛЕНО) КАК Положение,
		|	ТаблицаДанныхППР.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
		|	ТаблицаДанныхППР.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
		|	ТаблицаДанныхППР.ID,
		|	ТаблицаДанныхППР.ДатаНач КАК ДатаНач,
		|	ТаблицаДанныхППР.ДатаКон КАК ДатаКон,
		|	ТаблицаДанныхППР.ДатаНачСт,
		|	ТаблицаДанныхППР.ДатаКонСт,
		|	ТаблицаСтруктуры.Положение.Представление КАК ПоложениеПредставление,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДанныхППР.ОбъектРемонтныхРабот),
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДанныхППР.ВидРемонтныхРабот),
		|	ТаблицаДанныхППР.ЕстьВЗ,
		|	ТаблицаДанныхППР.ЕстьДвиженияПоВЗ,
		|  ТаблицаДанныхППР.Отменен,
		|  ТаблицаДанныхППР.Замещен,
		|  ТаблицаДанныхППР.ЗамещенСт,
		|	ТаблицаДанныхППР.ДоступенДляРедактирования ";
		Если НЕ СортироватьПоНаименованию Тогда
			Запрос.Текст = Запрос.Текст + ", ТаблицаДанныхППР.НомерОР";
		КонецЕсли;
		Если ЕстьЦепочки Тогда
			Запрос.Текст = Запрос.Текст + ", ТаблицаДанныхППР.Цепочка, ТаблицаДанныхППР.НомерСтрокиВРЦепочки";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|ИЗ
		|	ТаблицаДанныхППР КАК ТаблицаДанныхППР
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСтруктуры КАК ТаблицаСтруктуры
		|		ПО ТаблицаДанныхППР.ОбъектРемонтныхРабот = ТаблицаСтруктуры.ОбъектИерархии
		|ГДЕ ДатаНач > ДАТАВРЕМЯ(1,1,1,0,0,0) ";
		Если СортироватьПоНаименованию Тогда
			Если ЕстьЦепочки Тогда
				Запрос.Текст = Запрос.Текст + "
				|УПОРЯДОЧИТЬ ПО
				|	ОбъектРемонтныхРабот.Наименование,
				|	НомерСтрокиВРЦепочки,
				|	ВидРемонтныхРабот.Наименование,
				|	ДатаНач,
				|	ДатаКон ";
			Иначе
				Запрос.Текст = Запрос.Текст + "
				|УПОРЯДОЧИТЬ ПО
				|	ОбъектРемонтныхРабот.Наименование,
				|	ВидРемонтныхРабот.Наименование,
				|	ДатаНач,
				|	ДатаКон ";
			КонецЕсли;
		Иначе
			Если ЕстьЦепочки Тогда
				Запрос.Текст = Запрос.Текст + "
				|УПОРЯДОЧИТЬ ПО
				|	НомерОР,
				|	ВидРемонтныхРабот.Наименование,
				|	НомерСтрокиВРЦепочки";
			Иначе
				Запрос.Текст = Запрос.Текст + "
				|УПОРЯДОЧИТЬ ПО
				|	НомерОР,
				|	ВидРемонтныхРабот.Наименование";
			КонецЕсли;

		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|ИТОГИ ПО
		|	Положение,
		|	ОбъектРемонтныхРабот";
		
		Если ЕстьЦепочки Тогда
			Запрос.Текст = Запрос.Текст + ", НомерСтрокиВРЦепочки";
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + ", ВидРемонтныхРабот";
		
		Запрос.УстановитьПараметр("ТаблицаДанныхППР", ТаблицаДанныхППР);
		Запрос.УстановитьПараметр("СтруктураИерархии", СтруктураИерархии);
		
		Результат = Запрос.Выполнить();
		
		ВыборкаПоПоложению = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоПоложению.Следующий() Цикл
			
			ТочкаПоложение = Диаграмма.Точки.Добавить();
			ТочкаПоложение.Текст = СокрЛП(ВыборкаПоПоложению.Положение);
			Если ИспользоватьРасшифровку Тогда
				ТочкаПоложение.Расшифровка = ВыборкаПоПоложению.Положение;
			КонецЕсли;
			
			ВыборкаПоОР = ВыборкаПоПоложению.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоОР.Следующий() Цикл
				
				ТочкаОРР = ТочкаПоложение.Точки.Добавить();
				ТочкаОРР.Текст = ВыборкаПоОР.ОбъектРемонтныхРаботПредставление;
				Если ИспользоватьРасшифровку Тогда
					ТочкаОРР.Расшифровка = ВыборкаПоОР.ОбъектРемонтныхРабот;
				КонецЕсли;
				
				ВыборкаПоВРИлиЦепочкам = ВыборкаПоОР.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаПоВРИлиЦепочкам.Следующий() Цикл  					
					
					Если ЕстьЦепочки Тогда
						ВыборкаПоВР = ВыборкаПоВРИлиЦепочкам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Пока ВыборкаПоВР.Следующий() Цикл
							ВывестиЧастьГрафикаПятыйВариант(ВыборкаПоВР, ВыборкаПоОр, ТекДата, ТочкаОРР, ТочкаПоложение, СерияРемонт, Диаграмма, СтруктураЦветов, ИспользоватьРасшифровку, ЭтоКорректировка, Редактировать);							
						КонецЦикла;
					Иначе
						ВыборкаПоВР = ВыборкаПоВРИлиЦепочкам; 						
						ВывестиЧастьГрафикаПятыйВариант(ВыборкаПоВР, ВыборкаПоОр, ТекДата, ТочкаОРР, ТочкаПоложение, СерияРемонт, Диаграмма, СтруктураЦветов, ИспользоватьРасшифровку, ЭтоКорректировка, Редактировать);							
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
	КонецЕсли; 
	
КонецПроцедуры // ПостроитьДиаграммуГантаДляППР()

// Функция считает продолжительность в часах по продолжительности в секундах
//
// Параметры:
//  ПродолжительностьВСекундах - Число - продолжительность в секундах.
//
// Возвращаемое значение:
//  Строка - представление продолжительности в часах.
Функция ПродолжительностьВЧасах(ПродолжительностьВСекундах) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ПродолжительностьВСекундах) Тогда
		Возврат "";
	КонецЕсли;
	
	Часы    = Цел(ПродолжительностьВСекундах / 3600);
	Минуты  = Цел((ПродолжительностьВСекундах - 3600 * Часы) / 60);
	Секунды = Окр(ПродолжительностьВСекундах - 3600 * Часы - Минуты * 60, 2);
	
	Возврат "" + Часы + " ч. " + Минуты + " мин. " + Секунды + " с.";
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Функция возвращает имя ТЧ ремонтов в документе. Если получить значение не удалось - возвращается Неопределено.
//
//	Параметры
//		Документ 	- ссылка на документ, для которонр требуется выполнить проверку.
//
Функция ПолучитьИмяТЧРемонтов(ДокументНаПроверку) Экспорт
	ТипДокумента = ТипЗнч(ДокументНаПроверку);
	
	Если ТипДокумента = Тип("ДокументСсылка.впВыявленныеДефекты") Тогда
		ИмяТЧРемонтов = "СписокДефектов";
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.впВнешнееОснованиеДляРабот") Тогда
		ИмяТЧРемонтов = "ОбследованноеОборудование";
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.впПланГрафикРемонта") Тогда 
		ИмяТЧРемонтов = "ПланРемонтов";
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.впЗаявкаНаРемонт")
			ИЛИ ТипДокумента = Тип("ДокументСсылка.впАктОВыполненииЭтапаРабот") Тогда
		ИмяТЧРемонтов = "РемонтыОборудования";
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.впЗакрытиеЗаявокИРемонтов") Тогда
  		ИмяТЧРемонтов = "ЗакрываемыеРемонты";
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ИмяТЧРемонтов;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ВспомогательныеФункцииДляРасчетаППР

Процедура ВывестиЧастьГрафикаПервыйВариант(ВыборкаПоВР, ВыборкаПоОр, ТекДата, ТочкаОРР, СерияРемонт, Диаграмма, СтруктураЦветов, ИспользоватьРасшифровку, ЭтоКорректировка, Редактировать)
	ТочкаВРР = ТочкаОРР.Точки.Добавить();
	ТочкаВРР.Текст = ВыборкаПоВР.ВидРемонтныхРаботПредставление;
	
	Если ИспользоватьРасшифровку Тогда
		ТочкаВРР.Расшифровка = ВыборкаПоВР.ВидРемонтныхРабот;
	КонецЕсли;
	
	Если ЭтоКорректировка Тогда
		// корректировка
		ТочкаВРРСт = ТочкаВРР.Точки.Добавить();
		ТочкаВРРСт.Текст = "План до корректировки";
		
		Если ИспользоватьРасшифровку Тогда
			ТочкаВРРСт.Расшифровка = ВыборкаПоВР.ВидРемонтныхРабот;
		КонецЕсли;
	КонецЕсли;
	
	Выборка = ВыборкаПоВР.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Не Выборка.Отменен И Не Выборка.Замещен Тогда
			Значение = Диаграмма.ПолучитьЗначение(ТочкаОРР, СерияРемонт);
			Интервал = Значение.Добавить();
			Интервал.Начало = Выборка.ДатаНач;
			Интервал.Конец  = КонецДня(?(Выборка.ДатаКон > Выборка.ДатаНач, Выборка.ДатаКон, Выборка.ДатаНач + 3600));
			Интервал.Текст  = Строка(Интервал.Начало) + " - " + Строка(Интервал.Конец);
			Интервал.Цвет = ?(Выборка.Отменен, СтруктураЦветов.ЦветОтмененного,?(Выборка.ДатаНач < ТекДата,  СтруктураЦветов.ЦветВыполненого,  СтруктураЦветов.ЦветЗапланированного));
			
			Если ИспользоватьРасшифровку Тогда
				Интервал.Расшифровка = ЗаполнитьРасшифровкуИнтеравалаДиаграммыППР(ВыборкаПоОР, ВыборкаПоВР, Выборка);
			КонецЕсли;
		КонецЕсли;
		
		Значение = Диаграмма.ПолучитьЗначение(ТочкаВРР, СерияРемонт);
		Значение.Редактирование = Редактировать;
		Если ИспользоватьРасшифровку Тогда
			Значение.Расшифровка = Выборка.ВидРемонтныхРабот;
		КонецЕсли;
		
		Интервал = Значение.Добавить();
		Интервал.Начало = Выборка.ДатаНач;
		Интервал.Конец  = КонецДня(?(Выборка.ДатаКон > Выборка.ДатаНач, Выборка.ДатаКон, Выборка.ДатаНач + 3600));
		Интервал.Текст  = Строка(Интервал.Начало) + " - " + Строка(Интервал.Конец);
		Интервал.Цвет   = ?(Выборка.ДатаНач < ТекДата,  СтруктураЦветов.ЦветВыполненого, ?(Выборка.Отменен,  СтруктураЦветов.ЦветОтмененного, ?(Выборка.Замещен, СтруктураЦветов.ЦветЗамещенного, СтруктураЦветов.ЦветЗапланированного)));
		
		Если ИспользоватьРасшифровку Тогда
			Интервал.Расшифровка = ЗаполнитьРасшифровкуИнтеравалаДиаграммыППР(ВыборкаПоОР, ВыборкаПоВР, Выборка);
		КонецЕсли;
		
		Если ЭтоКорректировка И Не Выборка.Отменен Тогда
			Если ЗначениеЗаполнено(Выборка.ДатаНачСт) И ЗначениеЗаполнено(Выборка.ДатаКонСт) Тогда
				// корректировка
				Значение = Диаграмма.ПолучитьЗначение(ТочкаВРРСт, СерияРемонт);
				ИнтервалСтарый = Значение.Добавить();
				ИнтервалСтарый.Начало = Выборка.ДатаНачСт;
				ИнтервалСтарый.Конец  = КонецДня(?(Выборка.ДатаКонСт > Выборка.ДатаНачСт, Выборка.ДатаКонСт, Выборка.ДатаНачСт + 3600));
				ИнтервалСтарый.Текст  = Строка(Интервал.Начало) + " - " + Строка(Интервал.Конец);        // БледноМиндальный
				ИнтервалСтарый.Цвет   = ?(Выборка.ЗамещенСт, СтруктураЦветов.ЦветЗамещенногоИсходного,  СтруктураЦветов.ЦветИсходного);
				
				Если ИспользоватьРасшифровку Тогда
					ИнтервалСтарый.Расшифровка = ЗаполнитьРасшифровкуИнтеравалаДиаграммыППР(ВыборкаПоОР, ВыборкаПоВР, Выборка);
				КонецЕсли;
				
				Если Не Выборка.Отменен Тогда
					Связь = ИнтервалСтарый.Добавить(Интервал);
					Связь.ТипСвязи = ТипСвязиДиаграммыГанта.НачалоНачало;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если Выборка.ЕстьВЗ И Выборка.ЕстьДвиженияПоВЗ Тогда
			Интервал.Текст = Интервал.Текст + Символы.ПС + "Начата работа по внутренним заказам.";
		ИначеЕсли Выборка.ЕстьВЗ И Не Выборка.ЕстьДвиженияПоВЗ Тогда
			Интервал.Текст = Интервал.Текст + Символы.ПС + "Введены внутренние заказы.";
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ВывестиЧастьГрафикаВторойВариант(ВыборкаПоВР, ВыборкаПоОр, ТекДата, ТочкаОРР, ТочкаПоложение, СерияРемонт, Диаграмма, СтруктураЦветов, ИспользоватьРасшифровку, ЭтоКорректировка, Редактировать)
	ТочкаВРР = ТочкаОРР.Точки.Добавить();
	ТочкаВРР.Текст = ВыборкаПоВР.ВидРемонтныхРаботПредставление;
	Если ИспользоватьРасшифровку Тогда
		ТочкаВРР.Расшифровка = ВыборкаПоВР.ВидРемонтныхРабот;
	КонецЕсли;
	
	Если ЭтоКорректировка Тогда
		// корректировка
		ТочкаВРРСт = ТочкаВРР.Точки.Добавить();
		ТочкаВРРСт.Текст = "План до корректировки";
		Если ИспользоватьРасшифровку Тогда
			ТочкаВРРСт.Расшифровка = ВыборкаПоВР.ВидРемонтныхРабот;
		КонецЕсли;
	КонецЕсли;
	
	Выборка = ВыборкаПоВР.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Не Выборка.Отменен И Не Выборка.Замещен Тогда
			
			Значение = Диаграмма.ПолучитьЗначение(ТочкаПоложение, СерияРемонт);
			Интервал = Значение.Добавить();
			Интервал.Начало = Выборка.ДатаНач;
			Интервал.Конец  = КонецДня(?(Выборка.ДатаКон > Выборка.ДатаНач, Выборка.ДатаКон, Выборка.ДатаНач + 3600));
			Интервал.Текст  = Строка(Интервал.Начало) + " - " + Строка(Интервал.Конец);
			Интервал.Цвет = ?(Выборка.ДатаНач < ТекДата, СтруктураЦветов.ЦветВыполненого, СтруктураЦветов.ЦветЗапланированного);
			
			Если ИспользоватьРасшифровку Тогда
				Интервал.Расшифровка = ЗаполнитьРасшифровкуИнтеравалаДиаграммыППР(ВыборкаПоОР, ВыборкаПоВР, Выборка);
			КонецЕсли;
			
			Значение = Диаграмма.ПолучитьЗначение(ТочкаОРР, СерияРемонт);
			Интервал = Значение.Добавить();
			Интервал.Начало = Выборка.ДатаНач;
			Интервал.Конец  = КонецДня(?(Выборка.ДатаКон > Выборка.ДатаНач, Выборка.ДатаКон, Выборка.ДатаНач + 3600));
			Интервал.Текст  = Строка(Интервал.Начало) + " - " + Строка(Интервал.Конец);
			Интервал.Цвет = ?(Выборка.ДатаНач < ТекДата, СтруктураЦветов.ЦветВыполненого, СтруктураЦветов.ЦветЗапланированного);
			
			Если ИспользоватьРасшифровку Тогда
				Интервал.Расшифровка = ЗаполнитьРасшифровкуИнтеравалаДиаграммыППР(ВыборкаПоОР, ВыборкаПоВР, Выборка);
			КонецЕсли;
		КонецЕсли;
		
		Значение = Диаграмма.ПолучитьЗначение(ТочкаВРР, СерияРемонт);
		Значение.Редактирование = Редактировать;
		Если ИспользоватьРасшифровку Тогда
			Значение.Расшифровка = Выборка.ВидРемонтныхРабот;
		КонецЕсли;
		
		Интервал = Значение.Добавить();
		Интервал.Начало = Выборка.ДатаНач;
		Интервал.Конец  = КонецДня(?(Выборка.ДатаКон > Выборка.ДатаНач, Выборка.ДатаКон, Выборка.ДатаНач + 3600));
		Интервал.Текст  = Строка(Интервал.Начало) + " - " + Строка(Интервал.Конец);
		Интервал.Цвет   = ?(Выборка.ДатаНач < ТекДата, СтруктураЦветов.ЦветВыполненого, ?(Выборка.Отменен, СтруктураЦветов.ЦветОтмененного, ?(Выборка.Замещен,СтруктураЦветов.ЦветЗамещенного,СтруктураЦветов.ЦветЗапланированного)));
		
		Если ИспользоватьРасшифровку Тогда
			Интервал.Расшифровка = ЗаполнитьРасшифровкуИнтеравалаДиаграммыППР(ВыборкаПоОР, ВыборкаПоВР, Выборка);
		КонецЕсли;
		
		Если ЭтоКорректировка И Не Выборка.Отменен Тогда
			Если ЗначениеЗаполнено(Выборка.ДатаНачСт) И ЗначениеЗаполнено(Выборка.ДатаКонСт) Тогда
				// корректировка
				Значение = Диаграмма.ПолучитьЗначение(ТочкаВРРСт, СерияРемонт);
				ИнтервалСтарый = Значение.Добавить();
				ИнтервалСтарый.Начало = Выборка.ДатаНачСт;
				ИнтервалСтарый.Конец  = КонецДня(?(Выборка.ДатаКонСт > Выборка.ДатаНачСт, Выборка.ДатаКонСт, Выборка.ДатаНачСт + 3600));
				ИнтервалСтарый.Текст  = Строка(Интервал.Начало) + " - " + Строка(Интервал.Конец);        
				ИнтервалСтарый.Цвет   = ?(Выборка.ЗамещенСт, СтруктураЦветов.ЦветЗамещенногоИсходного, СтруктураЦветов.ЦветИсходного);
				
				Если ИспользоватьРасшифровку Тогда
					ИнтервалСтарый.Расшифровка = ЗаполнитьРасшифровкуИнтеравалаДиаграммыППР(ВыборкаПоОР, ВыборкаПоВР, Выборка);
				КонецЕсли;
				
				Если Не Выборка.Отменен Тогда
					Связь = ИнтервалСтарый.Добавить(Интервал);
					Связь.ТипСвязи = ТипСвязиДиаграммыГанта.НачалоНачало;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если Выборка.ЕстьВЗ И Выборка.ЕстьДвиженияПоВЗ Тогда
			Интервал.Текст = Интервал.Текст + Символы.ПС + "Начата работа по внутренним заказам.";
		ИначеЕсли Выборка.ЕстьВЗ И Не Выборка.ЕстьДвиженияПоВЗ Тогда
			Интервал.Текст = Интервал.Текст + Символы.ПС + "Введены внутренние заказы.";
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ВывестиЧастьГрафикаТретийВариант(ВыборкаПоВР, ВыборкаПоОр, ТекДата, ТочкаОРР, ТочкаПоложение, СерияРемонт, Диаграмма, СтруктураЦветов, ИспользоватьРасшифровку, ЭтоКорректировка, Редактировать)
	ТочкаВРР = ТочкаОРР.Точки.Добавить();
	ТочкаВРР.Текст = ВыборкаПоВР.ВидРемонтныхРаботПредставление;
	Если ИспользоватьРасшифровку Тогда
		ТочкаВРР.Расшифровка = ВыборкаПоВР.ВидРемонтныхРабот;
	КонецЕсли;
	
	Если ЭтоКорректировка Тогда
		// корректировка
		ТочкаВРРСт = ТочкаВРР.Точки.Добавить();
		ТочкаВРРСт.Текст = "План до корректировки";
		Если ИспользоватьРасшифровку Тогда
			ТочкаВРРСт.Расшифровка = ВыборкаПоВР.ВидРемонтныхРабот;
		КонецЕсли;
	КонецЕсли;
	
	Выборка = ВыборкаПоВР.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Не Выборка.Отменен И Не Выборка.Замещен Тогда
			
			Значение = Диаграмма.ПолучитьЗначение(ТочкаПоложение, СерияРемонт);
			Интервал = Значение.Добавить();
			Интервал.Начало = Выборка.ДатаНач;
			Интервал.Конец  = КонецДня(?(Выборка.ДатаКон > Выборка.ДатаНач, Выборка.ДатаКон, Выборка.ДатаНач + 3600));
			Интервал.Текст  = Строка(Интервал.Начало) + " - " + Строка(Интервал.Конец);
			Интервал.Цвет = ?(Выборка.ДатаНач < ТекДата, СтруктураЦветов.ЦветВыполненого, СтруктураЦветов.ЦветЗапланированного);
			
			Если ИспользоватьРасшифровку Тогда
				Интервал.Расшифровка = ЗаполнитьРасшифровкуИнтеравалаДиаграммыППР(ВыборкаПоОР, ВыборкаПоВР, Выборка);
			КонецЕсли;
		
			Значение = Диаграмма.ПолучитьЗначение(ТочкаОРР, СерияРемонт);
			Интервал = Значение.Добавить();
			Интервал.Начало = Выборка.ДатаНач;
			Интервал.Конец  = КонецДня(?(Выборка.ДатаКон > Выборка.ДатаНач, Выборка.ДатаКон, Выборка.ДатаНач + 3600));
			Интервал.Текст  = Строка(Интервал.Начало) + " - " + Строка(Интервал.Конец);
			Интервал.Цвет = ?(Выборка.ДатаНач < ТекДата, СтруктураЦветов.ЦветВыполненого, СтруктураЦветов.ЦветЗапланированного);
			
			Если ИспользоватьРасшифровку Тогда
				Интервал.Расшифровка = ЗаполнитьРасшифровкуИнтеравалаДиаграммыППР(ВыборкаПоОР, ВыборкаПоВР, Выборка);
			КонецЕсли;
		
		КонецЕсли;
		
		Значение = Диаграмма.ПолучитьЗначение(ТочкаВРР, СерияРемонт);
		Значение.Редактирование = Редактировать;
		Если ИспользоватьРасшифровку Тогда
			Значение.Расшифровка = Выборка.ВидРемонтныхРабот;
		КонецЕсли;
		
		Интервал = Значение.Добавить();
		Интервал.Начало = Выборка.ДатаНач;
		Интервал.Конец  = КонецДня(?(Выборка.ДатаКон > Выборка.ДатаНач, Выборка.ДатаКон, Выборка.ДатаНач + 3600));
		Интервал.Текст  = Строка(Интервал.Начало) + " - " + Строка(Интервал.Конец);
		Интервал.Цвет   = ?(Выборка.ДатаНач < ТекДата, СтруктураЦветов.ЦветВыполненого, ?(Выборка.Отменен, СтруктураЦветов.ЦветОтмененного, ?(Выборка.Замещен,СтруктураЦветов.ЦветЗамещенного,СтруктураЦветов.ЦветЗапланированного)));
		
		Если ИспользоватьРасшифровку Тогда
			Интервал.Расшифровка = ЗаполнитьРасшифровкуИнтеравалаДиаграммыППР(ВыборкаПоОР, ВыборкаПоВР, Выборка);
		КонецЕсли;
		
		Если ЭтоКорректировка И Не Выборка.Отменен Тогда
			Если ЗначениеЗаполнено(Выборка.ДатаНачСт) И ЗначениеЗаполнено(Выборка.ДатаКонСт) Тогда
				// корректировка
				Значение = Диаграмма.ПолучитьЗначение(ТочкаВРРСт, СерияРемонт);
				ИнтервалСтарый = Значение.Добавить();
				ИнтервалСтарый.Начало = Выборка.ДатаНачСт;
				ИнтервалСтарый.Конец  = КонецДня(?(Выборка.ДатаКонСт > Выборка.ДатаНачСт, Выборка.ДатаКонСт, Выборка.ДатаНачСт + 3600));
				ИнтервалСтарый.Текст  = Строка(Интервал.Начало) + " - " + Строка(Интервал.Конец);        // БледноМиндальный
				ИнтервалСтарый.Цвет   = ?(Выборка.ЗамещенСт,СтруктураЦветов.ЦветЗамещенногоИсходного, СтруктураЦветов.ЦветИсходного);
				
				Если ИспользоватьРасшифровку Тогда
					ИнтервалСтарый.Расшифровка = ЗаполнитьРасшифровкуИнтеравалаДиаграммыППР(ВыборкаПоОР, ВыборкаПоВР, Выборка);
				КонецЕсли;
		
				Если Не Выборка.Отменен Тогда
					Связь = ИнтервалСтарый.Добавить(Интервал);
					Связь.ТипСвязи = ТипСвязиДиаграммыГанта.НачалоНачало;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;		
		
		Если Выборка.ЕстьВЗ И Выборка.ЕстьДвиженияПоВЗ Тогда
			Интервал.Текст = Интервал.Текст + Символы.ПС + "Начата работа по внутренним заказам.";
		ИначеЕсли Выборка.ЕстьВЗ И Не Выборка.ЕстьДвиженияПоВЗ Тогда
			Интервал.Текст = Интервал.Текст + Символы.ПС + "Введены внутренние заказы.";
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВывестиЧастьГрафикаЧетвертыйВариант(ВыборкаПоВР, ВыборкаПоОр, ТекДата, ТочкаОРР, ТочкаПоложение, ТочкаВРРСт, СерияРемонт, Диаграмма, СтруктураЦветов, ИспользоватьРасшифровку, ЭтоКорректировка, Редактировать)
	
	Если Не ВыборкаПоВР.Отменен И Не ВыборкаПоВР.Замещен Тогда
		
		Значение = Диаграмма.ПолучитьЗначение(ТочкаОРР, СерияРемонт);
		Значение.Редактирование = Редактировать;
		Интервал = Значение.Добавить();
		Интервал.Начало = ВыборкаПоВР.ДатаНач;
		Интервал.Конец  = КонецДня(?(ВыборкаПоВР.ДатаКон > ВыборкаПоВР.ДатаНач, ВыборкаПоВР.ДатаКон, ВыборкаПоВР.ДатаНач + 3600));
		Интервал.Текст  = Строка(Интервал.Начало) + " - " + Строка(Интервал.Конец);
		Интервал.Цвет = ?(ВыборкаПоВР.ДатаНач < ТекДата, СтруктураЦветов.ЦветВыполненого, СтруктураЦветов.ЦветЗапланированного);
		Интервал.Расшифровка = ЗаполнитьРасшифровкуИнтеравалаДиаграммыППР(ВыборкаПоОР, ВыборкаПоВР, ВыборкаПоВР);
	КонецЕсли;
	
	Значение = Диаграмма.ПолучитьЗначение(ТочкаПоложение, СерияРемонт);
	Интервал = Значение.Добавить();
	Значение.Редактирование = Редактировать;
	Интервал.Начало = ВыборкаПоВР.ДатаНач;
	Интервал.Конец  = КонецДня(?(ВыборкаПоВР.ДатаКон > ВыборкаПоВР.ДатаНач, ВыборкаПоВР.ДатаКон, ВыборкаПоВР.ДатаНач + 3600));
	Интервал.Текст  = Строка(Интервал.Начало) + " - " + Строка(Интервал.Конец);
	Интервал.Цвет = ?(ВыборкаПоВР.ДатаНач < ТекДата, СтруктураЦветов.ЦветВыполненого, ?(ВыборкаПоВР.Отменен, СтруктураЦветов.ЦветОтмененного, ?(ВыборкаПоВР.Замещен,СтруктураЦветов.ЦветЗамещенного,СтруктураЦветов.ЦветЗапланированного)));
	Интервал.Расшифровка = ЗаполнитьРасшифровкуИнтеравалаДиаграммыППР(ВыборкаПоОР, ВыборкаПоВР, ВыборкаПоВР);
	
	Если ЭтоКорректировка И Не ВыборкаПоВР.Отменен Тогда
		Если ЗначениеЗаполнено(ВыборкаПоВР.ДатаНачСт) И ЗначениеЗаполнено(ВыборкаПоВР.ДатаКонСт) Тогда
			// корректировка
			Значение = Диаграмма.ПолучитьЗначение(ТочкаВРРСт, СерияРемонт);
			ИнтервалСтарый = Значение.Добавить();
			ИнтервалСтарый.Начало = ВыборкаПоВР.ДатаНачСт;
			ИнтервалСтарый.Конец  = КонецДня(?(ВыборкаПоВР.ДатаКонСт > ВыборкаПоВР.ДатаНачСт, ВыборкаПоВР.ДатаКонСт, ВыборкаПоВР.ДатаНачСт + 3600));
			ИнтервалСтарый.Текст  = Строка(Интервал.Начало) + " - " + Строка(Интервал.Конец);        // БледноМиндальный
			ИнтервалСтарый.Цвет   = ?(ВыборкаПоВР.ЗамещенСт,СтруктураЦветов.ЦветЗамещенногоИсходного, СтруктураЦветов.ЦветИсходного);
			ИнтервалСтарый.Расшифровка = ЗаполнитьРасшифровкуИнтеравалаДиаграммыППР(ВыборкаПоОР, ВыборкаПоВР, ВыборкаПоВР);
			
			Если Не ВыборкаПоВР.Отменен Тогда
				Связь = ИнтервалСтарый.Добавить(Интервал);
				Связь.ТипСвязи = ТипСвязиДиаграммыГанта.НачалоНачало;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ВывестиЧастьГрафикаПятыйВариант(ВыборкаПоВР, ВыборкаПоОр, ТекДата, ТочкаОРР, ТочкаПоложение, СерияРемонт, Диаграмма, СтруктураЦветов, ИспользоватьРасшифровку, ЭтоКорректировка, Редактировать)
	ТочкаВРР = ТочкаОРР.Точки.Добавить();
	ТочкаВРР.Текст = ВыборкаПоВР.ВидРемонтныхРаботПредставление;
	Если ИспользоватьРасшифровку Тогда
		ТочкаВРР.Расшифровка = ВыборкаПоВР.ВидРемонтныхРабот;
	КонецЕсли;
	
	Если ЭтоКорректировка Тогда
		// корректировка
		ТочкаВРРСт = ТочкаВРР.Точки.Добавить();
		ТочкаВРРСт.Текст = "План до корректировки";
		Если ИспользоватьРасшифровку Тогда
			ТочкаВРРСт.Расшифровка = ВыборкаПоВР.ВидРемонтныхРабот;
		КонецЕсли;
	КонецЕсли;
	
	Выборка = ВыборкаПоВР.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Не Выборка.Отменен И Не Выборка.Замещен Тогда
			
			Значение = Диаграмма.ПолучитьЗначение(ТочкаПоложение, СерияРемонт);
			Интервал = Значение.Добавить();
			Интервал.Начало = Выборка.ДатаНач;
			Интервал.Конец  = КонецДня(?(Выборка.ДатаКон > Выборка.ДатаНач, Выборка.ДатаКон, Выборка.ДатаНач + 3600));
			Интервал.Текст  = Строка(Интервал.Начало) + " - " + Строка(Интервал.Конец);
			Интервал.Цвет = ?(Выборка.ДатаНач < ТекДата, СтруктураЦветов.ЦветВыполненого, СтруктураЦветов.ЦветЗапланированного);
			
			Если ИспользоватьРасшифровку Тогда
				Интервал.Расшифровка = ЗаполнитьРасшифровкуИнтеравалаДиаграммыППР(ВыборкаПоОР, ВыборкаПоВР, Выборка); 
			КонецЕсли;
			
			Значение = Диаграмма.ПолучитьЗначение(ТочкаОРР, СерияРемонт);
			Интервал = Значение.Добавить();
			Интервал.Начало = Выборка.ДатаНач;
			Интервал.Конец  = КонецДня(?(Выборка.ДатаКон > Выборка.ДатаНач, Выборка.ДатаКон, Выборка.ДатаНач + 3600));
			Интервал.Текст  = Строка(Интервал.Начало) + " - " + Строка(Интервал.Конец);
			Интервал.Цвет = ?(Выборка.ДатаНач < ТекДата, СтруктураЦветов.ЦветВыполненого, СтруктураЦветов.ЦветЗапланированного);
			
			Если ИспользоватьРасшифровку Тогда
				Интервал.Расшифровка = ЗаполнитьРасшифровкуИнтеравалаДиаграммыППР(ВыборкаПоОР, ВыборкаПоВР, Выборка); 
			КонецЕсли;
		КонецЕсли;	
		
		Значение = Диаграмма.ПолучитьЗначение(ТочкаВРР, СерияРемонт);
		Значение.Редактирование = Редактировать;
		Если ИспользоватьРасшифровку Тогда
			Значение.Расшифровка = Выборка.ВидРемонтныхРабот;
		КонецЕсли;
		
		Интервал = Значение.Добавить();
		Интервал.Начало = Выборка.ДатаНач;
		Интервал.Конец  = КонецДня(?(Выборка.ДатаКон > Выборка.ДатаНач, Выборка.ДатаКон, Выборка.ДатаНач + 3600));
		Интервал.Текст  = Строка(Интервал.Начало) + " - " + Строка(Интервал.Конец);
		Интервал.Цвет   = ?(Выборка.ДатаНач < ТекДата, СтруктураЦветов.ЦветВыполненого, ?(Выборка.Отменен, СтруктураЦветов.ЦветОтмененного, ?(Выборка.Замещен,СтруктураЦветов.ЦветЗамещенного,СтруктураЦветов.ЦветЗапланированного)));
		
		Если ИспользоватьРасшифровку Тогда
			Интервал.Расшифровка = ЗаполнитьРасшифровкуИнтеравалаДиаграммыППР(ВыборкаПоОР, ВыборкаПоВР, Выборка); 
		КонецЕсли;
		
		Если ЭтоКорректировка И Не Выборка.Отменен Тогда
			Если ЗначениеЗаполнено(Выборка.ДатаНачСт) И ЗначениеЗаполнено(Выборка.ДатаКонСт) Тогда
				// корректировка
				Значение = Диаграмма.ПолучитьЗначение(ТочкаВРРСт, СерияРемонт);
				ИнтервалСтарый = Значение.Добавить();
				ИнтервалСтарый.Начало = Выборка.ДатаНачСт;
				ИнтервалСтарый.Конец  = КонецДня(?(Выборка.ДатаКонСт > Выборка.ДатаНачСт, Выборка.ДатаКонСт, Выборка.ДатаНачСт + 3600));
				ИнтервалСтарый.Текст  = Строка(Интервал.Начало) + " - " + Строка(Интервал.Конец);        // БледноМиндальный
				ИнтервалСтарый.Цвет   = ?(Выборка.ЗамещенСт,СтруктураЦветов.ЦветЗамещенногоИсходного, СтруктураЦветов.ЦветИсходного);
				
				Если ИспользоватьРасшифровку Тогда
					ИнтервалСтарый.Расшифровка = ЗаполнитьРасшифровкуИнтеравалаДиаграммыППР(ВыборкаПоОР, ВыборкаПоВР, Выборка); 
				КонецЕсли;
				
				Если Не Выборка.Отменен Тогда
					Связь = ИнтервалСтарый.Добавить(Интервал);
					Связь.ТипСвязи = ТипСвязиДиаграммыГанта.НачалоНачало;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		
		Если Выборка.ЕстьВЗ И Выборка.ЕстьДвиженияПоВЗ Тогда
			Интервал.Текст = Интервал.Текст + Символы.ПС + "Начата работа по внутренним заказам.";
		ИначеЕсли Выборка.ЕстьВЗ И Не Выборка.ЕстьДвиженияПоВЗ Тогда
			Интервал.Текст = Интервал.Текст + Символы.ПС + "Введены внутренние заказы.";
		КонецЕсли;
		
	КонецЦикла;  
	
КонецПроцедуры

Функция ЗаполнитьРасшифровкуИнтеравалаДиаграммыППР(ВыборкаПоОР, ВыборкаПоВР, Выборка)
	
	Расшифровка = Новый Структура;
	Расшифровка.Вставить("ОР", ВыборкаПоОР.ОбъектРемонтныхРабот);
	Расшифровка.Вставить("ВР", ВыборкаПоВР.ВидРемонтныхРабот);
	Расшифровка.Вставить("ДатаНач", Выборка.ДатаНач);
	Расшифровка.Вставить("ДоступенДляРедактирования", Выборка.ДоступенДляРедактирования);
	
	Попытка
		Расшифровка.Вставить("ДокументППР", Выборка.ДокументППР);
	Исключение
		Расшифровка.Вставить("ДокументППР", Неопределено);
	КонецПопытки;
	
	Расшифровка.Вставить("ID", Выборка.ID);

	Возврат Расшифровка;
	
КонецФункции

#КонецОбласти

#КонецОбласти

