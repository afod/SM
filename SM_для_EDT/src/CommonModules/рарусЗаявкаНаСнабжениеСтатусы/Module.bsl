
Процедура РассчитатьСостояниеДокумента(ЗаявкаНаСнабжение, Отказ) Экспорт
	
	РассчитатьЗаписатьСостоянияСтрокДокумента(ЗаявкаНаСнабжение);
	
	РассчитатьОбщееСостояниеДокумента(ЗаявкаНаСнабжение);
	
КонецПроцедуры	

Процедура РассчитатьЗаписатьСостоянияСтрокДокумента(ЗаявкаНаСнабжение)

	ПараметрыРасчета = ПолучитьПараметрыРасчета(ЗаявкаНаСнабжение);
	
	ТекущиеСостоянияСтрок = ПолучитьТекущиеСостоянияСтрокДокумента(ЗаявкаНаСнабжение);
	
	ТекущиеСостоянияСтрок.Колонки.Добавить("Состояние", Новый ОписаниеТипов("ПеречислениеСсылка.рарусСостоянияЗаявокНаСнабжение"));
	
	Для Каждого Строка Из ТекущиеСостоянияСтрок цикл
		
		ПереключитьСостояниеПоСтроке(Строка, ПараметрыРасчета);	
		
	КонецЦикла;	
	
	ЗаписатьСостояния(ТекущиеСостоянияСтрок, ЗаявкаНаСнабжение);

КонецПроцедуры

Процедура РассчитатьОбщееСостояниеДокумента(ЗаявкаНаСнабжение)

	//TODO
	
КонецПроцедуры

Процедура ЗаписатьСостояния(ТаблицаСостояний, ЗаявкаНаСнабжение)

	НЗ = РегистрыСведений.рарусСостоянияСтрокЗаявокНаСнабжение.СоздатьНаборЗаписей();
	НЗ.Отбор.Заказ.Установить(ЗаявкаНаСнабжение);
	НЗ.Загрузить(ТаблицаСостояний);
	НЗ.Записать();

КонецПроцедуры

Функция ПолучитьПредставлениеСостояния(Состояние) Экспорт
	
	Если Состояние = СостояниеНачальное() тогда
		Возврат СостояниеНачальноеПредставление();
	КонецЕсли;
	
	Возврат Строка(Состояние);
	
КонецФункции

#Область РасчетСостояний

Процедура ПереключитьСостояниеПоСтроке(Строка, ПараметрыРасчета)
	
	СостояниеТекущее = Строка.СостояниеТекущее;
	
	Если Не МожноПереключатьСостояние(СостояниеТекущее)	тогда
		Строка.Состояние = СостояниеТекущее;
		Возврат;
	КонецЕсли;	
	
	Строка.Состояние = РассчитатьСостояние(СостояниеТекущее, ПараметрыРасчета);
	
КонецПроцедуры

Функция РассчитатьСостояние(СостояниеТекущее, ПараметрыРасчета)
	
	СостояниеНовое = СостояниеТекущее;
	
	Если СостояниеТекущее = СостояниеНачальное() тогда
		СостояниеНовое = ПереходИзНачальногоСостояния(ПараметрыРасчета);
	КонецЕсли;	
	
	Возврат СостояниеНовое;
	
КонецФункции

Функция ПереходИзНачальногоСостояния(ПараметрыРасчета)
	
	Возврат СостояниеСогласованиеКапитаном();
	
КонецФункции	

Функция МожноПереключатьСостояние(Состояние)
	
	Возврат Состояние = СостояниеНачальное();		 
	
КонецФункции	

#КонецОбласти 
 
#Область ПараметрыРасчета

Функция ПолучитьПараметрыРасчета(ЗаявкаНаСнабжение)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ЗаявкаНаСнабжение);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	впЗаявкаНаСнабжение.Ссылка КАК Заказ,
	|	впЗаявкаНаСнабжение.СтатусСогласования КАК СтатусСогласования,
	|	впЗаявкаНаСнабжение.Ответственный КАК Ответственный,
	|	впЗаявкаНаСнабжение.ОбластьРедактирования КАК ОбластьРедактирования
	|ИЗ
	|	Документ.впЗаявкаНаСнабжение КАК впЗаявкаНаСнабжение
	|ГДЕ
	|	впЗаявкаНаСнабжение.Ссылка = &Ссылка";
	
	Таблица = Запрос.Выполнить().Выгрузить();
	
	Возврат ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Таблица[0]);

КонецФункции 

Функция ПолучитьТекущиеСостоянияСтрокДокумента(ЗаявкаНаСнабжение) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ЗаявкаНаСнабжение);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	впЗаявкаНаСнабжениеМатериалыИРаботы.Ссылка КАК Заказ,
	|	впЗаявкаНаСнабжениеМатериалыИРаботы.КодСтроки КАК КодСтроки,
	|	ЕСТЬNULL(рарусСостоянияСтрокЗаявокНаСнабжение.Состояние, Значение(Перечисление.рарусСостоянияЗаявокНаСнабжение.ПустаяСсылка)) КАК СостояниеТекущее
	|ИЗ
	|	Документ.впЗаявкаНаСнабжение.МатериалыИРаботы КАК впЗаявкаНаСнабжениеМатериалыИРаботы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.рарусСостоянияСтрокЗаявокНаСнабжение КАК рарусСостоянияСтрокЗаявокНаСнабжение
	|		ПО впЗаявкаНаСнабжениеМатериалыИРаботы.Ссылка = рарусСостоянияСтрокЗаявокНаСнабжение.Заказ
	|			И впЗаявкаНаСнабжениеМатериалыИРаботы.КодСтроки = рарусСостоянияСтрокЗаявокНаСнабжение.КодСтроки
	|ГДЕ
	|	впЗаявкаНаСнабжениеМатериалыИРаботы.Ссылка = &Ссылка";
	
	ТекущиеСтатусыТаблица = Запрос.Выполнить().Выгрузить();
	
	Возврат ТекущиеСтатусыТаблица;

КонецФункции 

#КонецОбласти 

#Область Состояния

Функция СостояниеНачальное()
	
	Возврат Перечисления.рарусСостоянияЗаявокНаСнабжение.ПустаяСсылка();

КонецФункции

Функция СостояниеНачальноеПредставление()
	
	Возврат "Черновик";

КонецФункции

Функция СостояниеСогласованиеКапитаном()
	
	Возврат Перечисления.рарусСостоянияЗаявокНаСнабжение.СогласованиеКапитаном;

КонецФункции

#КонецОбласти 