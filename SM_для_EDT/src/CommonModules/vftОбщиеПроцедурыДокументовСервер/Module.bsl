#Область События_Форм
// Процедура - При создании на сервере
// Выполняет общие действия для документов при создании
// Параметры:
//  Отказ	 - Булево	 -  Отказ
//  Объект	 - ДокументОбъект	 - Объект
//
Процедура ПриСозданииНаСервере(Отказ, Объект) Экспорт
	
	Если Не ЗначениеЗаполнено(Объект.Статус) Тогда
		
		Объект.Статус = Перечисления.vftСтатусыДокументовСообщений.Черновик;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Судно) Тогда
		
		Объект.Судно = vftОбщегоНазначения.ПолучитьЗначениеПоУмолчанию("ОсновноеСудно");
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Дата) Тогда
		
		Объект.Дата = ТекущаяДата();
		
	КонецЕсли;
	
КонецПроцедуры

//rarus_rasuli_30.03.18 ++
Процедура ПриСозданииНаСервереРапорт(Отказ, Объект) Экспорт
	
	Если Не ЗначениеЗаполнено(Объект.Статус) Тогда
		
		Объект.Статус = Перечисления.vftСтатусыДокументаРапортОПовреждении.Черновик;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Судно) Тогда
		
		Объект.Судно = vftОбщегоНазначения.ПолучитьЗначениеПоУмолчанию("ОсновноеСудно");
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Дата) Тогда
		
		Объект.Дата = ТекущаяДата();
		
	КонецЕсли;
	
КонецПроцедуры
//rarus_rasuli_30.03.18 --
/////rarus_rasuli
Процедура ПриКопировании(ЭтотОбъект, ОбъектКопирования) Экспорт
	
	ЭтотОбъект.Статус 			= Перечисления.vftСтатусыДокументовСообщений.Черновик;
	ЭтотОбъект.ОтветКомпании	= "";
КонецПроцедуры


#Область Доступность_Элементов_Формы
Процедура УстановитьДоступностьЭлементовФормы(Форма) Экспорт
	
	Если РольДоступна("vftРедактированиеВсехРеквизитовСообщений") ИЛИ РольДоступна("ПолныеПрава") Тогда
		
		ДоступностьРедактированияВсехРеквизитов = Истина;
		
	Иначе
		
		ДоступностьРедактированияВсехРеквизитов = ЛОЖЬ;
		
	КонецЕсли;
	Форма.Элементы.ФормаРазрешитьРедактированиеВсехРеквизитов.Доступность = ДоступностьРедактированияВсехРеквизитов;
	
КонецПроцедуры	

Функция ПолучитьВсеЭлементыФормыДокумента(Объект,Служебные = ЛОЖЬ)  Экспорт
	
	МассивВсеРеквизиты = новый Массив;
	
	
	Если ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.VftСообщениеОПотенциальномИнциденте") Тогда
		
		МассивВсеРеквизиты.Добавить("ДатаВремя");
		МассивВсеРеквизиты.Добавить("Судно");
		МассивВсеРеквизиты.Добавить("ОписаниеПотенциальногоИнцидента");
		МассивВсеРеквизиты.Добавить("ПричинаВозникновения");
		МассивВсеРеквизиты.Добавить("ВозможныеПоследствия");
		МассивВсеРеквизиты.Добавить("ПредпринятыеДействия");
		МассивВсеРеквизиты.Добавить("Примечание");
		МассивВсеРеквизиты.Добавить("ЛицоСообщившееОбИнциденте");
		МассивВсеРеквизиты.Добавить("ФИОЛицоСообщившееОбИнциденте");
		МассивВсеРеквизиты.Добавить("ФИОКапитана");
		МассивВсеРеквизиты.Добавить("ОтветКомпании");
		МассивВсеРеквизиты.Добавить("Ответственный");
		
		Если Служебные тогда
			МассивВсеРеквизиты.Добавить("Дата");
			МассивВсеРеквизиты.Добавить("Номер");
			МассивВсеРеквизиты.Добавить("Статус");
		КонецЕсли;
		
		
	ИначеЕсли ТипЗнч(Объект.ссылка)	  = Тип("ДокументСсылка.vftАнализСУБ") Тогда
		
		
		МассивВсеРеквизиты.Добавить("Судно");
		МассивВсеРеквизиты.Добавить("ФИОКапитана");
		МассивВсеРеквизиты.Добавить("ОтветКомпании");
		МассивВсеРеквизиты.Добавить("Ответственный");		
		МассивВсеРеквизиты.Добавить("ПериодИсполненияОбязанностейС");
		МассивВсеРеквизиты.Добавить("ПериодИсполненияОбязанностейПо");		
		МассивВсеРеквизиты.Добавить("Предложение");
		МассивВсеРеквизиты.Добавить("ОтветКомпанииНаПредложение");
		МассивВсеРеквизиты.Добавить("ОтветственныйКомпании");
		МассивВсеРеквизиты.Добавить("НетПредложения");
		// +++ rarus plotks 19.12.2016 
		МассивВсеРеквизиты.Добавить("ОбщаяЭффективностьСудовойСУБ");
		МассивВсеРеквизиты.Добавить("КомментарийЭффективностьСудовойСУБ");  
		// --- rarus plotks 19.12.2016 
		
		Если Служебные тогда
			МассивВсеРеквизиты.Добавить("Дата");
			МассивВсеРеквизиты.Добавить("Номер");
			МассивВсеРеквизиты.Добавить("Статус");
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Объект.ссылка)	  = Тип("ДокументСсылка.vftДокладОСостоянииБезопасности") Тогда
		
		МассивВсеРеквизиты.Добавить("Судно");
		МассивВсеРеквизиты.Добавить("ФИОКапитана");
		МассивВсеРеквизиты.Добавить("ОтветКомпании");
		МассивВсеРеквизиты.Добавить("Ответственный");		
		МассивВсеРеквизиты.Добавить("ПериодОбзораС");
		МассивВсеРеквизиты.Добавить("ПериодОбзораПо");		
		МассивВсеРеквизиты.Добавить("Председатель");
		МассивВсеРеквизиты.Добавить("СПКМ");
		МассивВсеРеквизиты.Добавить("СМХ");
		МассивВсеРеквизиты.Добавить("ОфицерПоБезопасности");
		МассивВсеРеквизиты.Добавить("ПредставительМоряков");
		МассивВсеРеквизиты.Добавить("ПредставительРядовогоСостава");		
		МассивВсеРеквизиты.Добавить("СтраницаСостояниеБезопасности");
		МассивВсеРеквизиты.Добавить("СтраницаНесоответствияВСистемеУправленияБезопасностью");
		МассивВсеРеквизиты.Добавить("ГруппаПроведенныеТревоги");
		МассивВсеРеквизиты.Добавить("Предложение");
		МассивВсеРеквизиты.Добавить("ОтветКомпанииНаПредложение");
		МассивВсеРеквизиты.Добавить("ГруппаРезультаты");
		МассивВсеРеквизиты.Добавить("ГруппаПримечание");   
		МассивВсеРеквизиты.Добавить("ПредоложенияПоКорректуреСудовойСУБ");
		///rarus_rasulli_28.02.18 ++
		МассивВсеРеквизиты.Добавить("МесяцОбзора");
		///rarus_rasulli_28.02.18 --
		
		Если Служебные тогда
			МассивВсеРеквизиты.Добавить("Дата");
			МассивВсеРеквизиты.Добавить("Номер");
			МассивВсеРеквизиты.Добавить("Статус");
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Объект.ссылка)	  = Тип("СправочникСсылка.vftДокладыОНесоответствии") Тогда
		
		
		МассивВсеРеквизиты.Добавить("Судно");
		МассивВсеРеквизиты.Добавить("ФИОКапитана");
		МассивВсеРеквизиты.Добавить("ФИОИнспектора");
		МассивВсеРеквизиты.Добавить("ИнспектирующийОрган");
		МассивВсеРеквизиты.Добавить("МестоИнспекции");
		МассивВсеРеквизиты.Добавить("ДатаИнспекции");
		МассивВсеРеквизиты.Добавить("СписокНесоответствий");		
		МассивВсеРеквизиты.Добавить("ОтветКомпании");
		МассивВсеРеквизиты.Добавить("Ответственный");  
		МассивВсеРеквизиты.Добавить("СрокУстранения");
		
		
		
		Если Служебные тогда
			МассивВсеРеквизиты.Добавить("Дата");
			МассивВсеРеквизиты.Добавить("Код");
			МассивВсеРеквизиты.Добавить("Статус");
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Объект.ссылка)	  = Тип("СправочникСсылка.vftНесоответствия") Тогда
		
		
		МассивВсеРеквизиты.Добавить("Судно");
		МассивВсеРеквизиты.Добавить("Владелец"); 
		МассивВсеРеквизиты.Добавить("ГруппаСтраницаНесоответствие");
		МассивВсеРеквизиты.Добавить("ГруппаСтраницаДонесениеОбУсранении");
		МассивВсеРеквизиты.Добавить("ГруппаСтраницаРешениеКомпании");
		// ++ rarus kloa 08.01.2019 
		МассивВсеРеквизиты.Добавить("ГруппаСтраницаПредупреждающиеДействия");
		// -- rarus kloa 08.01.2019 
		
		
		
		
		
		Если Служебные тогда
			МассивВсеРеквизиты.Добавить("Дата");
			МассивВсеРеквизиты.Добавить("Код");
			МассивВсеРеквизиты.Добавить("Статус");
		КонецЕсли;
		
		
		
	КонецЕсли;
	
	Возврат МассивВсеРеквизиты;
	
КонецФункции

Функция СкопироватьМассивСтрок(Массив,РеквизитыИсключение)   Экспорт
	
	НовыйМассив = Новый Массив;
	
	Для Каждого ЭлементМассива из Массив Цикл
		
		Если Найти(РеквизитыИсключение,"#"+ЭлементМассива+"#") = 0 Тогда
			НовыйМассив.Добавить(ЭлементМассива);	
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат НовыйМассив;
	
КонецФункции

Процедура УстановитьДоступностьРеквизитов(Форма,МассивИменРеквизитов,ТолькоПросмотр)  Экспорт
	
	Если МассивИменРеквизитов <> Неопределено Тогда
		
		Для Каждого Реквизит из МассивИменРеквизитов Цикл
			
			Форма.Элементы[Реквизит].ТолькоПросмотр = ТолькоПросмотр;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РазрешитьРедактированиеВсехРеквизитов(Форма)  Экспорт
	
	Форма.ТолькоПросмотр = ЛОЖЬ; 	
	УстановитьДоступностьРеквизитов(Форма
	,ПолучитьВсеЭлементыФормыДокумента(Форма.Объект,Истина)
	,ЛОЖЬ);              
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Кнопки_Изменения_Статуса

// Размещает команды изменения статуса на форме.
//
// Параметры:
//   Форма                            - УправляемаяФорма - форма, в которой необходимо разместить подменю Печать.
//   МестоРазмещенияКомандПоУмолчанию - ЭлементФормы - группа, в которую необходимо разместить подменю Печать,
//                                                     по умолчанию размещается в командную панель формы.
//   статус                    		  - Перечисление.vftСтатусыДокументовСообщений -  текущий статус документа
Процедура УстановитьКнопкиИзмененияСтатуса(Форма, МестоРазмещенияКомандПоУмолчанию = неопределено, статус) Экспорт
	
	ИмяФормы = Форма.ИмяФормы;
	
	ПолученныеСтатусы = Форма.ПолучитьВозможныеСтатусы();	
	
	Статусы = ПолученныеСтатусы.Получить(статус);
	
	Если Статусы = Неопределено тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьКомандыСтатуса(Форма, Статусы, МестоРазмещенияКомандПоУмолчанию);
	
КонецПроцедуры

//rarus_rasuli_30.03.18 ++
Процедура УстановитьКнопкиИзмененияСтатусаРапорт(Форма, МестоРазмещенияКомандПоУмолчанию = неопределено, статус) Экспорт
	
	ИмяФормы = Форма.ИмяФормы;
	
	ПолученныеСтатусы = Форма.ПолучитьВозможныеСтатусы();	
	
	Статусы = ПолученныеСтатусы.Получить(статус);
	
	Если Статусы = Неопределено тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьКомандыСтатусаРапорт(Форма, Статусы, МестоРазмещенияКомандПоУмолчанию);
	
КонецПроцедуры
//rarus_rasuli_30.03.18 --


Процедура ДобавитьКомандыСтатуса(Форма, Статусы, Знач МестоРазмещенияКоманд = Неопределено)
	
	Если МестоРазмещенияКоманд = Неопределено Тогда
		МестоРазмещенияКоманд = Форма.КоманднаяПанель;
	КонецЕсли;
	
	ОднаКомандаПечати = Статусы.Количество() = 1;
	Если МестоРазмещенияКоманд.Вид = ВидГруппыФормы.Подменю Тогда
		Если ОднаКомандаПечати Тогда
			МестоРазмещенияКоманд.Вид = ВидГруппыФормы.ГруппаКнопок;
		КонецЕсли;
	Иначе
		Если Не ОднаКомандаПечати Тогда
			ПодменюПечать = Форма.Элементы.Добавить(МестоРазмещенияКоманд.Имя + "ПодменюСтатус", Тип("ГруппаФормы"), МестоРазмещенияКоманд);
			ПодменюПечать.Вид = ВидГруппыФормы.Подменю;
			ПодменюПечать.Заголовок = НСтр("ru = 'Изменить статус'");
			ПодменюПечать.Картинка = БиблиотекаКартинок.ИнтернетПоддержкаПользователейОтправкаПисьма;
			
			МестоРазмещенияКоманд = ПодменюПечать;
		КонецЕсли;
	КонецЕсли;
	
	СоответствиеНомераИСтатуса = СоответствиеНомераИСтатуса();
	
	Для Каждого Статус Из Статусы Цикл
		НомерКоманды	= СоответствиеНомераИСтатуса.Получить(Статус);
		ИмяКоманды 		= МестоРазмещенияКоманд.Имя + "КомандаСтатуса_" + НомерКоманды;
		
		КомандаФормы = Форма.Команды.Добавить(ИмяКоманды);
		КомандаФормы.Действие = "Подключаемый_ВыполнитьКомандуИзмененияСтатуса";
		КомандаФормы.Заголовок = Строка(Статус);
		КомандаФормы.ИзменяетСохраняемыеДанные = Ложь;
		КомандаФормы.Отображение = ОтображениеКнопки.КартинкаИТекст;
		
		НовыйЭлемент = Форма.Элементы.Добавить(МестоРазмещенияКоманд.Имя + ИмяКоманды, Тип("КнопкаФормы"), МестоРазмещенияКоманд);
		НовыйЭлемент.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
		НовыйЭлемент.ИмяКоманды = ИмяКоманды;
	КонецЦикла;
	
КонецПроцедуры

//rarus_rasuli_30.03.18 ++
Процедура ДобавитьКомандыСтатусаРапорт(Форма, Статусы, Знач МестоРазмещенияКоманд = Неопределено)
	
	Если МестоРазмещенияКоманд = Неопределено Тогда
		МестоРазмещенияКоманд = Форма.КоманднаяПанель;
	КонецЕсли;
	
	ОднаКомандаПечати = Статусы.Количество() = 1;
	Если МестоРазмещенияКоманд.Вид = ВидГруппыФормы.Подменю Тогда
		Если ОднаКомандаПечати Тогда
			МестоРазмещенияКоманд.Вид = ВидГруппыФормы.ГруппаКнопок;
		КонецЕсли;
	Иначе
		Если Не ОднаКомандаПечати Тогда
			ПодменюПечать = Форма.Элементы.Добавить(МестоРазмещенияКоманд.Имя + "ПодменюСтатус", Тип("ГруппаФормы"), МестоРазмещенияКоманд);
			ПодменюПечать.Вид = ВидГруппыФормы.Подменю;
			ПодменюПечать.Заголовок = НСтр("ru = 'Изменить статус'");
			ПодменюПечать.Картинка = БиблиотекаКартинок.ИнтернетПоддержкаПользователейОтправкаПисьма;
			
			МестоРазмещенияКоманд = ПодменюПечать;
		КонецЕсли;
	КонецЕсли;
	
	СоответствиеНомераИСтатуса = СоответствиеНомераИСтатусаРапорт();
	
	Для Каждого Статус Из Статусы Цикл
		НомерКоманды	= СоответствиеНомераИСтатуса.Получить(Статус);
		ИмяКоманды 		= МестоРазмещенияКоманд.Имя + "КомандаСтатуса_" + НомерКоманды;
		
		КомандаФормы = Форма.Команды.Добавить(ИмяКоманды);
		КомандаФормы.Действие = "Подключаемый_ВыполнитьКомандуИзмененияСтатуса";
		КомандаФормы.Заголовок = Строка(Статус);
		КомандаФормы.ИзменяетСохраняемыеДанные = Ложь;
		КомандаФормы.Отображение = ОтображениеКнопки.КартинкаИТекст;
		
		НовыйЭлемент = Форма.Элементы.Добавить(МестоРазмещенияКоманд.Имя + ИмяКоманды, Тип("КнопкаФормы"), МестоРазмещенияКоманд);
		НовыйЭлемент.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
		НовыйЭлемент.ИмяКоманды = ИмяКоманды;
	КонецЦикла;
	
КонецПроцедуры
//rarus_rasuli_30.03.18 --

Функция ПолучитьВозможныеСтатусы() Экспорт
	
	ГлавныйУзел = ПланыОбмена.ГлавныйУзел() = Неопределено;
	
	СоответствиеСтатусов = Новый Соответствие;
	
	Если ГлавныйУзел тогда
		
		МассивОтправлен = новый Массив;
		МассивОтправлен.Добавить(Перечисления.vftСтатусыДокументовСообщений.Отправлен);
		МассивОтправлен.Добавить(Перечисления.vftСтатусыДокументовСообщений.Получен);	
		СоответствиеСтатусов.Вставить(Перечисления.vftСтатусыДокументовСообщений.Отправлен,МассивОтправлен);
		
	Иначе
		
		МассивЧерновик = новый Массив;
		МассивЧерновик.Добавить(Перечисления.vftСтатусыДокументовСообщений.Черновик);
		МассивЧерновик.Добавить(Перечисления.vftСтатусыДокументовСообщений.Отправлен);	
		СоответствиеСтатусов.Вставить(Перечисления.vftСтатусыДокументовСообщений.Черновик,МассивЧерновик);	
		
		МассивПолучен= новый Массив;
		МассивПолучен.Добавить(Перечисления.vftСтатусыДокументовСообщений.Получен);
		МассивПолучен.Добавить(Перечисления.vftСтатусыДокументовСообщений.Закрыт);	
		СоответствиеСтатусов.Вставить(Перечисления.vftСтатусыДокументовСообщений.Получен,МассивПолучен);
		
	КонецЕсли;
	
	
	Возврат СоответствиеСтатусов;
	
КонецФункции

//rarus_rasuli_30.03.18 ++
Функция ПолучитьВозможныеСтатусыРапорт() Экспорт
	
	ГлавныйУзел = ПланыОбмена.ГлавныйУзел() = Неопределено;
	
	СоответствиеСтатусов = Новый Соответствие;
	
	Если ГлавныйУзел тогда
		
		МассивОтправлен = новый Массив;
		МассивОтправлен.Добавить(Перечисления.vftСтатусыДокументаРапортОПовреждении.Отправлен);
		МассивОтправлен.Добавить(Перечисления.vftСтатусыДокументаРапортОПовреждении.Рассмотрен);
		МассивОтправлен.Добавить(Перечисления.vftСтатусыДокументаРапортОПовреждении.Получен);
		СоответствиеСтатусов.Вставить(Перечисления.vftСтатусыДокументаРапортОПовреждении.Отправлен,МассивОтправлен);
		
		МассивРассмотрен = новый Массив;
		МассивРассмотрен.Добавить(Перечисления.vftСтатусыДокументаРапортОПовреждении.Рассмотрен);
		МассивРассмотрен.Добавить(Перечисления.vftСтатусыДокументаРапортОПовреждении.Получен);
		СоответствиеСтатусов.Вставить(Перечисления.vftСтатусыДокументаРапортОПовреждении.Рассмотрен,МассивРассмотрен);
		
	Иначе
		
		МассивЧерновик = новый Массив;
		МассивЧерновик.Добавить(Перечисления.vftСтатусыДокументаРапортОПовреждении.Черновик);
		МассивЧерновик.Добавить(Перечисления.vftСтатусыДокументаРапортОПовреждении.Отправлен);	
		СоответствиеСтатусов.Вставить(Перечисления.vftСтатусыДокументаРапортОПовреждении.Черновик,МассивЧерновик);	
		
		МассивПолучен= новый Массив;
		МассивПолучен.Добавить(Перечисления.vftСтатусыДокументаРапортОПовреждении.Получен);
		МассивПолучен.Добавить(Перечисления.vftСтатусыДокументаРапортОПовреждении.Закрыт);	
		СоответствиеСтатусов.Вставить(Перечисления.vftСтатусыДокументаРапортОПовреждении.Получен,МассивПолучен);
		
		МассивРассмотрен= новый Массив;
		МассивРассмотрен.Добавить(Перечисления.vftСтатусыДокументаРапортОПовреждении.Рассмотрен);
		МассивРассмотрен.Добавить(Перечисления.vftСтатусыДокументаРапортОПовреждении.Закрыт);
		СоответствиеСтатусов.Вставить(Перечисления.vftСтатусыДокументаРапортОПовреждении.Рассмотрен,МассивРассмотрен);///посмотреть
	КонецЕсли;
	
	
	Возврат СоответствиеСтатусов;
	
КонецФункции
//rarus_rasuli_30.03.18 --

Функция СоответствиеНомераИСтатуса() 
	
	СоответствиеСтатусов = Новый Соответствие;
	
	СоответствиеСтатусов.Вставить(Перечисления.vftСтатусыДокументовСообщений.Черновик	,"1");
	СоответствиеСтатусов.Вставить(Перечисления.vftСтатусыДокументовСообщений.Отправлен	,"2");
	СоответствиеСтатусов.Вставить(Перечисления.vftСтатусыДокументовСообщений.Получен	,"3");
	СоответствиеСтатусов.Вставить(Перечисления.vftСтатусыДокументовСообщений.Закрыт	,"4");
	
	Возврат СоответствиеСтатусов;
	
КонецФункции

//rarus_rasuli_30.03.18 ++
Функция СоответствиеНомераИСтатусаРапорт() 
	
	СоответствиеСтатусов = Новый Соответствие;
	
	СоответствиеСтатусов.Вставить(Перечисления.vftСтатусыДокументаРапортОПовреждении.Черновик	,"1");
	СоответствиеСтатусов.Вставить(Перечисления.vftСтатусыДокументаРапортОПовреждении.Отправлен	,"2");
	СоответствиеСтатусов.Вставить(Перечисления.vftСтатусыДокументаРапортОПовреждении.Рассмотрен, "3");
	СоответствиеСтатусов.Вставить(Перечисления.vftСтатусыДокументаРапортОПовреждении.Получен	,"4");
	СоответствиеСтатусов.Вставить(Перечисления.vftСтатусыДокументаРапортОПовреждении.Закрыт	,"5");
	
	Возврат СоответствиеСтатусов;
	
КонецФункции
//rarus_rasuli_30.03.18 --

Функция ПолучитьВозможностьРедактироватьФормуПоСтатусу(Статус) Экспорт
	
	ГлавныйУзел = ПланыОбмена.ГлавныйУзел() = Неопределено;
	
	Если ГлавныйУзел тогда
		Если Статус = Перечисления.vftСтатусыДокументовСообщений.Отправлен Тогда 
			
			Возврат Истина;
			
		Иначе
			
			Возврат ЛОЖЬ;
			
		КонецЕсли;
		
	Иначе
		
		Если Статус = Перечисления.vftСтатусыДокументовСообщений.Черновик или Статус = Перечисления.vftСтатусыДокументовСообщений.Получен Тогда 
			
			Возврат Истина;
			
		Иначе
			
			Возврат ЛОЖЬ;
			
		КонецЕсли;
		
		
	КонецЕсли;
	
	
КонецФункции

/////rarus rasuli
Функция ПолучитьВозможностьРедактироватьФормуПоСтатусуРапорт(Статус) Экспорт
	
	ГлавныйУзел = ПланыОбмена.ГлавныйУзел() = Неопределено;
	
	Если ГлавныйУзел тогда
		Если Статус = Перечисления.vftСтатусыДокументаРапортОПовреждении.Отправлен или Статус = Перечисления.vftСтатусыДокументаРапортОПовреждении.Рассмотрен Тогда 
			
			Возврат Истина;
			
		Иначе
			
			Возврат ЛОЖЬ;
			
		КонецЕсли;
		
	Иначе
		
		Если Статус = Перечисления.vftСтатусыДокументаРапортОПовреждении.Черновик или Статус = Перечисления.vftСтатусыДокументаРапортОПовреждении.Получен или Статус = Перечисления.vftСтатусыДокументаРапортОПовреждении.Рассмотрен Тогда 
			
			Возврат Истина;
			
		Иначе
			
			Возврат ЛОЖЬ;
			
		КонецЕсли;	
		
	КонецЕсли;	
КонецФункции
/////rarus rasuli
#КонецОбласти

#Область Печать_Документов

#Область Сообщения_о_потенциальном_инциденте

Функция ПолучитьРеквизитыСообщенийОПотенциальномИнциденте(МассивСсылок) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	VftСообщениеОПотенциальномИнциденте.Ссылка,
	|	VftСообщениеОПотенциальномИнциденте.ВерсияДанных,
	|	VftСообщениеОПотенциальномИнциденте.ПометкаУдаления,
	|	VftСообщениеОПотенциальномИнциденте.Номер,
	|	VftСообщениеОПотенциальномИнциденте.Дата,
	|	VftСообщениеОПотенциальномИнциденте.Проведен,
	|	VftСообщениеОПотенциальномИнциденте.Статус,
	|	VftСообщениеОПотенциальномИнциденте.Судно,
	|	VftСообщениеОПотенциальномИнциденте.ДатаВремя,
	|	VftСообщениеОПотенциальномИнциденте.ОписаниеПотенциальногоИнцидента,
	|	VftСообщениеОПотенциальномИнциденте.ПричинаВозникновения,
	|	VftСообщениеОПотенциальномИнциденте.ВозможныеПоследствия,
	|	VftСообщениеОПотенциальномИнциденте.ПредпринятыеДействия,
	|	VftСообщениеОПотенциальномИнциденте.Примечание,
	|	VftСообщениеОПотенциальномИнциденте.ЛицоСообщившееОбИнциденте,
	|	VftСообщениеОПотенциальномИнциденте.ФИОЛицоСообщившееОбИнциденте,
	|	VftСообщениеОПотенциальномИнциденте.ФИОКапитана,
	|	VftСообщениеОПотенциальномИнциденте.ОтветКомпании
	|ИЗ
	|	Документ.VftСообщениеОПотенциальномИнциденте КАК VftСообщениеОПотенциальномИнциденте
	|ГДЕ
	|	VftСообщениеОПотенциальномИнциденте.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивСсылок);
	
	Возврат ОбщегоНазначения.ТаблицаЗначенийВМассив(Запрос.Выполнить().Выгрузить());
	
КонецФункции

Функция ПолучитьТабличныеДокументыДокладОНесоответвтии(МассивОбъектов) Экспорт
	
	Возврат	ПолучитьДокументыДляВывода(МассивОбъектов,Документы.vftСообщениеОПотенциальномИнциденте);
	
КонецФункции

#КонецОбласти

#Область Анализ_СУБ

Функция ПолучитьРеквизитыАнализСУБ(МассивСсылок) Экспорт
	
	МассивДокументов = новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	vftАнализСУБ.Ссылка,
	|	vftАнализСУБ.Номер,
	|	vftАнализСУБ.Дата,
	|	vftАнализСУБ.Статус,
	|	vftАнализСУБ.Судно,
	|	vftАнализСУБ.ФИОКапитана,
	|	vftАнализСУБ.ОтветКомпании,
	|	vftАнализСУБ.Ответственный,
	|	vftАнализСУБ.ПериодИсполненияОбязанностейС,
	|	vftАнализСУБ.ПериодИсполненияОбязанностейПо,
	|	vftАнализСУБ.ОбщаяЭффективностьСудовойСУБ,
	|	vftАнализСУБ.КомментарийЭффективностьСудовойСУБ
	|ИЗ
	|	Документ.vftАнализСУБ КАК vftАнализСУБ
	|ГДЕ
	|	vftАнализСУБ.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивСсылок);
	
	ТЗШапка = Запрос.Выполнить().Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	vftАнализСУБПредложения.Ссылка,
	|	vftАнализСУБПредложения.Суб,
	|	vftАнализСУБПредложения.Предложение,
	|	vftАнализСУБПредложения.ОтветКомпании,
	|	vftАнализСУБПредложения.Ответственный,
	|	vftАнализСУБПредложения.Суб.Наименование,
	|	vftАнализСУБПредложения.НомерСтроки КАК НомерСтроки,
	|	vftАнализСУБПредложения.НетПредложения
	|ИЗ
	|	Документ.vftАнализСУБ.Предложения КАК vftАнализСУБПредложения
	|ГДЕ
	|	vftАнализСУБПредложения.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивСсылок);
	
	ТЗПредложения = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Документ из ТзШапка Цикл
		
		
		СтруктураПоиска = Новый Структура("Ссылка",Документ.Ссылка);
		МассивНайденныхСтрок = ТЗПредложения.НайтиСтроки(СтруктураПоиска);
		
		МассивСтрок = новый Массив;
		Для Каждого НайденнаяСтрока из МассивНайденныхСтрок Цикл
			МассивСтрок.Добавить(СтрокаТаблицыЗначенийВСтруктуруСПреобразованием(НайденнаяСтрока));			
		КонецЦикла;
		
		СтруктураДокумента = Новый Структура;
		СтруктураДокумента.Вставить("Шапка",СтрокаТаблицыЗначенийВСтруктуруСПреобразованием(Документ));
		СтруктураДокумента.Вставить("Предложения",МассивСтрок); 
		СтруктураДокумента.Вставить("ДатаПодписи",Документ.Дата); 

		
		СтруктураДокумента.Шапка.ПериодИсполненияОбязанностейС 	= Формат(СтруктураДокумента.Шапка.ПериодИсполненияОбязанностейС,"ДФ=dd.MM.yyyy");
		СтруктураДокумента.Шапка.ПериодИсполненияОбязанностейПо = Формат(СтруктураДокумента.Шапка.ПериодИсполненияОбязанностейПо,"ДФ=dd.MM.yyyy");
		МассивДокументов.Добавить(СтруктураДокумента);
	КонецЦикла;
	
	
	Возврат МассивДокументов;
	
КонецФункции

Функция ПолучитьТабличныеДокументыАнализСУБ(МассивОбъектов) Экспорт
	
	Возврат	ПолучитьДокументыДляВывода(МассивОбъектов,Документы.vftАнализСУБ);
	
КонецФункции


#КонецОбласти

#Область Доклад_о_несоответствии

Функция ПолучитьРеквизитыДокладОНесоответствии(МассивСсылок) Экспорт
	
	МассивДокументов = новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	vftДокладыОНесоответствии.Ссылка,
	|	vftДокладыОНесоответствии.Код,
	|	vftДокладыОНесоответствии.Статус,
	|	vftДокладыОНесоответствии.Судно,
	|	vftДокладыОНесоответствии.ФИОКапитана,
	|	vftДокладыОНесоответствии.ОтветКомпании,
	|	vftДокладыОНесоответствии.Ответственный,
	|	vftДокладыОНесоответствии.ФИОИнспектора,
	|	vftДокладыОНесоответствии.ИнспектирующийОрган,
	|	vftДокладыОНесоответствии.МестоИнспекции,
	|	vftДокладыОНесоответствии.ДатаИнспекции,
	|	vftДокладыОНесоответствии.Дата,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА) КАК ДополнительныйКомментарий
	|ИЗ
	|	Справочник.vftДокладыОНесоответствии КАК vftДокладыОНесоответствии
	|ГДЕ
	|	vftДокладыОНесоответствии.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивСсылок);
	
	ТЗШапка = Запрос.Выполнить().Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	vftНесоответствия.Ссылка,
	|	vftНесоответствия.Код,
	|	vftНесоответствия.Статус,
	|	vftНесоответствия.Судно,
	|	vftНесоответствия.ОписаниеНесоответствия,
	|	vftНесоответствия.ПричинаНесоответствия,
	|	vftНесоответствия.КорректирующиеДействия,
	|	vftНесоответствия.КодНесоответствия,
	|	vftНесоответствия.СсылкаНаДокумент,
	|	vftНесоответствия.ДополнительныйКомментарийНесоответствие,
	|	vftНесоответствия.ТребуетсяРешениеКомпании,
	|	vftНесоответствия.КраткоеОписаниеНесоответствия,
	|	vftНесоответствия.СодержаниеКорректирующийхДействий,
	|	vftНесоответствия.ПредписанныеСрокиУстранения,
	|	vftНесоответствия.ПланируемыеСрокиУстранения,
	|	vftНесоответствия.ДолжностьОтветственныйРешение,
	|	vftНесоответствия.ФИООтветственныйРешение,
	|	vftНесоответствия.ДействияПринятыеДляУстранения,
	|	vftНесоответствия.ДатаУстранения,
	|	vftНесоответствия.ДополнительныйКомментарийДонесение,
	|	vftНесоответствия.Дата,
	|	vftНесоответствия.Владелец
	|ИЗ
	|	Справочник.vftНесоответствия КАК vftНесоответствия
	|ГДЕ
	|	vftНесоответствия.Владелец В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивСсылок);
	
	ТЗНесоответствия = Запрос.Выполнить().Выгрузить();
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	vftНесоответствияОтветственныеПодразделения.Подразделение,
	|	vftНесоответствияОтветственныеПодразделения.Ссылка
	|ИЗ
	|	Справочник.vftНесоответствия.ОтветственныеПодразделения КАК vftНесоответствияОтветственныеПодразделения
	|ГДЕ
	|	vftНесоответствияОтветственныеПодразделения.Ссылка.Владелец В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивСсылок);
	
	ТЗПодразделения = Запрос.Выполнить().Выгрузить(); 	
	
	Для Каждого Документ из ТзШапка Цикл
		
		
		СтруктураПоиска = Новый Структура("Владелец",Документ.Ссылка);
		МассивНайденныхСтрок = ТЗНесоответствия.НайтиСтроки(СтруктураПоиска);
		
		МассивСтрок = новый Массив;
		Для Каждого НайденнаяСтрока из МассивНайденныхСтрок Цикл
			
			СтруктураПоискаПодразделения = Новый Структура("Ссылка",НайденнаяСтрока.Ссылка);
			НайденныеПодразделения = ТЗПодразделения.НАйтиСтроки(СтруктураПоискаПодразделения);
			
			ПервоеПодразделение = Истина;
			ПодразделениеОтветственное = "";
			Для каждого СтрокаТЗ Из НайденныеПодразделения  Цикл
				Если ПервоеПодразделение Тогда
					ПодразделениеОтветственное = Строка(СтрокаТЗ.Подразделение);
					ПервоеПодразделение = ЛОЖЬ;
					Продолжить;	
				КонецЕсли; 
				
				ПодразделениеОтветственное = ПодразделениеОтветственное + " / " + Строка(СтрокаТЗ.Подразделение);
				
				
			КонецЦикла; 
			
			СтруктураНесоответствия = СтрокаТаблицыЗначенийВСтруктуруСПреобразованием(НайденнаяСтрока);
			СтруктураНесоответствия.Вставить("ПодразделениеОтветственное",ПодразделениеОтветственное);
			
			МассивСтрок.Добавить(СтруктураНесоответствия);			
			Документ.ДополнительныйКомментарий = Документ.ДополнительныйКомментарий + НайденнаяСтрока.ДополнительныйКомментарийНесоответствие +"
			|";
			
			
		КонецЦикла;
		
		
		
		Шапка = СтрокаТаблицыЗначенийВСтруктуруСПреобразованием(Документ);
		//Шапка.Вставить("ПодразделениеОтветственное",ПодразделениеОтветственное);
		
		СтруктураДокумента = Новый Структура;
		СтруктураДокумента.Вставить("Шапка",Шапка);
		СтруктураДокумента.Вставить("Несоответствия",МассивСтрок); 
		
		МассивДокументов.Добавить(СтруктураДокумента);
	КонецЦикла;
	
	
	Возврат МассивДокументов;
	
КонецФункции

Функция ПолучитьТабличныеДокладОНесоответствие(МассивОбъектов) Экспорт
	
	Возврат	ПолучитьДокументыДляВыводаДокладОНесоответствии(МассивОбъектов,Справочники.vftДокладыОНесоответствии);
	
КонецФункции

Функция ПолучитьДокументыДляВыводаДокладОНесоответствии(МассивОбъектов,Менеджер)
	
	
	ОбъектыПечати 		= новый СписокЗначений;	
	МассивВозврат 		= Новый Массив;	
	
	ТабличныйДокумент = Менеджер.ПечатьСообщения_4_1_1(МассивОбъектов,ОбъектыПечати,ЛОЖЬ);
	Для каждого ОбъектПечати из ОбъектыПечати Цикл
		//ТабличныйДокумент = Менеджер.ПечатьСообщения_4_1_1(МассивОбъектов,ОбъектыПечати,ЛОЖЬ);
		ТД = Новый ТабличныйДокумент;
		ТД.Вывести(ТабличныйДокумент.ПолучитьОбласть(ОбъектПечати.представление));
		ТД.АвтоМасштаб = Истина; 
		
		СтруктураВозврата 	= Новый Структура;
		СтруктураВозврата.Вставить("ТабличныйДокумент",ТД);
		СтруктураВозврата.Вставить("Раздел", "Доклад");
		СтруктураВозврата.Вставить("Документ","Доклад "+ОбъектПечати.Значение);
		МассивВозврат.Добавить(СтруктураВозврата);
	КонецЦикла;
	
	ТабличныйДокумент = Менеджер.ПечатьСообщения_4_1_2(МассивОбъектов,ОбъектыПечати,ЛОЖЬ);
	Для каждого ОбъектПечати из ОбъектыПечати Цикл
		
		ТД = Новый ТабличныйДокумент;
		ТД.Вывести(ТабличныйДокумент.ПолучитьОбласть(ОбъектПечати.представление));
		ТД.АвтоМасштаб = Истина; 
		
		СтруктураВозврата 	= Новый Структура;
		СтруктураВозврата.Вставить("ТабличныйДокумент",ТД);
		СтруктураВозврата.Вставить("Раздел", "Решение");
		СтруктураВозврата.Вставить("Документ","Решение "+ОбъектПечати.Значение);
		МассивВозврат.Добавить(СтруктураВозврата);
	КонецЦикла;
	
	ТабличныйДокумент = Менеджер.ПечатьСообщения_4_1_3(МассивОбъектов,ОбъектыПечати,ЛОЖЬ);
	Для каждого ОбъектПечати из ОбъектыПечати Цикл
		
		ТД = Новый ТабличныйДокумент;
		ТД.Вывести(ТабличныйДокумент.ПолучитьОбласть(ОбъектПечати.представление));
		ТД.АвтоМасштаб = Истина; 
		
		СтруктураВозврата 	= Новый Структура;
		СтруктураВозврата.Вставить("ТабличныйДокумент",ТД);
		СтруктураВозврата.Вставить("Раздел", "Донесение");
		СтруктураВозврата.Вставить("Документ","Донесение об устранении "+ОбъектПечати.Значение);
		МассивВозврат.Добавить(СтруктураВозврата);
	КонецЦикла;
	
	Возврат  МассивВозврат;
	
КонецФункции

#КонецОбласти

#Область Доклад_о_состоянии_безопасности

Функция ПолучитьРеквизитыДокладОСостоянииБезопасности(МассивСсылок) Экспорт
	
	МассивДокументов = новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	vftДокладОСостоянииБезопасности.Ссылка,
	|	vftДокладОСостоянииБезопасности.Номер,
	|	vftДокладОСостоянииБезопасности.Дата,
	|	vftДокладОСостоянииБезопасности.Статус,
	|	vftДокладОСостоянииБезопасности.ФИОКапитана,
	|	vftДокладОСостоянииБезопасности.Судно,
	|	vftДокладОСостоянииБезопасности.ОтветКомпании,
	|	vftДокладОСостоянииБезопасности.Ответственный,
	|	vftДокладОСостоянииБезопасности.ПериодОбзораС,
	|	vftДокладОСостоянииБезопасности.ПериодОбзораПо,
	|	vftДокладОСостоянииБезопасности.Председатель,
	|	vftДокладОСостоянииБезопасности.ОфицерПоБезопасности,
	|	vftДокладОСостоянииБезопасности.СПКМ,
	|	vftДокладОСостоянииБезопасности.СМХ,
	|	vftДокладОСостоянииБезопасности.ПредставительМоряков,
	|	vftДокладОСостоянииБезопасности.ПредставительРядовогоСостава,
	|	vftДокладОСостоянииБезопасности.ТехническоеСостояниеСудна,
	|	vftДокладОСостоянииБезопасности.КоличествоАктовОПовреждении,
	|	vftДокладОСостоянииБезопасности.КоличествоАктовРекламационных,
	|	vftДокладОСостоянииБезопасности.ТранспортныеПроисшествия,
	|	vftДокладОСостоянииБезопасности.НесчастныеСлучаи,
	|	vftДокладОСостоянииБезопасности.ВиднесчастныхСлучаев,
	|	vftДокладОСостоянииБезопасности.ФактыЗагрязнений,
	|	vftДокладОСостоянииБезопасности.СрокиАвтономностиСоблюдаются,
	|	vftДокладОСостоянииБезопасности.СостояниеПротивопожарногоОборудования,
	|	vftДокладОСостоянииБезопасности.АнализЕженедельныхПроверокПроведен,
	|	vftДокладОСостоянииБезопасности.КоличествоНесоответствий,
	|	vftДокладОСостоянииБезопасности.АудитПроверкиСУБ,
	|	vftДокладОСостоянииБезопасности.АудитТехСостояния,
	|	vftДокладОСостоянииБезопасности.ОсвидетельствованийРС,
	|	vftДокладОСостоянииБезопасности.ПроверокPSC,
	|	vftДокладОСостоянииБезопасности.ПроверокFSC,
	|	vftДокладОСостоянииБезопасности.ПроверокГПКнаВВП,
	|	vftДокладОСостоянииБезопасности.ЭкипахОзнакомленСРезультатамиИнспекций,
	|	vftДокладОСостоянииБезопасности.СообщенийОПотенциальномИнциденте,
	|	vftДокладОСостоянииБезопасности.Примечание,
	|	vftДокладОСостоянииБезопасности.РешенияПриняты,
	|	vftДокладОСостоянииБезопасности.КомментарийАнализПроверок,
	|	vftДокладОСостоянииБезопасности.КомментарийФактыЗагрязнения,
	|	vftДокладОСостоянииБезопасности.КомментарийСрокиАвтономности,
	|	vftДокладОСостоянииБезопасности.КомментарийРешения,
	|	vftДокладОСостоянииБезопасности.МесяцОбзора
	|ИЗ
	|	Документ.vftДокладОСостоянииБезопасности КАК vftДокладОСостоянииБезопасности
	|ГДЕ
	|	vftДокладОСостоянииБезопасности.Ссылка В(&МассивСсылок)";
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	ТЗШапка = Запрос.Выполнить().Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	vftДокладОСостоянииБезопасностиПроведенныеТревоги.Ссылка,
	|	vftДокладОСостоянииБезопасностиПроведенныеТревоги.НомерСтроки,
	|	vftДокладОСостоянииБезопасностиПроведенныеТревоги.Дата,
	|	vftДокладОСостоянииБезопасностиПроведенныеТревоги.НазваниеТревоги
	|ИЗ
	|	Документ.vftДокладОСостоянииБезопасности.ПроведенныеТревоги КАК vftДокладОСостоянииБезопасностиПроведенныеТревоги
	|ГДЕ
	|	vftДокладОСостоянииБезопасностиПроведенныеТревоги.Ссылка В(&МассивСсылок)";
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	ТЗПроведенныеТревоги = Запрос.Выполнить().Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	vftДокладОСостоянииБезопасностиПредоложенияПоКорректуреСудовойСУБ.Ссылка,
	|	vftДокладОСостоянииБезопасностиПредоложенияПоКорректуреСудовойСУБ.НомерСтроки,
	|	vftДокладОСостоянииБезопасностиПредоложенияПоКорректуреСудовойСУБ.Предложение,
	|	vftДокладОСостоянииБезопасностиПредоложенияПоКорректуреСудовойСУБ.ОтветКомании,
	|	vftДокладОСостоянииБезопасностиПредоложенияПоКорректуреСудовойСУБ.Ответственный
	|ИЗ
	|	Документ.vftДокладОСостоянииБезопасности.ПредоложенияПоКорректуреСудовойСУБ КАК vftДокладОСостоянииБезопасностиПредоложенияПоКорректуреСудовойСУБ
	|ГДЕ
	|	vftДокладОСостоянииБезопасностиПредоложенияПоКорректуреСудовойСУБ.Ссылка В(&МассивСсылок)";
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	ТЗПредложения = Запрос.Выполнить().Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	vftДокладОСостоянииБезопасностиПринятыеРешения.Ссылка,
	|	vftДокладОСостоянииБезопасностиПринятыеРешения.НомерСтроки,
	|	vftДокладОСостоянииБезопасностиПринятыеРешения.Дата,
	|	vftДокладОСостоянииБезопасностиПринятыеРешения.ТемаСобрания,
	|	vftДокладОСостоянииБезопасностиПринятыеРешения.ДатаИсполнения,
	|	vftДокладОСостоянииБезопасностиПринятыеРешения.ОтветственныйЗаИсполнение
	|ИЗ
	|	Документ.vftДокладОСостоянииБезопасности.ПринятыеРешения КАК vftДокладОСостоянииБезопасностиПринятыеРешения
	|ГДЕ
	|	vftДокладОСостоянииБезопасностиПринятыеРешения.Ссылка В(&МассивСсылок)";
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	ТЗПринятыеРешения = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Документ из ТзШапка Цикл
		
		//Проведенные тревоги
		СтруктураПоиска = Новый Структура("Ссылка",Документ.Ссылка);
		МассивНайденныхСтрок = ТЗПроведенныеТревоги.НайтиСтроки(СтруктураПоиска);
		
		МассивСтрокТревоги = новый Массив;
		Для Каждого НайденнаяСтрока из МассивНайденныхСтрок Цикл
			МассивСтрокТревоги.Добавить(СтрокаТаблицыЗначенийВСтруктуруСПреобразованием(НайденнаяСтрока));			
		КонецЦикла;
		
		//Предложения по корректуре
		СтруктураПоиска = Новый Структура("Ссылка",Документ.Ссылка);
		МассивНайденныхСтрок = ТЗПредложения.НайтиСтроки(СтруктураПоиска);
		
		МассивСтрокПредложения = новый Массив;
		Для Каждого НайденнаяСтрока из МассивНайденныхСтрок Цикл
			МассивСтрокПредложения.Добавить(СтрокаТаблицыЗначенийВСтруктуруСПреобразованием(НайденнаяСтрока));			
		КонецЦикла;
		
		//Принятые решения
		СтруктураПоиска = Новый Структура("Ссылка",Документ.Ссылка);
		МассивНайденныхСтрок = ТЗПринятыеРешения.НайтиСтроки(СтруктураПоиска);
		
		МассивСтрокРешения = новый Массив;
		Для Каждого НайденнаяСтрока из МассивНайденныхСтрок Цикл
			МассивСтрокРешения.Добавить(СтрокаТаблицыЗначенийВСтруктуруСПреобразованием(НайденнаяСтрока));			
		КонецЦикла;
		
		
		
		
		
		
		СтруктураДокумента = Новый Структура;
		СтруктураДокумента.Вставить("Шапка",		СтрокаТаблицыЗначенийВСтруктуруСПреобразованием(Документ));
		СтруктураДокумента.Вставить("Тревоги",		МассивСтрокТревоги); 
		СтруктураДокумента.Вставить("Предложения",	МассивСтрокПредложения);
		СтруктураДокумента.Вставить("Решения",		МассивСтрокРешения);
		
		МассивДокументов.Добавить(СтруктураДокумента);
	КонецЦикла;
	
	
	Возврат МассивДокументов;
	
КонецФункции

Функция ПолучитьТабличныеДокладОСостоянииБезопасности(МассивОбъектов) Экспорт
	
	Возврат	ПолучитьДокументыДляВывода(МассивОбъектов,Документы.vftДокладОСостоянииБезопасности);
	
КонецФункции

#КонецОбласти

#Область РапортОПоврежденииНеисправности
/////rarus_rasuli
Функция ПолучитьРеквизитыРапортОПовреждении(МассивСсылок) Экспорт
	
	МассивДокументов = новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	vftРапортОПоврежденииНеисправности.Ссылка,
	|	vftРапортОПоврежденииНеисправности.ВерсияДанных,
	|	vftРапортОПоврежденииНеисправности.ПометкаУдаления,
	|	vftРапортОПоврежденииНеисправности.Номер,
	|	vftРапортОПоврежденииНеисправности.Дата,
	|	vftРапортОПоврежденииНеисправности.Проведен,
	|	vftРапортОПоврежденииНеисправности.Статус,
	|	vftРапортОПоврежденииНеисправности.Судно,
	|	vftРапортОПоврежденииНеисправности.Ответственный,
	|	vftРапортОПоврежденииНеисправности.ДатаОткрытия,
	|	vftРапортОПоврежденииНеисправности.Судно.НомерТелефона,
	|	vftРапортОПоврежденииНеисправности.Судно.EmailСудна,
	|	vftРапортОПоврежденииНеисправности.Судно.InmarsatНомер,
	|	vftРапортОПоврежденииНеисправности.Механизм_Система,
	|	vftРапортОПоврежденииНеисправности.ТипСерийногоНомера,
	|	vftРапортОПоврежденииНеисправности.ЧасыНаработки,
	|	vftРапортОПоврежденииНеисправности.Изготовитель,
	|	vftРапортОПоврежденииНеисправности.ФИОКапитана,
	|	vftРапортОПоврежденииНеисправности.Механик,
	|	vftРапортОПоврежденииНеисправности.ДатаЗаявки,
	|	vftРапортОПоврежденииНеисправности.ОдобреноКолВоПозиций,
	|	vftРапортОПоврежденииНеисправности.ЗаказаноКуда,
	|	vftРапортОПоврежденииНеисправности.ОтветственныйПоНеисправности,
	|	vftРапортОПоврежденииНеисправности.ФИОКапитанаПоНеисправности,
	|	vftРапортОПоврежденииНеисправности.ДатаВыполнения,
	|	vftРапортОПоврежденииНеисправности.КемВыполнено,
	|	vftРапортОПоврежденииНеисправности.ОтветКомпании,
	|	vftРапортОПоврежденииНеисправности.Судно.IMO,
	|	vftРапортОПоврежденииНеисправности.ЗаявкаНомер
	|ИЗ
	|	Документ.vftРапортОПоврежденииНеисправности КАК vftРапортОПоврежденииНеисправности
	|ГДЕ
	|	vftРапортОПоврежденииНеисправности.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивСсылок);
	
	ТЗШапка = Запрос.Выполнить().Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	vftРапортОПоврежденииНеисправностиТребуемыеДействия.Ссылка,
	|	vftРапортОПоврежденииНеисправностиТребуемыеДействия.НомерСтроки КАК НомерСтроки,
	|	vftРапортОПоврежденииНеисправностиТребуемыеДействия.НеобходимыеСЗЧ,
	|	vftРапортОПоврежденииНеисправностиТребуемыеДействия.Изготовитель,
	|	vftРапортОПоврежденииНеисправностиТребуемыеДействия.КаталожныйНомер,
	|	vftРапортОПоврежденииНеисправностиТребуемыеДействия.Описание,
	|	vftРапортОПоврежденииНеисправностиТребуемыеДействия.Количество,
	|	vftРапортОПоврежденииНеисправностиТребуемыеДействия.НомерЗаявкиТС3,
	|	vftРапортОПоврежденииНеисправностиТребуемыеДействия.ДатаЗаявкиТС3
	|ИЗ
	|	Документ.vftРапортОПоврежденииНеисправности.ТребуемыеДействия КАК vftРапортОПоврежденииНеисправностиТребуемыеДействия
	|ГДЕ
	|	vftРапортОПоврежденииНеисправностиТребуемыеДействия.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивСсылок);
	
	ТЗДействия = Запрос.Выполнить().Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	vftРапортОПоврежденииНеисправностиНеобходимыеРемонтыеРаботы.НеобходимыеРаботы,
	|	vftРапортОПоврежденииНеисправностиНеобходимыеРемонтыеРаботы.Ссылка
	|ИЗ
	|	Документ.vftРапортОПоврежденииНеисправности.НеобходимыеРемонтыеРаботы КАК vftРапортОПоврежденииНеисправностиНеобходимыеРемонтыеРаботы
	|ГДЕ
	|	vftРапортОПоврежденииНеисправностиНеобходимыеРемонтыеРаботы.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	vftРапортОПоврежденииНеисправностиНеобходимыеРемонтыеРаботы.НомерСтроки";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивСсылок);
	
	ТЗРаботы = Запрос.Выполнить().Выгрузить();
	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	vftРапортОПоврежденииНеисправностиОписаниеНеисправностей.Ссылка,
	|	vftРапортОПоврежденииНеисправностиОписаниеНеисправностей.ОписаниеНеисправности,
	|	vftРапортОПоврежденииНеисправностиОписаниеНеисправностей.НомерСтроки
	|ИЗ
	|	Документ.vftРапортОПоврежденииНеисправности.ОписаниеНеисправностей КАК vftРапортОПоврежденииНеисправностиОписаниеНеисправностей
	|ГДЕ
	|	vftРапортОПоврежденииНеисправностиОписаниеНеисправностей.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	vftРапортОПоврежденииНеисправностиОписаниеНеисправностей.НомерСтроки";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивСсылок);
	
	ТЗОписаниеНеисправности = Запрос.Выполнить().Выгрузить();
	
	
	Для Каждого Документ из ТзШапка Цикл
		
		
		СтруктураПоиска = Новый Структура("Ссылка",Документ.Ссылка);
		МассивНайденныхСтрок = ТЗДействия.НайтиСтроки(СтруктураПоиска);
		МассивНайденныхРабот = ТЗРаботы.НайтиСтроки(СтруктураПоиска);
		МассивНайденныхОписаний = ТЗОписаниеНеисправности.НайтиСтроки(СтруктураПоиска);
		
		МассивСтрок = Новый Массив;
		МассивРабот = Новый Массив;
		МассивОписаний = Новый Массив;
		Для Каждого НайденнаяСтрока из МассивНайденныхСтрок Цикл
			СтрокаПодбора = vftОбщиеПроцедурыДокументовСервер.СтрокаТаблицыЗначенийВСтруктуруСПреобразованием(НайденнаяСтрока);
			МассивСтрок.Добавить(СтрокаПодбора);				
		КонецЦикла;
		Для каждого НайденнаяСтрока Из МассивНайденныхРабот Цикл
			СтрокаПодбораРабот = vftОбщиеПроцедурыДокументовСервер.СтрокаТаблицыЗначенийВСтруктуруСПреобразованием(НайденнаяСтрока);
			МассивРабот.Добавить(СтрокаПодбораРабот);
		КонецЦикла; 
		Для каждого НайденнаяСтрока Из МассивНайденныхОписаний Цикл
			СтрокаПодбораОписаний = vftОбщиеПроцедурыДокументовСервер.СтрокаТаблицыЗначенийВСтруктуруСПреобразованием(НайденнаяСтрока);
			МассивОписаний.Добавить(СтрокаПодбораОписаний);
		КонецЦикла; 
		СтруктураДокумента = Новый Структура;
		СтруктураДокумента.Вставить("Шапка",vftОбщиеПроцедурыДокументовСервер.СтрокаТаблицыЗначенийВСтруктуруСПреобразованием(Документ));
		СтруктураДокумента.Вставить("Действия", МассивСтрок);
		СтруктураДокумента.Вставить("Работы", МассивРабот); 
		СтруктураДокумента.Вставить("Описания", МассивОписаний);
		МассивДокументов.Добавить(СтруктураДокумента);
	КонецЦикла;
	
	
	Возврат МассивДокументов;
	
КонецФункции
/////rarus_rasuli
Функция ПолучитьТабличныеРапортОПоврежденииНеисправности(МассивОбъектов) Экспорт
	
	Возврат ПолучитьДокументыДляВывода(МассивОбъектов, Документы.vftРапортОПоврежденииНеисправности);
	
КонецФункции

#КонецОбласти

#Область Общие

Функция ПолучитьДокументыДляВывода(МассивОбъектов,Менеджер)
		
	ОбъектыПечати 		= новый СписокЗначений;	
	МассивВозврат 		= Новый Массив;	
	Если ПолучитьФункциональнуюОпцию("рарусИспользоватьФункционалСУБ")
		И ТипЗнч(Менеджер) =  Тип("ДокументМенеджер.vftДокладОСостоянииБезопасности") Тогда
	    ТабличныйДокумент = Менеджер.ПечатнаяФормаДокладОСостоянииБезопасности(МассивОбъектов, ОбъектыПечати, ЛОЖЬ);
	Иначе
		ТабличныйДокумент = Менеджер.ПечатьСообщения(МассивОбъектов,ОбъектыПечати,ЛОЖЬ);
	КонецЕсли;
	Для каждого ОбъектПечати из ОбъектыПечати Цикл
		ТД = Новый ТабличныйДокумент;
		ТД.Вывести(ТабличныйДокумент.ПолучитьОбласть(ОбъектПечати.представление));
		ТД.АвтоМасштаб = Истина; 
		
		СтруктураВозврата 	= Новый Структура;
		СтруктураВозврата.Вставить("ТабличныйДокумент",ТД);
		СтруктураВозврата.Вставить("Документ",ОбъектПечати.Значение);
		МассивВозврат.Добавить(СтруктураВозврата);
	КонецЦикла;
	
	Возврат  МассивВозврат;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область Служебные
// Функция СтрокаТаблицыЗначенийВСтруктуру создает
// структуру со свойствами, как колонки таблицы
// значений передаваемой строки
// и устанавливает этим свойствам значения
// из строки таблицы значений
// 
// Параметры:
//  СтрокаТаблицыЗначений - СтрокаТаблицыЗначений
//
// ВозвращаемоеЗначение:
//  Структура
//
Функция СтрокаТаблицыЗначенийВСтруктуруСПреобразованием(СтрокаТаблицыЗначений) Экспорт
	
	Структура = Новый Структура;
	Для каждого Колонка Из СтрокаТаблицыЗначений.Владелец().Колонки Цикл
		Значение = ?(ТипЗНЧ(СтрокаТаблицыЗначений[Колонка.Имя]) = Тип("Дата"),Формат(СтрокаТаблицыЗначений[Колонка.Имя],"ДФ=dd.MM.yyyy"),СтрокаТаблицыЗначений[Колонка.Имя]) ;
		Структура.Вставить(Колонка.Имя, Значение);
	КонецЦикла;
	
	Возврат Структура;
	
КонецФункции

Функция ПолучитьПереченьСудовПоГруппе(ГруппаСудов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	vftГруппыСудовСуда.Судно
	|ИЗ
	|	Справочник.vftГруппыСудов.Суда КАК vftГруппыСудовСуда
	|ГДЕ
	|	vftГруппыСудовСуда.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ГруппаСудов);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Судно");
	
КонецФункции

//++rarus markim
Функция ПолучитьМакет(ПутьКМакету) Экспорт
	Возврат УправлениеПечатью.МакетПечатнойФормы(ПутьКМакету);	
КонецФункции	

// Добавляет к параметру НаборОбластей новую запись об области.
//
// Параметры:
//   ОбластиМакетаОфисногоДокумента - Массив - набор областей (массив структур) макета офисного документа.
//   ИмяОбласти                     - Строка - имя добавляемой области.
//   ТипОбласти                     - Строка - тип области:
//    ВерхнийКолонтитул;
//    НижнийКолонтитул;
//    Общая;
//    СтрокаТаблицы;
//    Список.
//
// Пример:
//	Функция ОбластиМакетаОфисногоДокумента()
//	
//		Области = Новый Структура;
//	
//		УправлениеПечатью.ДобавитьОписаниеОбласти(Области, "ВерхнийКолонтитул",	"ВерхнийКолонтитул");
//		УправлениеПечатью.ДобавитьОписаниеОбласти(Области, "НижнийКолонтитул",	"НижнийКолонтитул");
//		УправлениеПечатью.ДобавитьОписаниеОбласти(Области, "Заголовок",			"Общая");
//	
//		Возврат Области;
//	
//	КонецФункции
//
Процедура ДобавитьОписаниеОбласти(ОбластиМакетаОфисногоДокумента, Знач ИмяОбласти, Знач ТипОбласти) Экспорт
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОбластиМакетаОфисногоДокумента, ИмяОбласти, ТипОбласти);	
КонецПроцедуры
//--rarus markim
#КонецОбласти

#Область События_объектов
Процедура ПроверитьЗаполнениеРеквизитов(Объект,МассивРеквизитов,Отказ) Экспорт
	
	
	Для каждого Реквизит  Из МассивРеквизитов  Цикл
		
		Если НЕ ЗначениеЗаполнено(Объект[Реквизит]) Тогда
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не заполнен реквизит """+Реквизит+"""";
			Сообщение.Поле = Реквизит;
			Сообщение.УстановитьДанные(Объект);
			Сообщение.Сообщить();			
			Отказ = Истина;
		КонецЕсли; 
		
		
	КонецЦикла; 
	
КонецПроцедуры
#КонецОбласти
