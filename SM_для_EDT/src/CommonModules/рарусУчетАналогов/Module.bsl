//ПАН+ 
Процедура УстановитьНаФормеЗначенияОбщихРеквизитовУчетаАналогов(Форма) Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма,"Объект") Тогда
		Если ТипЗнч(Форма.Объект.Ссылка) = ТИП("ДокументСсылка.впЗаявкаНаСнабжение") Тогда
			ВидТМЦ = (Форма.Объект.ВидПотребности = Перечисления.рарусВидыПотребностиЗаявкиНаСнабжение.ТМЦ);
		Иначе
			ВидТМЦ = Истина;
		КонецЕсли;
	Иначе
		ВидТМЦ  = Истина;
	КонецЕсли;
	
	Форма.ВключенаСхемаАналогов                 = ВидТМЦ И ПолучитьФункциональнуюОпцию("рарусВключенаСхемаАналогов");
	Форма.ИспользуетсяСхемаСогласованияАналогов = ВидТМЦ И ПолучитьФункциональнуюОпцию("рарусИспользуетсяСхемаСогласованияПоАналогам");
	Форма.ИспользуетсяЦелеваяСхемаУчетаАналогов = ВидТМЦ И ПолучитьФункциональнуюОпцию("рарусИспользуетсяЦелеваяСхемаАналогов");

КонецПроцедуры

//вызывается в ПередЗаписью модуля объектов, в ТЧ которых необходимо заполнять ID 
Процедура УстановитьIDВСтрокахТабличнойЧасти(Объект, ИмяТабличнойЧасти = "Товары", ИмяРеквизитаТЧ = "ID") Экспорт
	ТЧ = Объект[ИмяТабличнойЧасти];
	СтрокиБезID = ТЧ.НайтиСтроки(Новый Структура(ИмяРеквизитаТЧ, ""));
	Если СтрокиБезID.Количество() > 0 Тогда			
		Для Каждого СтрокаТовары Из СтрокиБезID Цикл 		
			ID = Строка(Новый УникальныйИдентификатор);
			СтрокаТовары[ИмяРеквизитаТЧ] = ID;		
		КонецЦикла;		
	КонецЕсли;
КонецПроцедуры

Процедура ОчисткаУстановкаРеквизитовУчетаАналоговПриКопировании(Объект) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("рарусВключенаСхемаАналогов") Тогда
		Возврат;	
	КонецЕсли;
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.впЗаявкаНаСнабжение") 
							И Объект.ВидПотребности = Перечисления.рарусВидыПотребностиЗаявкиНаСнабжение.ТМЦ Тогда
									
		СогласованиеВключено = ПолучитьФункциональнуюОпцию("рарусИспользуетсяСхемаСогласованияПоАналогам");
		
		Если СогласованиеВключено Тогда
			Объект.СогласованиеАналоговНеЗавершено = Ложь;
			Объект.Комментарий = "";
		КонецЕсли;
		
		ТЧ = Объект.МатериалыИРаботы;
		Для Каждого Стр ИЗ ТЧ Цикл
			Если СогласованиеВключено Тогда
				Стр.СтатусСогласования = Неопределено;
				Стр.КомментарийСогласующего = "";
				Стр.ЗапрашиваемаяНоменклатура = Неопределено;
			КонецЕсли;
			
			Стр.ПризнакАналог = Ложь;
			Стр.ИсходнаяНоменклатура = Неопределено;
			Стр.ПричинаЗамены = "";		
			Стр.ID = Строка(Новый УникальныйИдентификатор);
			Стр.IDПервоначальный = Строка(Новый УникальныйИдентификатор);
			Стр.IDДинамический = Стр.IDПервоначальный;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры


Процедура ОбновитьЗаписиРегистраЖурналИзмененийНоменклатурыПоАналогам(ДокументОбъект) Экспорт
		
	Если Не ПолучитьФункциональнуюОпцию("рарусИспользуетсяСхемаСогласованияПоАналогам") Тогда
		Возврат;	
	КонецЕсли;

	Если ДокументОбъект.СогласованиеАналоговНеЗавершено Тогда
		Возврат;	
	КонецЕсли;
	
	ОбновитьЖурналИзмененийПоАналогам = Неопределено;
	ДокументОбъект.ДополнительныеСвойства.Свойство("ОбновитьЖурналИзмененийПоАналогам", ОбновитьЖурналИзмененийПоАналогам);
	Если ОбновитьЖурналИзмененийПоАналогам = Неопределено Тогда
		Возврат;		
	КонецЕсли;
	
	#Если НЕ Клиент И НЕ Сервер И НЕ ВнешнееСоединение Тогда
		ДокументОбъект = Документы.впЗаявкаНаСнабжение.СоздатьДокумент();
		Стр = ДокументОбъект.МатериалыИРаботы.Добавить();
	#КонецЕсли
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	рарусЖурналИзмененийНоменклатурыПоАналогам.Период КАК Период,
	|	рарусЖурналИзмененийНоменклатурыПоАналогам.Документ КАК Документ,
	|	рарусЖурналИзмененийНоменклатурыПоАналогам.ЗаявкаНаТМЦ КАК ЗаявкаНаТМЦ,
	|	рарусЖурналИзмененийНоменклатурыПоАналогам.IDПервоначальнойСтрокиЗнВП КАК IDПервоначальнойСтрокиЗнВП,
	|	рарусЖурналИзмененийНоменклатурыПоАналогам.IDСтрокиЗП_ЗнП КАК IDСтрокиЗП_ЗнП,
	|	рарусЖурналИзмененийНоменклатурыПоАналогам.IDНовыйДляСтыковки КАК IDНовыйДляСтыковки
	|ИЗ
	|	РегистрСведений.рарусЖурналИзмененийНоменклатурыПоАналогам КАК рарусЖурналИзмененийНоменклатурыПоАналогам
	|ГДЕ
	|	рарусЖурналИзмененийНоменклатурыПоАналогам.СтатусСогласования = &СтатусСогласования
	|	И рарусЖурналИзмененийНоменклатурыПоАналогам.ЗаявкаНаТМЦ = &ЗаявкаНаТМЦ";
	
	Запрос.УстановитьПараметр("СтатусСогласования", Перечисления.рарусСтатусыСогласованияАналогов.ОтправитьНаСудно);
	Запрос.УстановитьПараметр("ЗаявкаНаТМЦ", ДокументОбъект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		РегистрИзмененийНоменклатуры = РегистрыСведений.рарусЖурналИзмененийНоменклатурыПоАналогам.СоздатьНаборЗаписей(); 
		РегистрИзмененийНоменклатуры.Отбор.Период.Установить(ВыборкаДетальныеЗаписи.Период);
		РегистрИзмененийНоменклатуры.Отбор.Документ.Установить(ВыборкаДетальныеЗаписи.Документ);
		РегистрИзмененийНоменклатуры.Отбор.ЗаявкаНаТМЦ.Установить(ВыборкаДетальныеЗаписи.ЗаявкаНаТМЦ);
		РегистрИзмененийНоменклатуры.Отбор.IDПервоначальнойСтрокиЗнВП.Установить(ВыборкаДетальныеЗаписи.IDПервоначальнойСтрокиЗнВП);
		РегистрИзмененийНоменклатуры.Отбор.IDСтрокиЗП_ЗнП.Установить(ВыборкаДетальныеЗаписи.IDСтрокиЗП_ЗнП);
		РегистрИзмененийНоменклатуры.Прочитать();
		ТекДата = ТекущаяДата();
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("IDПервоначальный", ВыборкаДетальныеЗаписи.IDПервоначальнойСтрокиЗнВП);
		ПараметрыОтбора.Вставить("IDДинамический", ВыборкаДетальныеЗаписи.IDНовыйДляСтыковки);
		НайденныеСтроки = ДокументОбъект.МатериалыИРаботы.НайтиСтроки(ПараметрыОтбора);

		Если НайденныеСтроки.Количество() Тогда
			Стр = НайденныеСтроки[0];
			Для Каждого стрНабора из РегистрИзмененийНоменклатуры Цикл
				стрНабора.СтатусСогласования  = Стр.СтатусСогласования;
				стрНабора.ДатаСогласования = ТекДата;
				стрНабора.СогласовалОтменилЗамену = "Экипаж";
				стрНабора.СогласованиеПрошло = Истина;
				стрНабора.КомментарийСогласующего = Стр.КомментарийСогласующего;
			КонецЦикла;
		
			Если РегистрИзмененийНоменклатуры.Количество() Тогда
				РегистрИзмененийНоменклатуры.Записать();
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ОбновитьСтрокиДокументаПоСтатусамСогласованияАналогов(ДокументОбъект) Экспорт
	
	#Если НЕ Клиент И НЕ Сервер И НЕ ВнешнееСоединение Тогда
		ДокументОбъект = Документы.впЗаявкаНаСнабжение.СоздатьДокумент();
		Стр = ДокументОбъект.МатериалыИРаботы.Добавить();
	#КонецЕсли
	
	Если ДокументОбъект.СогласованиеАналоговНеЗавершено Тогда
		Возврат;	
	КонецЕсли;
	
	ОбновитьЖурналИзмененийПоАналогам = Неопределено;
	ДокументОбъект.ДополнительныеСвойства.Свойство("ОбновитьЖурналИзмененийПоАналогам", ОбновитьЖурналИзмененийПоАналогам);
	Если ОбновитьЖурналИзмененийПоАналогам = Неопределено Тогда
		Возврат;		
	КонецЕсли;
	
	МассивСтрокКомментария = Новый Массив;	
	ТекстПоСтатусу = "";
	СтрокаКомментария = "";
	Для Каждого Стр ИЗ ДокументОбъект.МатериалыИРаботы Цикл
		Если Стр.СтатусСогласования = Перечисления.рарусСтатусыСогласованияАналогов.Согласовать Тогда
			ТекстПоСтатусу = " %1 Стр №%2: Согласована замена %3 на %4 %5";
			СтрокаКомментария = СтрШаблон(ТекстПоСтатусу,
								ТекущаяДата(),
								Стр.НомерСтроки,
								Стр.Номенклатура,
								Стр.ЗапрашиваемаяНоменклатура,
								?(ПустаяСтрока(Стр.КомментарийСогласующего)," "," (" + Стр.КомментарийСогласующего + ")"));
			МассивСтрокКомментария.Добавить(СтрокаКомментария);
			
			Стр.Номенклатура = Стр.ЗапрашиваемаяНоменклатура;
			Стр.ЗапрашиваемаяНоменклатура = Справочники.Номенклатура.ПустаяСсылка();
			Стр.СтатусСогласования = Перечисления.рарусСтатусыСогласованияАналогов.ПустаяСсылка();
			Стр.КомментарийСогласующего = "";
		ИначеЕсли Стр.СтатусСогласования = Перечисления.рарусСтатусыСогласованияАналогов.Отклонить Тогда
			ТекстПоСтатусу = " %1 Стр №%2: Отклонена замена %3 на %4 %5";
			СтрокаКомментария = СтрШаблон(ТекстПоСтатусу,
								ТекущаяДата(),
								Стр.НомерСтроки,
								Стр.Номенклатура,
								Стр.ЗапрашиваемаяНоменклатура,
								?(ПустаяСтрока(Стр.КомментарийСогласующего)," "," (" + Стр.КомментарийСогласующего + ")"));
			МассивСтрокКомментария.Добавить(СтрокаКомментария);
			
			Стр.ЗапрашиваемаяНоменклатура = Справочники.Номенклатура.ПустаяСсылка();
			Стр.СтатусСогласования = Перечисления.рарусСтатусыСогласованияАналогов.ПустаяСсылка();
			Стр.ПричинаЗамены = "";
	        Стр.ПризнакАналог = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	СтрокаКомментария = "";
	Если МассивСтрокКомментария.Количество() Тогда
		Для Каждого Коммент ИЗ МассивСтрокКомментария Цикл
			СтрокаКомментария = СтрокаКомментария + Коммент + Символы.ПС;		
		КонецЦикла;
		Если НЕ ПустаяСтрока(СтрокаКомментария) Тогда
			ДокументОбъект.Комментарий = ДокументОбъект.Комментарий + Символы.ПС + СтрокаКомментария;	
		КонецЕсли;
	КонецЕсли;
	 
КонецПроцедуры

Функция ОтборСтрокПоСтатусуСогласованияАналогов(Объект, Статус) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("рарусИспользуетсяСхемаСогласованияПоАналогам") Тогда
		Возврат Новый Массив;	
	КонецЕсли;
	
	Если ТипЗнч(Объект) <> ТИП("ДокументСсылка.впЗаявкаНаСнабжение") 
			И ТипЗнч(Объект) <> ТИП("ДокументОбъект.впЗаявкаНаСнабжение") Тогда
		Возврат Новый Массив;	
	КонецЕсли;

	ОтборСтрок = Новый Структура;
	ОтборСтрок.Вставить("СтатусСогласования",Статус);
	СтрокиОтбор = Объект.МатериалыИРаботы.НайтиСтроки(ОтборСтрок);
	
	Возврат СтрокиОтбор;
	
КонецФункции
//ПАН-
