#Область ПрограммныйИнтерфейс

Функция КатегорииНоменклатурыДокументаВыдаваемыеЭкипажу(Документ) Экспорт
	
	Возврат рарусИмущественныйУчетСервер.КатегорииНоменклатурыДокументаВыдаваемыеЭкипажу(Документ);
	
КонецФункции

Функция КатегорииНоменклатурыДокументаНеВыдаваемыеЭкипажу(Документ) Экспорт
	
	Возврат рарусИмущественныйУчетСервер.КатегорииНоменклатурыДокументаНеВыдаваемыеЭкипажу(Документ);
	
КонецФункции

Функция КатегорииНоменклатурыДокумента(Документ, ОтборПоВыдаваемыеЭкипажу = Неопределено) Экспорт
	
	Возврат рарусИмущественныйУчетСервер.КатегорииНоменклатурыДокумента(Документ, ОтборПоВыдаваемыеЭкипажу);
	
КонецФункции

Процедура ВыполнитьЗаполнениеДокумента(ДанныеФормыНовогоДокумента, ДанныеЗаполнения) Экспорт
	
	рарусИмущественныйУчетСервер.ВыполнитьЗаполнениеДокумента(ДанныеФормыНовогоДокумента, ДанныеЗаполнения)
	
КонецПроцедуры

Функция МожноВвестиПриходТМЦНаОснованииЗаявкиНаСнабжение(ДокументОснование, СообщениеОбОшибке = Неопределено) Экспорт
	
	ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "ВидПотребности");
	
	ДопустимыеВидыОперации = Новый Массив;
	ДопустимыеВидыОперации.Добавить(Перечисления.рарусВидыПотребностиЗаявкиНаСнабжение.ТМЦЗаСчетСобственныхСредств);
	ИспользуетсяИмущественныйУчет = рарусИмущественныйУчетСервер.ИспользоватьИмущественныйУчетДляДокумента(ДокументОснование);
	Если ИспользуетсяИмущественныйУчет Тогда
		ДопустимыеВидыОперации.Добавить(Перечисления.рарусВидыПотребностиЗаявкиНаСнабжение.ПродуктыПитания);
		ДопустимыеВидыОперации.Добавить(Перечисления.рарусВидыПотребностиЗаявкиНаСнабжение.НавигационныеКарты);
	КонецЕсли;
	
	Если ДопустимыеВидыОперации.Найти(ВидОперации) = Неопределено Тогда
		СообщениеОбОшибке = СтрШаблон("Ввод на основании возможен только для вида потребностей: ""%1""",
			СтрСоединить(ДопустимыеВидыОперации, """, """));
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
		
КонецФункции

Функция ИспользоватьИмущественныйУчет(Знач Параметры) Экспорт
	
	Возврат рарусИмущественныйУчетСервер.ИспользоватьИмущественныйУчет(Параметры);
	
КонецФункции

Функция ИспользоватьИмущественныйУчетДляДокумента(Знач Объект) Экспорт
	
	Возврат рарусИмущественныйУчетСервер.ИспользоватьИмущественныйУчетДляДокумента(Объект);
	
КонецФункции

// ++ rarus makole 2021-04-02
Процедура УстановитьСтатусЧерновик(СсылкаНаОбъект) Экспорт
	
	РегистрыСведений.рарусСостоянияОтправкиОбъектов.УстановитьСтатусОбъекта(СсылкаНаОбъект, ПредопределенноеЗначение("Перечисление.рарусСостояниеОтправкиОбъекта.Черновик"));
	
	ГлавныйУзел = ПланыОбмена.ГлавныйУзел();
	Если ГлавныйУзел <> Неопределено Тогда
		МассивУзлов = Новый Массив;
		МассивУзлов.Добавить(ГлавныйУзел);
		
		// ++ rarus makole 2021-04-02
		КоллекцияДвижений = СсылкаНаОбъект.Метаданные().Движения;
		Для каждого ЭлементКоллекцииДвижений Из КоллекцияДвижений Цикл
			НаборЗаписей = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ЭлементКоллекцииДвижений.ПолноеИмя()).СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(СсылкаНаОбъект);
			НаборЗаписей.Прочитать();
			Если НаборЗаписей.Количество() Тогда
				ПланыОбмена.УдалитьРегистрациюИзменений(МассивУзлов, НаборЗаписей)
			КонецЕсли;
		КонецЦикла;
		// -- rarus makole 2021-04-02
		
		ПланыОбмена.УдалитьРегистрациюИзменений(МассивУзлов, СсылкаНаОбъект);
	КонецЕсли;
КонецПроцедуры
// -- rarus makole 2021-04-02

// ++ rarus makole 2021-04-22 [Задача № 28687]
Процедура УстановитьСтатусЗарегистрированоКОтправке(СсылкаНаОбъект) Экспорт
	
	ГлавныйУзел = ПланыОбмена.ГлавныйУзел();
	Если ГлавныйУзел <> Неопределено Тогда
		РегистрыСведений.рарусСостоянияОтправкиОбъектов.ВыполнитьКомандуОтправкиОбъекта(СсылкаНаОбъект);
		МассивУзлов = Новый Массив;
		МассивУзлов.Добавить(ГлавныйУзел);
		
		КоллекцияДвижений = СсылкаНаОбъект.Метаданные().Движения;
		Для каждого ЭлементКоллекцииДвижений Из КоллекцияДвижений Цикл
			НаборЗаписей = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ЭлементКоллекцииДвижений.ПолноеИмя()).СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(СсылкаНаОбъект);
			НаборЗаписей.Прочитать();
			Если НаборЗаписей.Количество() Тогда
				ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов, НаборЗаписей)
			КонецЕсли;
		КонецЦикла;
		
		ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов, СсылкаНаОбъект);
	КонецЕсли;
	
КонецПроцедуры
// -- rarus makole 2021-04-22 [Задача № 28687]

// ++ rarus makole 2021-06-10 [РАIT-0023374]
// Учёт номенклатуры разного качества 
Функция ИспользуетсяКачествоТоваров() Экспорт
	Возврат ПолучитьФункциональнуюОпцию("ИспользоватьКачествоТоваров");
КонецФункции
// -- rarus makole 2021-06-10 [РАIT-0023374]

#КонецОбласти