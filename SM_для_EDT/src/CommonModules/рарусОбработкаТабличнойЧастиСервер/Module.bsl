
#Область ПрограммныйИнтерфейс

// Обработка строки табличной части - вызывается из клиентского общего модуля при необходимости выполнения на сервере.
//
// Параметры:
//  ТекущаяСтрока		 - Структура - данные обрабатываемой строки;
//  СтруктураДействий	 - Структура - описывает действия, где Ключ - наименование действия, Значение - Структура - параметры действия.
//		Возможно передавать следующие поля:
//		"ПроверитьХарактеристикуПоВладельцу", Характеристика,
//		"ПроверитьЗаполнитьУпаковкуПоВладельцу", Упаковка,
//		"ПересчитатьКоличествоЕдиниц",
//		"ПересчитатьКоличествоЕдиницСуффикс", Суффикс,
//		"ПересчитатьКоличествоУпаковок",
//		"ПересчитатьКоличествоУпаковокСуффикс", Суффикс,
//		"ПересчитатьКоличествоУпаковокСуффиксИзОтклонения", Суффикс,
//		"ПересчитатьВесОбъем",
//		"ЗаполнитьЦенуПродажи", СтруктураПараметровДействия,
//		"ЗаполнитьПомещение", СтруктураПараметровДействия,
//		"ЗаполнитьПродавца", СтруктураПараметровДействия,
//		"ПересчитатьСумму",
//		"ПересчитатьСуммуСУчетомРучнойСкидки", СтруктураПараметровДействия,
//		"ПересчитатьСуммуСУчетомАвтоматическойСкидки", СтруктураПараметровДействия,
//		"ПересчитатьЦенуПоСуммеВСтрокеТЧ",
//		"ПересчитатьЦенуЗаУпаковку",
//		"ПересчитатьСуммуНДС",
//		"ЗаполнитьСтавкуНДС",
//		"ОбработатьШтрихкоды",
//		"ЗаполнитьНоменклатуруПоНоменклатуреПоставщика",
//		"ЗаполнитьУсловияПродажВСтрокеТЧКлиент",
//		"ЗаполнитьУсловияЗакупокВСтрокеТЧКлиент",
//		"ЗаполнитьФлагИзлишекПорча",
//		"ЗаполнитьФлагРасхождение",
//		"ПересчитатьКоличествоУпаковокОтклонение",
//		"ОчиститьСуммуВзаиморасчетов",
//		"ЗаполнитьФлагиНедоборНеотгружаемые",
//		"ПересчитатьКоличествоНеОтгружать",
//		"ЗаполнитьПризнакАдресногоХранения", СтруктураПараметровАдресногоХранения,
//		"ЗаполнитьСтатьюАналитикуРасходовНоменклатуры", СтруктураПараметровДействия
//  КэшированныеЗначения - Структура - Сохраненные значения параметров, используемых при обработке.
//
Процедура ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт
	
	Если КэшированныеЗначения = Неопределено Тогда
		КэшированныеЗначения = рарусОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();		
	КонецЕсли;
	
	
	рарусОбработкаТабличнойЧастиКлиентСервер.ПересчитатьКоличествоЕдиницВСтрокеТЧ(						ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	ПоместитьОбработанныеСтрокиВКэшированныеЗначения(                                               ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	рарусОбработкаТабличнойЧастиСерверЛокализация.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
КонецПроцедуры

// Выполняет обработку строк табличной части документа в соответствии с операциями, перечисленными в структуре действий.
//
// Параметры:
//	ТЧ - ДанныеФормыКоллекция - таблица товаров документа.
//	СтруктураДействий - Структура - структура с действиями, которые нужно произвести.
//	КэшированныеЗначения - Структура - кэшированные значения.
//
Процедура ОбработатьТЧ(ТЧ,СтруктураДействий,КэшированныеЗначения) Экспорт
	
	Если КэшированныеЗначения = Неопределено Тогда
		КэшированныеЗначения = рарусОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
	КонецЕсли;
	
	ДействияЗаполнения = Новый Структура;
	ДействияОбработки = Новый Структура;
	Для Каждого Действие Из СтруктураДействий Цикл
		Если ПоддерживаемыеДействияЗаполненияТЧ().Найти(Действие.Ключ) = Неопределено Тогда
			ДействияОбработки.Вставить(Действие.Ключ,Действие.Значение);
		Иначе
			ДействияЗаполнения.Вставить(Действие.Ключ,Действие.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Если ДействияОбработки.Количество() > 0 Тогда
		Для Каждого СтрТабл Из ТЧ Цикл
			ОбработатьСтрокуТЧ(СтрТабл, ДействияОбработки, КэшированныеЗначения);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Процедура - Проверяет, что ключ заполнения служебных реквизитов поддерживается
//
// Параметры:
//  КлючДействия - Строка	 - проверяемый ключ.
//
Функция КлючЗаполненияСлужебныхРеквизитовПоддерживается(КлючДействия) Экспорт
	Возврат ШаблонПоляВыборкиПоКлючуДействия(КлючДействия, Истина) <> Неопределено;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПроцедурыПересчетаИЗаполненияСервер

#КонецОбласти

#Область Прочее
Функция ДанныеОбУпаковке(Номенклатура, Упаковка, КэшированныеЗначения) Экспорт 
	
	ДанныеОбУпаковке = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентВесОбъемПрочиеРеквизитыУпаковки(Упаковка, Номенклатура, , Ложь);
	
	КлючКоэффициента = рарусОбработкаТабличнойЧастиКлиентСервер.КлючКэшаУпаковки(Номенклатура, Упаковка);
	
	КэшированныеЗначения.КоэффициентыУпаковок.Вставить(КлючКоэффициента,	Новый Структура("Коэффициент, НужноОкруглятьКоличество",
																							ДанныеОбУпаковке.Коэффициент,
																							ДанныеОбУпаковке.НужноОкруглятьКоличество));
	КэшированныеЗначения.ОбъемУпаковок.Вставить(КлючКоэффициента, 			ДанныеОбУпаковке.Вес);
	КэшированныеЗначения.ВесУпаковок.Вставить(КлючКоэффициента, 			ДанныеОбУпаковке.Объем);
	
	Возврат ДанныеОбУпаковке;
	
КонецФункции

#КонецОбласти

#Область ПроцедурыИФункцииЗаполненияСлужебныхРеквизитовПоНоменклатуре

Функция ПоддерживаемыеДействияЗаполненияТЧ() Экспорт
	
	Действия = Новый Массив;
	Действия.Добавить("ПересчитатьКоличествоУпаковок");
	
	рарусОбработкаТабличнойЧастиСерверЛокализация.ДополнитьПоддерживаемыеДействияЗаполненияТЧ(Действия);
	
	Возврат Действия;
	
КонецФункции

// Возвращает шаблон поля выборки соответствующий для указанного ключа действия
//
// Параметры:
//  КлючДействия						 - Строка	 - Строка имени ключа действия
//  ТолькоПроверитьПоддерживаемыеКлючи	 - Булево - признак проверки поддержки ключа действия.
// 
// Возвращаемое значение:
//  Строка - Строка шаблон поля запроса.
//
Функция ШаблонПоляВыборкиПоКлючуДействия(КлючДействия, ТолькоПроверитьПоддерживаемыеКлючи = Ложь)
	
	ШаблонЛокализация = "";
	рарусОбработкаТабличнойЧастиСерверЛокализация.ПриОпределенииШаблонаПоляВыборкиПоКлючуДействия(КлючДействия, ШаблонЛокализация);
	Если ЗначениеЗаполнено(ШаблонЛокализация) Тогда
		Возврат ШаблонЛокализация;
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьПризнакТипНоменклатуры" Тогда
		Возврат ",
		|	втТаблицаНоменклатуры.%Ключ%.ТипНоменклатуры КАК %Значение%";
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьПризнакВидНоменклатуры" Тогда
		Возврат ",
		|	втТаблицаНоменклатуры.%Ключ%.ВидНоменклатуры КАК %Значение%";
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьПризнакЕдиницаИзмерения" Тогда
		Возврат ",
		|	втТаблицаНоменклатуры.%Ключ%.ЕдиницаИзмерения КАК %Значение%";
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьПризнакТипИзмеряемойВеличины" Тогда
		Возврат ",
		|	втТаблицаНоменклатуры.%Ключ%.ЕдиницаИзмерения.ТипИзмеряемойВеличины КАК %Значение%";
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьВесУпаковки" Тогда
		ТекстЗапроса = ",
		|	ВЫБОР КОГДА втТаблицаНоменклатуры.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|		ТОГДА &ТекстЗапросаВесУпаковки
		|	ИНАЧЕ &ТекстЗапросаВесНоменклатуры
		|	КОНЕЦ КАК ВесУпаковки";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"&ТекстЗапросаВесУпаковки",
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки("втТаблицаНоменклатуры.Упаковка","втТаблицаНоменклатуры.Номенклатура", Ложь));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"&ТекстЗапросаВесНоменклатуры",
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки("втТаблицаНоменклатуры.Номенклатура.ЕдиницаИзмерения","втТаблицаНоменклатуры.Номенклатура", Ложь));
		Возврат ТекстЗапроса
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьОбъемУпаковки" Тогда
		ТекстЗапроса = ",
		|	ВЫБОР КОГДА втТаблицаНоменклатуры.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|		ТОГДА &ТекстЗапросаОбъемУпаковки
		|	ИНАЧЕ &ТекстЗапросаОбъемНоменклатуры
		|	КОНЕЦ КАК ОбъемУпаковки";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"&ТекстЗапросаОбъемУпаковки",
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаОбъемУпаковки("втТаблицаНоменклатуры.Упаковка","втТаблицаНоменклатуры.Номенклатура", Ложь));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"&ТекстЗапросаОбъемНоменклатуры",
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаОбъемУпаковки("втТаблицаНоменклатуры.Номенклатура.ЕдиницаИзмерения","втТаблицаНоменклатуры.Номенклатура", Ложь));
		Возврат ТекстЗапроса
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьЕдиницуИзмеренияВеса" Тогда
		Возврат ",
		|	ВЫБОР КОГДА втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
		|		ТОГДА втТаблицаНоменклатуры.Упаковка.ВесЕдиницаИзмерения
		|	ИНАЧЕ втТаблицаНоменклатуры.Номенклатура.ВесЕдиницаИзмерения
		|	КОНЕЦ КАК ЕдиницаИзмеренияВеса";
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьЕдиницуИзмеренияОбъема" Тогда
		Возврат ",
		|	ВЫБОР КОГДА втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
		|		ТОГДА втТаблицаНоменклатуры.Упаковка.ОбъемЕдиницаИзмерения
		|	ИНАЧЕ втТаблицаНоменклатуры.Номенклатура.ОбъемЕдиницаИзмерения
		|	КОНЕЦ КАК ЕдиницаИзмеренияОбъема";
	КонецЕсли;
	
	Если КлючДействия = "ПересчитатьВесОбъем" Тогда
		ТекстЗапроса = ",
		|	втТаблицаНоменклатуры.%Ключ%
		|	*(ВЫБОР
		|	КОГДА втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес) И втТаблицаНоменклатуры.Номенклатура.ВесИспользовать
		|		ТОГДА 1
		|	КОГДА втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем) И втТаблицаНоменклатуры.Номенклатура.ВесИспользовать
		|		И ЕСТЬNULL(втТаблицаНоменклатуры.Упаковка.Знаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ОбъемЕдиницаИзмерения.Числитель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ОбъемЕдиницаИзмерения.Знаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ОбъемЧислитель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ОбъемЗнаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ВесЗнаменатель,0) <> 0
		|		ТОГДА втТаблицаНоменклатуры.Упаковка.Числитель / втТаблицаНоменклатуры.Упаковка.Знаменатель / (втТаблицаНоменклатуры.Номенклатура.ОбъемЕдиницаИзмерения.Числитель / втТаблицаНоменклатуры.Номенклатура.ОбъемЕдиницаИзмерения.Знаменатель) / (втТаблицаНоменклатуры.Номенклатура.ОбъемЧислитель / втТаблицаНоменклатуры.Номенклатура.ОбъемЗнаменатель) * (втТаблицаНоменклатуры.Номенклатура.ВесЧислитель / втТаблицаНоменклатуры.Номенклатура.ВесЗнаменатель)
		|	КОГДА втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Площадь) И втТаблицаНоменклатуры.Номенклатура.ВесИспользовать
		|		И ЕСТЬNULL(втТаблицаНоменклатуры.Упаковка.Знаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ПлощадьЕдиницаИзмерения.Числитель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ПлощадьЕдиницаИзмерения.Знаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ПлощадьЧислитель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ПлощадьЗнаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ВесЗнаменатель,0) <> 0
		|		ТОГДА втТаблицаНоменклатуры.Упаковка.Числитель / втТаблицаНоменклатуры.Упаковка.Знаменатель / (втТаблицаНоменклатуры.Номенклатура.ПлощадьЕдиницаИзмерения.Числитель / втТаблицаНоменклатуры.Номенклатура.ПлощадьЕдиницаИзмерения.Знаменатель) / (втТаблицаНоменклатуры.Номенклатура.ПлощадьЧислитель / втТаблицаНоменклатуры.Номенклатура.ПлощадьЗнаменатель) * (втТаблицаНоменклатуры.Номенклатура.ВесЧислитель / втТаблицаНоменклатуры.Номенклатура.ВесЗнаменатель)
		|	КОГДА втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина) И втТаблицаНоменклатуры.Номенклатура.ВесИспользовать
		|		И ЕСТЬNULL(втТаблицаНоменклатуры.Упаковка.Знаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ДлинаЕдиницаИзмерения.Числитель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ДлинаЕдиницаИзмерения.Знаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ДлинаЧислитель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ДлинаЗнаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ВесЗнаменатель,0) <> 0
		|		ТОГДА втТаблицаНоменклатуры.Упаковка.Числитель / втТаблицаНоменклатуры.Упаковка.Знаменатель / (втТаблицаНоменклатуры.Номенклатура.ДлинаЕдиницаИзмерения.Числитель / втТаблицаНоменклатуры.Номенклатура.ДлинаЕдиницаИзмерения.Знаменатель) / (втТаблицаНоменклатуры.Номенклатура.ДлинаЧислитель / втТаблицаНоменклатуры.Номенклатура.ДлинаЗнаменатель) * (втТаблицаНоменклатуры.Номенклатура.ВесЧислитель / втТаблицаНоменклатуры.Номенклатура.ВесЗнаменатель)
		|	КОГДА втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
		|		ТОГДА втТаблицаНоменклатуры.Упаковка.Вес
		|	КОГДА (втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук)
		|				ИЛИ втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.ПустаяСсылка)
		|				ИЛИ ЕСТЬNULL(втТаблицаНоменклатуры.Упаковка.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
		|		И втТаблицаНоменклатуры.Номенклатура.ВесИспользовать
		|		И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ВесЗнаменатель,0) <> 0
		|		ТОГДА втТаблицаНоменклатуры.Номенклатура.ВесЧислитель / втТаблицаНоменклатуры.Номенклатура.ВесЗнаменатель
		|	ИНАЧЕ 0
		|	КОНЕЦ) КАК Вес,
		|
		|	втТаблицаНоменклатуры.%Ключ%
		|	*(ВЫБОР
		|	КОГДА втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес) И втТаблицаНоменклатуры.Номенклатура.ОбъемИспользовать
		|		И ЕСТЬNULL(втТаблицаНоменклатуры.Упаковка.Знаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ВесЕдиницаИзмерения.Числитель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ВесЕдиницаИзмерения.Знаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ВесЧислитель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ВесЗнаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ОбъемЗнаменатель,0) <> 0
		|		ТОГДА втТаблицаНоменклатуры.Упаковка.Числитель / втТаблицаНоменклатуры.Упаковка.Знаменатель / (втТаблицаНоменклатуры.Номенклатура.ВесЕдиницаИзмерения.Числитель / втТаблицаНоменклатуры.Номенклатура.ВесЕдиницаИзмерения.Знаменатель) / (втТаблицаНоменклатуры.Номенклатура.ВесЧислитель / втТаблицаНоменклатуры.Номенклатура.ВесЗнаменатель) * (втТаблицаНоменклатуры.Номенклатура.ОбъемЧислитель / втТаблицаНоменклатуры.Номенклатура.ОбъемЗнаменатель)
		|	КОГДА втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем) И втТаблицаНоменклатуры.Номенклатура.ОбъемИспользовать
		|		ТОГДА 1
		|	КОГДА втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Площадь) И втТаблицаНоменклатуры.Номенклатура.ОбъемИспользовать
		|		И ЕСТЬNULL(втТаблицаНоменклатуры.Упаковка.Знаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ПлощадьЕдиницаИзмерения.Числитель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ПлощадьЕдиницаИзмерения.Знаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ПлощадьЧислитель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ПлощадьЗнаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ОбъемЗнаменатель,0) <> 0
		|		ТОГДА втТаблицаНоменклатуры.Упаковка.Числитель / втТаблицаНоменклатуры.Упаковка.Знаменатель / (втТаблицаНоменклатуры.Номенклатура.ПлощадьЕдиницаИзмерения.Числитель / втТаблицаНоменклатуры.Номенклатура.ПлощадьЕдиницаИзмерения.Знаменатель) / (втТаблицаНоменклатуры.Номенклатура.ПлощадьЧислитель / втТаблицаНоменклатуры.Номенклатура.ПлощадьЗнаменатель) * (втТаблицаНоменклатуры.Номенклатура.ОбъемЧислитель / втТаблицаНоменклатуры.Номенклатура.ОбъемЗнаменатель)
		|	КОГДА втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина) И втТаблицаНоменклатуры.Номенклатура.ОбъемИспользовать
		|		И ЕСТЬNULL(втТаблицаНоменклатуры.Упаковка.Знаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ДлинаЕдиницаИзмерения.Числитель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ДлинаЕдиницаИзмерения.Знаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ДлинаЧислитель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ДлинаЗнаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ОбъемЗнаменатель,0) <> 0
		|		ТОГДА втТаблицаНоменклатуры.Упаковка.Числитель / втТаблицаНоменклатуры.Упаковка.Знаменатель / (втТаблицаНоменклатуры.Номенклатура.ДлинаЕдиницаИзмерения.Числитель / втТаблицаНоменклатуры.Номенклатура.ДлинаЕдиницаИзмерения.Знаменатель) / (втТаблицаНоменклатуры.Номенклатура.ДлинаЧислитель / втТаблицаНоменклатуры.Номенклатура.ДлинаЗнаменатель) * (втТаблицаНоменклатуры.Номенклатура.ОбъемЧислитель / втТаблицаНоменклатуры.Номенклатура.ОбъемЗнаменатель)
		|	КОГДА втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
		|		ТОГДА втТаблицаНоменклатуры.Упаковка.Объем
		|	КОГДА (втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук)
		|				ИЛИ втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.ПустаяСсылка)
		|				ИЛИ ЕСТЬNULL(втТаблицаНоменклатуры.Упаковка.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
		|		И втТаблицаНоменклатуры.Номенклатура.ОбъемИспользовать
		|		И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ОбъемЗнаменатель,0) <> 0
		|		ТОГДА втТаблицаНоменклатуры.Номенклатура.ОбъемЧислитель / втТаблицаНоменклатуры.Номенклатура.ОбъемЗнаменатель
		|	ИНАЧЕ 0
		|	КОНЕЦ) КАК Объем";
		
		Возврат ТекстЗапроса
	КонецЕсли;
	
	Если КлючДействия = "ПересчитатьКоличествоУпаковок" Тогда
		ТекстЗапроса = ",
		|	втТаблицаНоменклатуры.%Ключ% / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК %Значение%";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки",
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
				"втТаблицаНоменклатуры.Упаковка",
				"втТаблицаНоменклатуры.Номенклатура"));
		
		Возврат ТекстЗапроса;
	КонецЕсли;

	Если КлючДействия = "ЗаполнитьПризнакАртикул" Тогда
		Возврат ",
		|	втТаблицаНоменклатуры.%Ключ%.Артикул КАК %Значение%";
	КонецЕсли;

	Если КлючДействия = "ЗаполнитьПризнакКод" Тогда
		Возврат ",
		|	втТаблицаНоменклатуры.%Ключ%.Код КАК %Значение%";
	КонецЕсли;

	Если КлючДействия = "ЗаполнитьПризнакОписание" Тогда
		Возврат ",
		|	втТаблицаНоменклатуры.%Ключ%.Описание КАК %Значение%";
	КонецЕсли;

	Если КлючДействия = "ЗаполнитьПризнакВариантОформленияПродажи" Тогда
		Возврат ",
		|	втТаблицаНоменклатуры.%Ключ%.ВариантОформленияПродажи КАК %Значение%";
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьПризнакХарактеристикиИспользуются" Тогда
		Возврат ",
		|	ВЫБОР КОГДА втТаблицаНоменклатуры.%Ключ%.ИспользованиеХарактеристик В (ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры),
		|																			ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры),
		|																			ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры))
		|		ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК %Значение%";
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьПризнакВедетсяУчетПоГТД" Тогда
		Возврат ",
		|	втТаблицаНоменклатуры.%Ключ%.ВестиУчетПоГТД КАК %Значение%";
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьПризнакЭтоУслуга" Тогда
		Возврат ",
		|	ВЫБОР КОГДА втТаблицаНоменклатуры.%Ключ%.ТипНоменклатуры НЕ В
		|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|		ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК %Значение%";
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьПризнакСерииИспользуются" Тогда
		Возврат ",
		|	втТаблицаНоменклатуры.%Ключ%.ВидНоменклатуры.ИспользоватьСерии КАК %Значение%";
	КонецЕсли;
	
	Если ТипЗнч(КлючДействия) = Тип("Строка")
		И Не ТолькоПроверитьПоддерживаемыеКлючи Тогда
		ТекстЗапроса =
			",
			|	втТаблицаНоменклатуры.%Ключ%.%ИмяПоля% КАК %Значение%";
		Возврат СтрЗаменить(ТекстЗапроса, "%ИмяПоля%", КлючДействия);
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Преобразует структуру действий для использования в ПолучитьТекстЗапросаПоСлужебнымРеквизитамТЧ(),
// чтобы рассчитывать нужные поля одним запросом по всей коллекции.
//
// Параметры:
// 		СтруктураДействий - Структура - Структура с действиями по получению служебных реквизитов.
//
Процедура НормализоватьДействия(СтруктураДействий) Экспорт
	
	Суффикс = Неопределено;
	Если СтруктураДействий.Свойство("ПересчитатьВесОбъем", Суффикс)
		И ТипЗнч(Суффикс) <> Тип("Структура") Тогда
		
		СтруктураДействий.Вставить("ПересчитатьВесОбъем",
			Новый Структура("КоличествоУпаковок"+Суффикс+",Номенклатура,Упаковка", "Вес,Объем"));
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоместитьОбработанныеСтрокиВКэшированныеЗначения(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения)
	
	Если СтруктураДействий.Свойство("ПоместитьОбработанныеСтрокиВКэшированныеЗначения") Тогда
		
		Если ТипЗнч(ТекущаяСтрока) = Тип("ДанныеФормыЭлементКоллекции") Тогда
			КэшированныеЗначения.ОбработанныеСтроки.Добавить(ТекущаяСтрока.ПолучитьИдентификатор());
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
