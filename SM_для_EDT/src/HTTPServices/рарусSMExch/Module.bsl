// ++ rarus makole 2020-09-18 [БСО.СМ.005]
Функция TestGET(Запрос)
	ПользовательСервиса = ПользователиИнформационнойБазы.ТекущийПользователь();
	Если НЕ Пользователи.ПользовательИБЗанят(ПользовательСервиса) Тогда
		НовыйПользователь = Справочники.Пользователи.СоздатьЭлемент();
		НовыйПользователь.Наименование = ПользовательСервиса.Имя;
		НовыйПользователь.ОбменДанными.Загрузка = Истина;
		НовыйПользователь.ИдентификаторПользователяИБ = ПользовательСервиса.УникальныйИдентификатор;
		Попытка
			НовыйПользователь.Записать();
		Исключение
		   	ЗаписьЖурналаРегистрации(НСтр("ru = 'НовыйПользователь.Записать()'"), УровеньЖурналаРегистрации.Ошибка, , , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
	КонецЕсли;
	
	Ответ = Новый HTTPСервисОтвет(200);
	Возврат Ответ;
КонецФункции

Функция ServiceInfoGET(Запрос)
	
	НомерПринятого = Число(Запрос.ПараметрыURL.Получить("InputNumber"));
	НомерОтправленного = Число(Запрос.ПараметрыURL.Получить("OutputNumber"));
	
	ВариантОбмена = Число(Запрос.ПараметрыURL.Получить("Opt"));
	КодУзлаКорреспондента = Запрос.ПараметрыURL.Получить("Code");
	СсылкаУзлаКорреспондента = ОбменДаннымиСервер.УзелПланаОбменаПоКоду("Полный", КодУзлаКорреспондента);
	// Снимем с регистрации объекты, полученные на судне
	ПланыОбмена.УдалитьРегистрациюИзменений(СсылкаУзлаКорреспондента, НомерОтправленного);
	
	//Подготовка информации к выгрузке
	ВыборкаПоУзлу = ПолучитьВыборкуНомеровСообщений(СсылкаУзлаКорреспондента);
	Если ВыборкаПоУзлу.Следующий() Тогда
		оНомерПринятого = ВыборкаПоУзлу.НомерПринятого;
		оНомерОтправленного = ВыборкаПоУзлу.НомерОтправленного;
	Иначе
		Ответ = Новый HTTPСервисОтвет(404);
      	Ответ.УстановитьТелоИзСтроки("В центральной базе не найден узел судна");
		Возврат Ответ;
	КонецЕсли;
		
	Если НомерПринятого < оНомерПринятого Тогда
		Ответ = Новый HTTPСервисОтвет(400);
      	Ответ.УстановитьТелоИзСтроки("Номер отправленного ранее сообщения больше текущего");
		Возврат Ответ;
	КонецЕсли;
	
	СтруктураОтвета = Новый Структура();
	СтруктураОтвета.Вставить("oo", рарусСинхронизацияССудном.ПолучитьСписокКВыгрузке(СсылкаУзлаКорреспондента, ВариантОбмена)); //OutputObjects
	
	ЕстьИзмененияНастроек = ЕстьИзмененияНастроек(КодУзлаКорреспондента, ВариантОбмена);
	Если ЕстьИзмененияНастроек Тогда
		
		ДанныеКОбработке = рарусСинхронизацияССудном.ПолучитьОбъектыКВыгрузке(СсылкаУзлаКорреспондента, 0); // 0 - только настройки
		СтруктураОтвета.Вставить("ns", ДанныеКОбработке.ОбъектыКВыгрузке); // Настройки синхронизации
		
		// Для установки номера отправленного сообщения
		оНомерОтправленного = оНомерОтправленного + 1;
		
		НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
		
		ПланыОбмена.ВыбратьИзменения(СсылкаУзлаКорреспондента, оНомерОтправленного);
		
		Попытка
			рарусСинхронизацияССудном.ЗаблокироватьУзел(СсылкаУзлаКорреспондента);
			// ++ rarus makole 2021-04-23
			ОбъектУзла = СсылкаУзлаКорреспондента.ПолучитьОбъект();
			ОбъектУзла.НомерОтправленного = оНомерОтправленного;
			ОбъектУзла.НомерПринятого = НомерПринятого;
			ОбъектУзла.Записать();
			
			ЗафиксироватьТранзакцию();
			// -- rarus makole 2021-04-23
		Исключение
			ОтменитьТранзакцию();
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Блокировка узла плана обмена'"), УровеньЖурналаРегистрации.Ошибка, , , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			Ответ = Новый HTTPСервисОтвет(503);
	      	Ответ.УстановитьТелоИзСтроки("Не удалось установить новые номера сообщений в ЦБ, повторите попытку позднее");
			Возврат Ответ;
		КонецПопытки;
		
		// ++ rarus makole 2021-04-23
		//ОбъектУзла = СсылкаУзлаКорреспондента.ПолучитьОбъект();
		//ОбъектУзла.НомерОтправленного = оНомерОтправленного;
		//ОбъектУзла.НомерПринятого = НомерПринятого;
		//ОбъектУзла.Записать();
		//
		//ЗафиксироватьТранзакцию();
		// -- rarus makole 2021-04-23
		
		// Для очистки номера отправленнного у невыгруженных объектов
		рарусСинхронизацияССудном.ЗарегистрироватьНевыгруженные(СсылкаУзлаКорреспондента, ДанныеКОбработке.МассивДляПовторнойРегистрации);
		
	КонецЕсли;
	
	// ++ rarus makole 2021-03-26 [ВПIT-0021340]
	// Доработка Монитора обмена, чтобы он "заодно" запрашивал на судне из ЦБ инфо о номере релиза 
	// и если в центре было обновление (новый номер релиза) то сигнализировать в какой-то информационной 
	// строке, что требуется провести полный обмен и выполнить обновление программы
	ВерсииТекущейИБ = рарусОбщегоНазначенияСервер.ВерсияКонфигурацииПлатформы();
	СтруктураОтвета.Вставить("ver", ВерсииТекущейИБ.НомерВерсии);
	// -- rarus makole 2021-03-26 [ВПIT-0021340]
		
	СтруктураОтвета.Вставить("io", СтрШаблон("%1;%2", Формат(оНомерПринятого, "ЧГ=0"), Формат(оНомерОтправленного, "ЧГ=0")));
	ОтветСервиса = рарусСинхронизацияССудном.ПолучитьФайлОтветаHttpСервиса(СтруктураОтвета);
	
	//Подготовка ответа	
	Ответ = Новый HTTPСервисОтвет(200);
	ДвоичныеДанныеОтвета = Новый ДвоичныеДанные(ОтветСервиса.ПолноеИмяАрхивногоФайла);
	Ответ.Заголовки.Вставить("Content-Disposition", СтрШаблон("attachment; filename=""%1""", ОтветСервиса.ИмяАрхивногоФайла));
	Ответ.Заголовки.Вставить("Content-Type", "application/octet-stream");
	Ответ.УстановитьТелоИзДвоичныхДанных(ДвоичныеДанныеОтвета);	
	
	//Удаление временного каталога
	// ++ rarus makole 2021-04-23
	// Убрал попытку. Этот метод уже работает в попытке с записью в ЖР при исключении
	//Попытка
	//   ФайловаяСистема.УдалитьВременныйКаталог(ОтветСервиса.ВременныйКаталог);
	//Исключение
	//   ЗаписьЖурналаРегистрации(НСтр("ru = 'Удаление каталога временных файлов'"), УровеньЖурналаРегистрации.Ошибка, , , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	//   КонецПопытки;
	ФайловаяСистема.УдалитьВременныйКаталог(ОтветСервиса.ВременныйКаталог);
	// -- rarus makole 2021-04-23

	Возврат Ответ;
	
КонецФункции

Функция DataInfoGET(Запрос)
	
	НомерПринятого = Число(Запрос.ПараметрыURL.Получить("InputNumber"));
	НомерОтправленного = Число(Запрос.ПараметрыURL.Получить("OutputNumber"));
	
	ВариантОбмена = Число(Запрос.ПараметрыURL.Получить("Opt"));
	КодУзлаКорреспондента = Запрос.ПараметрыURL.Получить("Code");
	СсылкаУзлаКорреспондента = ОбменДаннымиСервер.УзелПланаОбменаПоКоду("Полный", КодУзлаКорреспондента);
	
	// Получение номеров сообщений по данным базы
	ВыборкаПоУзлу = ПолучитьВыборкуНомеровСообщений(СсылкаУзлаКорреспондента);
	Если ВыборкаПоУзлу.Следующий() Тогда
		оНомерПринятого = ВыборкаПоУзлу.НомерПринятого;
		ПредыдущийНомерОтправленного = ВыборкаПоУзлу.НомерОтправленного;
		оНомерОтправленного = ПредыдущийНомерОтправленного + 1;
	Иначе
		Ответ = Новый HTTPСервисОтвет(404);
      	Ответ.УстановитьТелоИзСтроки("В центральной базе не найден узел судна");
		Возврат Ответ;
	КонецЕсли;
	
	// Ответ будет получен на стороне базы-корреспондента, поэтому номера отправленных и полученных
	// поменяны местами
	Если НомерОтправленного > ПредыдущийНомерОтправленного Тогда
		Ответ = Новый HTTPСервисОтвет(400);
      	Ответ.УстановитьТелоИзСтроки("Номер принятого ранее сообщения больше текущего");
		Возврат Ответ;
	КонецЕсли;
	
	Если НомерПринятого < оНомерПринятого Тогда
		Ответ = Новый HTTPСервисОтвет(400);
      	Ответ.УстановитьТелоИзСтроки("Номер отправленного ранее сообщения меньше текущего");
		Возврат Ответ;
	КонецЕсли;
		
	// Снимем с регистрации объекты, полученные на судне
	ПланыОбмена.УдалитьРегистрациюИзменений(СсылкаУзлаКорреспондента, НомерОтправленного);
		
	//Подготовка информации к выгрузке
	ДанныеКОбработке = рарусСинхронизацияССудном.ПолучитьОбъектыКВыгрузке(СсылкаУзлаКорреспондента, ВариантОбмена);
	СтруктураОтвета = Новый Структура();
	СтруктураОтвета.Вставить("io", СтрШаблон("%1;%2", Формат(оНомерПринятого, "ЧГ=0"), Формат(оНомерОтправленного, "ЧГ=0")));
	СтруктураОтвета.Вставить("oo", ДанныеКОбработке.ОбъектыКВыгрузке); //OutputObjects
	
	ОтветСервиса = рарусСинхронизацияССудном.ПолучитьФайлОтветаHttpСервиса(СтруктураОтвета);
	
	//Подготовка ответа	
	Ответ = Новый HTTPСервисОтвет(200);
	ДвоичныеДанныеОтвета = Новый ДвоичныеДанные(ОтветСервиса.ПолноеИмяАрхивногоФайла);
	Ответ.Заголовки.Вставить("Content-Disposition", СтрШаблон("attachment; filename=""%1""", ОтветСервиса.ИмяАрхивногоФайла));
	Ответ.Заголовки.Вставить("Content-Type", "application/octet-stream");
	Ответ.УстановитьТелоИзДвоичныхДанных(ДвоичныеДанныеОтвета);	
	
	// Для установки номера отправленного сообщения 
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	
	ПланыОбмена.ВыбратьИзменения(СсылкаУзлаКорреспондента, оНомерОтправленного);
	
	Попытка
		рарусСинхронизацияССудном.ЗаблокироватьУзел(СсылкаУзлаКорреспондента);
		// ++ rarus makole 2021-04-23
		ОбъектУзла = СсылкаУзлаКорреспондента.ПолучитьОбъект();
		ОбъектУзла.НомерОтправленного = оНомерОтправленного;
		ОбъектУзла.НомерПринятого = НомерПринятого;
		ОбъектУзла.Записать();
		
		ЗафиксироватьТранзакцию();
		// -- rarus makole 2021-04-23
	Исключение
		ОтменитьТранзакцию();
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Блокировка узла плана обмена'"), УровеньЖурналаРегистрации.Ошибка, , , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Ответ = Новый HTTPСервисОтвет(503);
      	Ответ.УстановитьТелоИзСтроки("Не удалось установить новые номера сообщений в ЦБ, повторите попытку позднее");
		Возврат Ответ;
	КонецПопытки;
		
	// ++ rarus makole 2021-04-23
	//ОбъектУзла = СсылкаУзлаКорреспондента.ПолучитьОбъект();
	//ОбъектУзла.НомерОтправленного = оНомерОтправленного;
	//ОбъектУзла.НомерПринятого = НомерПринятого;
	//ОбъектУзла.Записать();
	//
	//ЗафиксироватьТранзакцию();
	// -- rarus makole 2021-04-23
	
	// Для очистки номера отправленнного у невыгруженных объектов
	Для каждого НевыгружаемыйОбъект Из ДанныеКОбработке.МассивДляПовторнойРегистрации Цикл
		ПланыОбмена.ЗарегистрироватьИзменения(СсылкаУзлаКорреспондента, НевыгружаемыйОбъект)
	КонецЦикла;
		
	//Удаление временного каталога
	// ++ rarus makole 2021-04-23
	// Убрал попытку. Этот метод уже работает в попытке с записью в ЖР при исключении
	//Попытка
	//   ФайловаяСистема.УдалитьВременныйКаталог(ОтветСервиса.ВременныйКаталог);
	//Исключение
	//   ЗаписьЖурналаРегистрации(НСтр("ru = 'Удаление каталога временных файлов'"), УровеньЖурналаРегистрации.Ошибка, , , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	//   КонецПопытки;
	ФайловаяСистема.УдалитьВременныйКаталог(ОтветСервиса.ВременныйКаталог);
	// -- rarus makole 2021-04-23

	Возврат Ответ;
	
КонецФункции

Функция DataPostPOST(Запрос)
	
	Перем ИмяКомпьютера;
	
	ВременныйКаталог = ФайловаяСистема.СоздатьВременныйКаталог();
	
#Область РаботаСоВходящимиДанными

	ДатаНачалаЗагрузки = ТекущаяДатаСеанса();
	
	// Получение, распаковка и чтение архива ответа
	ДвоичныеДанныеЗапроса = Запрос.ПолучитьТелоКакДвоичныеДанные();
	мЧтениеZipФайла = Новый ЧтениеZipФайла(ДвоичныеДанныеЗапроса.ОткрытьПотокДляЧтения(),"1");
	Если мЧтениеZipФайла.Элементы.Количество() = 1 Тогда
		ИмяВременногоФайла = мЧтениеZipФайла.Элементы.Получить(0).ИсходноеИмя
	Иначе
		Ответ = Новый HTTPСервисОтвет(400);
      	Ответ.УстановитьТелоИзСтроки("Не верный формат сообщения");
		Возврат Ответ;
	КонецЕсли;
	мЧтениеZipФайла.ИзвлечьВсе(ВременныйКаталог, РежимВосстановленияПутейФайловZIP.НеВосстанавливать);
	мЧтениеZipФайла.Закрыть();
	
	мЧтениеJSON = Новый ЧтениеJSON;
	мЧтениеJSON.ОткрытьФайл(ВременныйКаталог + ИмяВременногоФайла);
	
	мСериализаторXDTO = Новый СериализаторXDTO(ФабрикаXDTO);
	СтруктураЗапроса = мСериализаторXDTO.ПрочитатьJSON(мЧтениеJSON);
	
	СтруктураЗапроса.Свойство("PCName", ИмяКомпьютера);
	МассивНомеровОтСудна = СтрРазделить(СтруктураЗапроса.io, ";", Истина);
	
	// Номера от узла судна
	НомерПринятого = Число(МассивНомеровОтСудна[0]);
	НомерОтправленного = Число(МассивНомеровОтСудна[1]);
	
	КодУзлаСудна = Запрос.ПараметрыURL.Получить("Code");
	УзелСудна = ОбменДаннымиСервер.УзелПланаОбменаПоКоду("Полный", КодУзлаСудна);
	
	// Получение номеров сообщений по данным базы
	ВыборкаПоУзлу = ПолучитьВыборкуНомеровСообщений(УзелСудна);
	Если ВыборкаПоУзлу.Следующий() Тогда
		оНомерПринятого = ВыборкаПоУзлу.НомерПринятого;
		ПредыдущийНомерОтправленного = ВыборкаПоУзлу.НомерОтправленного;
		оНомерОтправленного = ПредыдущийНомерОтправленного + 1;
	Иначе
		Ответ = Новый HTTPСервисОтвет(404);
      	Ответ.УстановитьТелоИзСтроки("В центральной базе не найден узел судна");
		Возврат Ответ;
	КонецЕсли;
	
	// Ответ будет получен на стороне базы-корреспондента, поэтому номера отправленных и полученных
	// поменяны местами
	Если НомерПринятого <= оНомерПринятого Тогда
		// ++ rarus makole 2021-06-29
		рарусСинхронизацияССудном.ЗафиксироватьРезультатыОбменаВРегистрах(УзелСудна,
																	Перечисления.ДействияПриОбмене.ЗагрузкаДанных,
																	Перечисления.РезультатыВыполненияОбмена.Предупреждение_СообщениеОбменаБылоРанееПринято,
																	ДатаНачалаЗагрузки,
																	ТекущаяДатаСеанса(),
																	НомерПринятого,
																	ИмяКомпьютера);
		// -- rarus makole 2021-06-29
		Ответ = Новый HTTPСервисОтвет(400);
      	Ответ.УстановитьТелоИзСтроки("Сообщение в центральной базе было принято ранее");
		Возврат Ответ;
	КонецЕсли;
	
	ПланыОбмена.УдалитьРегистрациюИзменений(УзелСудна, НомерОтправленного);

	рарусСинхронизацияССудном.ОбработатьМассивЗагруженныхОбъектов(СтруктураЗапроса.oo, УзелСудна);
	
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	
	Попытка
		рарусСинхронизацияССудном.ЗаблокироватьУзел(УзелСудна);
		// ++ rarus makole 2021-04-23
		ОбъектУзла = УзелСудна.ПолучитьОбъект();
		ОбъектУзла.НомерПринятого = НомерПринятого;
		ОбъектУзла.Записать();
		
		ЗафиксироватьТранзакцию();
		// -- rarus makole 2021-04-23
	Исключение
		ОтменитьТранзакцию();
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Блокировка узла плана обмена'"), УровеньЖурналаРегистрации.Ошибка, , , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		// ++ rarus makole 2021-06-29
		рарусСинхронизацияССудном.ЗафиксироватьРезультатыОбменаВРегистрах(УзелСудна,
																	Перечисления.ДействияПриОбмене.ЗагрузкаДанных,
																	Перечисления.РезультатыВыполненияОбмена.Ошибка,
																	ДатаНачалаЗагрузки,
																	ТекущаяДатаСеанса(),
																	НомерПринятого,
																	ИмяКомпьютера);
		// -- rarus makole 2021-06-29
		Ответ = Новый HTTPСервисОтвет(503);
      	Ответ.УстановитьТелоИзСтроки("Не удалось установить новые номера сообщений в ЦБ, повторите попытку позднее");
		Возврат Ответ;
	КонецПопытки;
		
	// ++ rarus makole 2021-06-29
	рарусСинхронизацияССудном.ЗафиксироватьРезультатыОбменаВРегистрах(УзелСудна,
																Перечисления.ДействияПриОбмене.ЗагрузкаДанных,
																Перечисления.РезультатыВыполненияОбмена.Выполнено,
																ДатаНачалаЗагрузки,
																ТекущаяДатаСеанса(),
																НомерПринятого,
																ИмяКомпьютера);
	// -- rarus makole 2021-06-29
	
	// ++ rarus makole 2021-04-23
	//ОбъектУзла = УзелСудна.ПолучитьОбъект();
	//ОбъектУзла.НомерПринятого = Число(МассивНомеровОтСудна[0]);
	//ОбъектУзла.Записать();
	//
	//ЗафиксироватьТранзакцию();
	// -- rarus makole 2021-04-23

#КонецОбласти

#Область РаботаСИсходящимиДанными

	ДатаНачалаВыгрузки = ТекущаяДатаСеанса();
	
	// Ответ будет получен на стороне базы-корреспондента, поэтому номера отправленных и полученных
	// поменяны местами
	Если НомерОтправленного > ПредыдущийНомерОтправленного Тогда
		// ++ rarus makole 2021-06-29
		рарусСинхронизацияССудном.ЗафиксироватьРезультатыОбменаВРегистрах(УзелСудна,
																	Перечисления.ДействияПриОбмене.ВыгрузкаДанных,
																	Перечисления.РезультатыВыполненияОбмена.Предупреждение_СообщениеОбменаБылоРанееПринято,
																	ДатаНачалаВыгрузки,
																	ТекущаяДатаСеанса(),
																	НомерОтправленного,
																	ИмяКомпьютера);
		// -- rarus makole 2021-06-29
		Ответ = Новый HTTPСервисОтвет(400);
      	Ответ.УстановитьТелоИзСтроки("Сообщение от центральной базы было принято ранее");
		Возврат Ответ;
	КонецЕсли;
	
	ВариантОбмена = Число(МассивНомеровОтСудна[2]);
	
	//Подготовка информации к выгрузке
	ДанныеКОбработке = рарусСинхронизацияССудном.ПолучитьОбъектыКВыгрузке(УзелСудна, ВариантОбмена);
	СтруктураОтвета = Новый Структура();
	СтруктураОтвета.Вставить("io", СтрШаблон("%1;%2", Формат(НомерПринятого, "ЧГ=0"), Формат(оНомерОтправленного, "ЧГ=0")));
	СтруктураОтвета.Вставить("oo", ДанныеКОбработке.ОбъектыКВыгрузке); //OutputObjects
	// ++ rarus makole 2021-03-26 [ВПIT-0021340]
	ВерсииТекущейИБ = рарусОбщегоНазначенияСервер.ВерсияКонфигурацииПлатформы();
	СтруктураОтвета.Вставить("ver", ВерсииТекущейИБ.НомерВерсии);
	// -- rarus makole 2021-03-26 [ВПIT-0021340]
	
	ОтветСервиса = рарусСинхронизацияССудном.ПолучитьФайлОтветаHttpСервиса(СтруктураОтвета);
	
	//Подготовка ответа	
	Ответ = Новый HTTPСервисОтвет(200);
	ДвоичныеДанныеОтвета = Новый ДвоичныеДанные(ОтветСервиса.ПолноеИмяАрхивногоФайла);
	Ответ.Заголовки.Вставить("Content-Disposition", СтрШаблон("attachment; filename=""%1""", ОтветСервиса.ИмяАрхивногоФайла));
	Ответ.Заголовки.Вставить("Content-Type", "application/octet-stream");
	Ответ.УстановитьТелоИзДвоичныхДанных(ДвоичныеДанныеОтвета);	
	
	// Для установки номера отправленного сообщения 
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	
	ПланыОбмена.ВыбратьИзменения(УзелСудна, оНомерОтправленного);
	
	Попытка
		рарусСинхронизацияССудном.ЗаблокироватьУзел(УзелСудна);
		// ++ rarus makole 2021-04-23
		ОбъектУзла = УзелСудна.ПолучитьОбъект();
		ОбъектУзла.НомерОтправленного = оНомерОтправленного;
		ОбъектУзла.НомерПринятого = НомерПринятого;
		ОбъектУзла.Записать();
		
		ЗафиксироватьТранзакцию();
		// -- rarus makole 2021-04-23
	Исключение
		ОтменитьТранзакцию();
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Блокировка узла плана обмена'"), УровеньЖурналаРегистрации.Ошибка, , , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		// ++ rarus makole 2021-06-29
		рарусСинхронизацияССудном.ЗафиксироватьРезультатыОбменаВРегистрах(УзелСудна,
																	Перечисления.ДействияПриОбмене.ВыгрузкаДанных,
																	Перечисления.РезультатыВыполненияОбмена.Ошибка,
																	ДатаНачалаВыгрузки,
																	ТекущаяДатаСеанса(),
																	НомерОтправленного,
																	ИмяКомпьютера);
		// -- rarus makole 2021-06-29
		Ответ = Новый HTTPСервисОтвет(503);
      	Ответ.УстановитьТелоИзСтроки("Не удалось установить новые номера сообщений в ЦБ, повторите попытку позднее");
		Возврат Ответ;
	КонецПопытки;
		
	// ++ rarus makole 2021-06-29
	рарусСинхронизацияССудном.ЗафиксироватьРезультатыОбменаВРегистрах(УзелСудна,
																Перечисления.ДействияПриОбмене.ВыгрузкаДанных,
																Перечисления.РезультатыВыполненияОбмена.Выполнено,
																ДатаНачалаВыгрузки,
																ТекущаяДатаСеанса(),
																НомерОтправленного,
																ИмяКомпьютера);
	// -- rarus makole 2021-06-29
	
	// ++ rarus makole 2021-04-23
	//ОбъектУзла = УзелСудна.ПолучитьОбъект();
	//ОбъектУзла.НомерОтправленного = оНомерОтправленного;
	//ОбъектУзла.НомерПринятого = НомерПринятого;
	//ОбъектУзла.Записать();
	//
	//ЗафиксироватьТранзакцию();
	// -- rarus makole 2021-04-23
	
	// Для очистки номера отправленнного у невыгруженных объектов
	рарусСинхронизацияССудном.ЗарегистрироватьНевыгруженные(УзелСудна, ДанныеКОбработке.МассивДляПовторнойРегистрации);
	
	//Удаление временного каталога
	// ++ rarus makole 2021-04-23
	// Убрал попытку. Этот метод уже работает в попытке с записью в ЖР при исключении
	//Попытка
	//   ФайловаяСистема.УдалитьВременныйКаталог(ОтветСервиса.ВременныйКаталог);
	//Исключение
	//   ЗаписьЖурналаРегистрации(НСтр("ru = 'Удаление каталога временных файлов'"), УровеньЖурналаРегистрации.Ошибка, , , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	//   КонецПопытки;
	ФайловаяСистема.УдалитьВременныйКаталог(ОтветСервиса.ВременныйКаталог);
	// -- rarus makole 2021-04-23

	Возврат Ответ;

#КонецОбласти

КонецФункции

Функция ПолучитьВыборкуНомеровСообщений(СсылкаУзла)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Полный.НомерОтправленного КАК НомерОтправленного,
		|	Полный.НомерПринятого КАК НомерПринятого
		|ИЗ
		|	ПланОбмена.Полный КАК Полный
		|ГДЕ
		|	Полный.Ссылка = &СсылкаУзлаКорреспондента";
	Запрос.УстановитьПараметр("СсылкаУзлаКорреспондента", СсылкаУзла);
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция ЕстьИзмененияНастроек(КодУзла, Вариант)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	рарусНастройкиСоставаОбъектовСинхронизацииСудноБерегИзменения.Объект КАК Объект
		|ИЗ
		|	РегистрСведений.рарусНастройкиСоставаОбъектовСинхронизацииСудноБерег.Изменения КАК рарусНастройкиСоставаОбъектовСинхронизацииСудноБерегИзменения
		|ГДЕ
		|	рарусНастройкиСоставаОбъектовСинхронизацииСудноБерегИзменения.КодУзла = &КодУзла
		|	И рарусНастройкиСоставаОбъектовСинхронизацииСудноБерегИзменения.Вариант = &Вариант";
	
	Запрос.УстановитьПараметр("КодУзла", КодУзла);
	Запрос.УстановитьПараметр("Вариант", Вариант);
	
	ВыборкаИзменений = Запрос.Выполнить().Выбрать();
	
	Если ВыборкаИзменений.Количество() = 0 Тогда
		Возврат Ложь
	Иначе
		Возврат Истина
	КонецЕсли;
	
КонецФункции

// ++ rarus makole 2021-04-07
Функция InfoGET(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	Результат = "- It works!";
	Ответ.УстановитьТелоИзСтроки(Результат);
	Возврат Ответ;
КонецФункции
// -- rarus makole 2021-04-07

// -- rarus makole 2020-09-18