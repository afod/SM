
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.Судно = vftОбщегоНазначения.ПолучитьЗначениеПоУмолчанию("ОсновноеСудно");
	//raruskzn AydaFZ 15.11.2019 Задача № 17711{
	ЗаполнитьСписокШаблонов(); 
	//raruskzn AydaFZ 15.11.2019}
		
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		// Это существующий документ. 
		// Проверим, что его можно менять.
		//НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(РеквизитФормыВЗначение("Объект"), ЭтаФорма);
		УстановитьСтатус();
	Иначе
		//это новый
		//рарусДокументы.ЗаполнитьШапкуДокумента(Объект);
		//Объект.ВидДокумента = Перечисления.рарусВидыДокументовРадиограмма.РучнаяОтметка;
		//Объект.Статус = Перечисления.рарусСтатусыРадиограмм.Принято;
	КонецЕсли;
	
	// ++ rarus Чернавин Г.К 09.04.2020
	ЭтоННФ = Объект.Судно.Проект.МодельРДО = Справочники.рарусСправочникСсылок.МодельРДО_ННФ.Значение;
	// -- rarus Чернавин Г.К 09.04.2020
	// ++ rarus Чернавин Г.К 05.11.2020
	ЭтоМСГФ = Объект.Судно.Проект.МодельРДО = Справочники.рарусСправочникСсылок.МодельРДО_СЗП.Значение;
	// -- rarus Чернавин Г.К 05.11.2020
	// ++ rarus Чернавин Г.К 10.11.2020 № 25167
	Если ЭтоМСГФ Тогда
		ЗаполнитьПодборСтоянок();
	КонецЕсли;
	// -- rarus Чернавин Г.К 10.11.2020
	ЗаполнитьСочетаниеОпераций();
	УстановитьВидимость();
	УстановитьОбязательныеРеквизиты();
	
	УстановитьДоступность();
	
	// ++ rarus Чернавин Г.К 19.11.2020
	ПодсказкиПоказателей();
	// -- rarus Чернавин Г.К 19.11.2020
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСочетаниеОпераций()
	
	СочетаниеОпераций.Очистить();
	
	НоваяСтрока = СочетаниеОпераций.Добавить();
	НоваяСтрока.ОперацияПрибытия = Справочники.vftТиповыеОперации.НайтиПоРеквизиту("КодОперации", "PP");
	НоваяСтрока.ОперацияОтправления = Справочники.vftТиповыеОперации.НайтиПоРеквизиту("КодОперации", "OP");
	
	НоваяСтрока = СочетаниеОпераций.Добавить();
	НоваяСтрока.ОперацияПрибытия = Справочники.vftТиповыеОперации.НайтиПоРеквизиту("КодОперации", "PV");
	НоваяСтрока.ОперацияОтправления =Справочники.vftТиповыеОперации.НайтиПоРеквизиту("КодОперации", "OV");
	
	НоваяСтрока = СочетаниеОпераций.Добавить();
	НоваяСтрока.ОперацияПрибытия = Справочники.vftТиповыеОперации.НайтиПоРеквизиту("КодОперации", "TP");
	НоваяСтрока.ОперацияОтправления = Справочники.vftТиповыеОперации.НайтиПоРеквизиту("КодОперации", "TO");
	
	НоваяСтрока = СочетаниеОпераций.Добавить();
	НоваяСтрока.ОперацияПрибытия = Справочники.vftТиповыеОперации.НайтиПоРеквизиту("КодОперации", "PNR");
	НоваяСтрока.ОперацияОтправления = Справочники.vftТиповыеОперации.НайтиПоРеквизиту("КодОперации", "ONR");
	
	НоваяСтрока = СочетаниеОпераций.Добавить();
	НоваяСтрока.ОперацияПрибытия = Справочники.vftТиповыеОперации.НайтиПоРеквизиту("КодОперации", "PV");
	НоваяСтрока.ОперацияОтправления = Справочники.vftТиповыеОперации.НайтиПоРеквизиту("КодОперации", "KVG-PP");
	
	НоваяСтрока = СочетаниеОпераций.Добавить();
	НоваяСтрока.ОперацияПрибытия = Справочники.vftТиповыеОперации.НайтиПоРеквизиту("КодОперации", "KVG-PP");
	НоваяСтрока.ОперацияОтправления = Справочники.vftТиповыеОперации.НайтиПоРеквизиту("КодОперации", "OP");
	
	НоваяСтрока = СочетаниеОпераций.Добавить();
	НоваяСтрока.ОперацияПрибытия = Справочники.vftТиповыеОперации.НайтиПоРеквизиту("КодОперации", "PV");
	НоваяСтрока.ОперацияОтправления = Справочники.vftТиповыеОперации.НайтиПоРеквизиту("КодОперации", "KVG-PPR");
	
	НоваяСтрока = СочетаниеОпераций.Добавить();
	НоваяСтрока.ОперацияПрибытия = Справочники.vftТиповыеОперации.НайтиПоРеквизиту("КодОперации", "PV");
	НоваяСтрока.ОперацияОтправления = Справочники.vftТиповыеОперации.НайтиПоРеквизиту("КодОперации", "KVG-PNR");
	
	НоваяСтрока = СочетаниеОпераций.Добавить();
	НоваяСтрока.ОперацияПрибытия = Справочники.vftТиповыеОперации.НайтиПоРеквизиту("КодОперации", "KVG-PNR");
	НоваяСтрока.ОперацияОтправления = Справочники.vftТиповыеОперации.НайтиПоРеквизиту("КодОперации", "ONR");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступность()
	Если Объект.СтатусОтправления Тогда
		ЭтаФорма.ТолькоПросмотр = Истина;
		Элементы.Заполнить.Доступность = Ложь;
		Элементы.Отправить.Доступность = Ложь;
		//Элементы.ОтправитьПоВебСервису.Доступность = Истина; //raruskzn AydaFZ 05.12.2019 
		
	ИначеЕсли ЗначениеЗаполнено(Объект.Ссылка) И Не Модифицированность Тогда
		// ++ rarus Чернавин Г.К 02.02.2021 № 27049
		//Элементы.Дата.ТолькоПросмотр = Истина;
		//Элементы.Время.ТолькоПросмотр = Истина;
		//Элементы.ВидОперации.ТолькоПросмотр = Истина;
		//Элементы.Шаблон.ТолькоПросмотр = Истина;
		// -- rarus Чернавин Г.К 02.02.2021
	КонецЕсли; 
	
	// ++ rarus Чернавин Г.К 08.04.2020
	МодельРДО = Объект.Судно.Проект.МодельРДО;
	Если ЭтоННФ Тогда
		Элементы.Стоянки.ТолькоПросмотр = Истина;
		Элементы.Стоянки.ИзменятьСоставСтрок = Ложь;
		Элементы.Стоянки.ИзменятьПорядокСтрок = Ложь;
	Иначе
		Элементы.Стоянки.ТолькоПросмотр = Ложь;
		Элементы.СтоянкиНачало.Видимость = Ложь;
		Элементы.СтоянкиОкончание.Видимость = Ложь;
	КонецЕсли;	
	// -- rarus Чернавин Г.К 08.04.2020
	
	// ++ rarus Чернавин Г.К 06.11.2020 № 25177
	Если ЭтоМСГФ Тогда
		Элементы.НаправлениеВетра.ОграничениеТипа = Новый ОписаниеТипов("ПеречислениеСсылка.рарусНаправленияВетра"); 
		МассивЗначений = Новый Массив;
		Для ц = 1 по 12 цикл
			МассивЗначений.Добавить(ц);
		КонецЦикла;
		Элементы.Волнение.СписокВыбора.ЗагрузитьЗначения(МассивЗначений);
		Элементы.Волнение.РежимВыбораИзСписка = Истина;
	Иначе
		КвалификаторЧисла = Новый КвалификаторыЧисла(4,1);
		Элементы.НаправлениеВетра.ОграничениеТипа = Новый ОписаниеТипов("Число",,,КвалификаторЧисла);		
	КонецЕсли;
	// -- rarus Чернавин Г.К 06.11.2020
КонецПроцедуры

&НаСервере
Процедура УстановитьСтатус()
	
	//raruskzn AydaFZ 05.12.2019 {
	Если Объект.СтатусОтправления Тогда
		
		Если Объект.ОтправленоПоВебСервису Тогда
			
			Элементы.ДекорацияСтатусВебСервис.Картинка = БиблиотекаКартинок.Успешно32;
			Элементы.ДекорацияСтатус.Картинка = БиблиотекаКартинок.Предупреждение32;
			
		Иначе
			
			Элементы.ДекорацияСтатус.Картинка = БиблиотекаКартинок.Успешно32;
			Элементы.ДекорацияСтатусВебСервис.Картинка = БиблиотекаКартинок.Предупреждение32;
			
		КонецЕсли;
		
	Иначе
		
		Элементы.ДекорацияСтатусВебСервис.Картинка = БиблиотекаКартинок.Предупреждение32;
		Элементы.ДекорацияСтатус.Картинка = БиблиотекаКартинок.Предупреждение32;
		
	КонецЕсли; 
	
		//raruskzn AydaFZ 05.12.2019}
	

	УстановитьДоступность();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимость()
	
	// ++ rarus Чернавин Г.К 16.04.2020
	Если Не ЭтоННФ Или НЕ Объект.Шаблон.ВозможноАвтоматическоеЗаполнение Тогда
		Элементы.Заполнить.Видимость = Ложь;
	Иначе
		Элементы.Заполнить.Видимость = Истина;
	КонецЕсли;
	// -- rarus Чернавин Г.К 16.04.2020
	
	Если ЗначениеЗаполнено(Объект.Шаблон) Тогда
		
		ШаблонОбъект = Объект.Шаблон.ПолучитьОбъект();
		СкрытьЭлементыСообщения();		
		СписокРеквизитовПоШаблону = ШаблонОбъект.ПолучитьСписокРеквизитовДляФормыДокумента();
		
		Если СписокРеквизитовПоШаблону<>Неопределено И ТипЗнч(СписокРеквизитовПоШаблону) = Тип("Массив") Тогда
			
			vftОбщегоНазначения.УдалитьНеЗаполненныеЭлементыМассива(СписокРеквизитовПоШаблону);
			ДополнитьСписокРеквизитовПостояннымиЭлементами(СписокРеквизитовПоШаблону);
			Для каждого РеквизитОтображения Из СписокРеквизитовПоШаблону Цикл
				Элементы[СокрЛП(РеквизитОтображения)].Видимость = Истина;
			КонецЦикла; 
		КонецЕсли; 
	Иначе
		СкрытьЭлементыСообщения();
	КонецЕсли; 
	
	//raruskzn AydaFZ 18.11.2019 Задача № 17711{
	НастроитьВидимостьГрузов();
	//raruskzn AydaFZ 18.11.2019
		
КонецПроцедуры

&НаСервере
Процедура СкрытьЭлементыСообщения()
	СписокСкрываемыхЭлементов = Новый Массив;
	СписокСкрываемыхЭлементов.Добавить("ДислокацияКм");
	СписокСкрываемыхЭлементов.Добавить("ДислокацияБассейн");
	СписокСкрываемыхЭлементов.Добавить("ДислокацияКоординаты");
	// rarus_KloA_04.08.2015 < 
	СписокСкрываемыхЭлементов.Добавить("ГруппаКоординаты");
	// rarus_KloA_04.08.2015 > 
	СписокСкрываемыхЭлементов.Добавить("ДислокацияПункт");
	СписокСкрываемыхЭлементов.Добавить("ДислокацияОсобая");
	
	//++ rarus isaeva 30.03.2020
	
	//СписокСкрываемыхЭлементов.Добавить("ЗапасТопливаIFO");
	//СписокСкрываемыхЭлементов.Добавить("ЗапасMDO");
	//СписокСкрываемыхЭлементов.Добавить("ЗапасДизТоплива");
	
	СписокСкрываемыхЭлементов.Добавить("ЗапасТопливаСМТ");
	СписокСкрываемыхЭлементов.Добавить("ЗапасТопливаМТ01");
	СписокСкрываемыхЭлементов.Добавить("ЗапасТопливаМТ05");
	СписокСкрываемыхЭлементов.Добавить("ЗапасТопливаМТ15");
	//-- rarus isaeva 30.03.2020

	СписокСкрываемыхЭлементов.Добавить("ЗапасМаслаГД");
	//СписокСкрываемыхЭлементов.Добавить("ЗапасМаслаДГ");
	//СписокСкрываемыхЭлементов.Добавить("ЗапасМаслаРРП");
	
	
	СписокСкрываемыхЭлементов.Добавить("ЗапасВоды");
	СписокСкрываемыхЭлементов.Добавить("Провизия");
	СписокСкрываемыхЭлементов.Добавить("ПунктСледования");
	СписокСкрываемыхЭлементов.Добавить("ТранзитныйПункт");
	СписокСкрываемыхЭлементов.Добавить("ETA");
	СписокСкрываемыхЭлементов.Добавить("ETAПункта");
	СписокСкрываемыхЭлементов.Добавить("НаправлениеВетра");
	СписокСкрываемыхЭлементов.Добавить("СкоростьВетра");
	СписокСкрываемыхЭлементов.Добавить("Волнение");
	СписокСкрываемыхЭлементов.Добавить("СредняяСкоростьДвижения");
	СписокСкрываемыхЭлементов.Добавить("ПройденноеРасстояние");
	СписокСкрываемыхЭлементов.Добавить("ПройденноеРасстояниеОтПунктаОбработки");
	
	СписокСкрываемыхЭлементов.Добавить("КоличествоIFOЗаказ");
	//++ rarus isaeva 13.08.2020
	СписокСкрываемыхЭлементов.Добавить("КоличествоMGOЗаказ");
	//-- rarus isaeva 13.08.2020
	СписокСкрываемыхЭлементов.Добавить("КоличествоMDOЗаказ");
	СписокСкрываемыхЭлементов.Добавить("КоличествоMDOЗаказВсп");
	СписокСкрываемыхЭлементов.Добавить("КоличествоМаслаЗаказ");
	СписокСкрываемыхЭлементов.Добавить("КоличествоIFOПолучено");
	//++ rarus isaeva 13.08.2020
	СписокСкрываемыхЭлементов.Добавить("КоличествоMGOПолучено");
	//-- rarus isaeva 13.08.2020
	СписокСкрываемыхЭлементов.Добавить("КоличествоMDOПолучено");
	СписокСкрываемыхЭлементов.Добавить("КоличествоMDOПолученоВсп");
	СписокСкрываемыхЭлементов.Добавить("КоличествоМаслаПолучено");
	СписокСкрываемыхЭлементов.Добавить("КоличествоВодыЗаказ");
	СписокСкрываемыхЭлементов.Добавить("КоличествоКОФЗаказ");
	СписокСкрываемыхЭлементов.Добавить("КоличествоВодыПолучено");
	СписокСкрываемыхЭлементов.Добавить("КоличествоКОФПолучено");
	СписокСкрываемыхЭлементов.Добавить("МестоПолученияТоплива");
	СписокСкрываемыхЭлементов.Добавить("МестоПолученияКОФ");
	
	//++ rarus isaeva 12.05.2020
	СписокСкрываемыхЭлементов.Добавить("КоличествоМаслаВеретенноеЗаказ");
	СписокСкрываемыхЭлементов.Добавить("КоличествоМаслаВеретенноеПолучено");
	//-- rarus isaeva 12.05.2020

	СписокСкрываемыхЭлементов.Добавить("ETB");
	СписокСкрываемыхЭлементов.Добавить("ETCommenced");
	СписокСкрываемыхЭлементов.Добавить("ETCompleted");
	СписокСкрываемыхЭлементов.Добавить("ETS");
	СписокСкрываемыхЭлементов.Добавить("КоносаментноеКоличествоГруза");
	СписокСкрываемыхЭлементов.Добавить("КоличествоГрузаПоСудовымЗамерам");
	СписокСкрываемыхЭлементов.Добавить("КоличествоГрузаПоСудовымЗамерамСVEF");
	СписокСкрываемыхЭлементов.Добавить("КоличествоГрузаПоСудовымЗамерамСдано");
	СписокСкрываемыхЭлементов.Добавить("КоличествоГрузаПоСудовымЗамерамСданоСVEF");
	СписокСкрываемыхЭлементов.Добавить("КоличествоГрузаСдано");
	СписокСкрываемыхЭлементов.Добавить("СредняяТемператураГрузаПоСудовымЗамерам");
	СписокСкрываемыхЭлементов.Добавить("ТемператураГрузаПодогрев");
	СписокСкрываемыхЭлементов.Добавить("ПлотностьГруза");
	// rarus_KloA_01.07.2014 < 
	СписокСкрываемыхЭлементов.Добавить("КоносаментноеКоличествоГруза2");
	СписокСкрываемыхЭлементов.Добавить("КоличествоГруза2ПоСудовымЗамерам");
	СписокСкрываемыхЭлементов.Добавить("КоличествоГруза2ПоСудовымЗамерамСVEF");
	СписокСкрываемыхЭлементов.Добавить("КоличествоГруза2ПоСудовымЗамерамСдано");
	СписокСкрываемыхЭлементов.Добавить("КоличествоГруза2ПоСудовымЗамерамСданоСVEF");
	СписокСкрываемыхЭлементов.Добавить("КоличествоГруза2Сдано");
	СписокСкрываемыхЭлементов.Добавить("СредняяТемператураГруза2ПоСудовымЗамерам");
	СписокСкрываемыхЭлементов.Добавить("ПлотностьГруза2");
	СписокСкрываемыхЭлементов.Добавить("Груз1");
	СписокСкрываемыхЭлементов.Добавить("Груз2");
	СписокСкрываемыхЭлементов.Добавить("ВремяПолученияТопливаПлан");
	СписокСкрываемыхЭлементов.Добавить("ВремяПолученияКОФПлан");
	СписокСкрываемыхЭлементов.Добавить("Бункеровщик");
	СписокСкрываемыхЭлементов.Добавить("Сборщик");
	// rarus_KloA_01.07.2014 > 
	
	СписокСкрываемыхЭлементов.Добавить("ВидСтоянки");
	СписокСкрываемыхЭлементов.Добавить("ВремяЗавершенияСтоянки");
	
	СписокСкрываемыхЭлементов.Добавить("ОсадкаКорма");
	СписокСкрываемыхЭлементов.Добавить("ОсадкаНос");
	СписокСкрываемыхЭлементов.Добавить("ОсадкаМидель");
	СписокСкрываемыхЭлементов.Добавить("ПрогнозноеВремяЗавершенияСтоянки");
	СписокСкрываемыхЭлементов.Добавить("ИнформацияПоОбслуживанию");
	
	СписокСкрываемыхЭлементов.Добавить("ГруппаСтоянки");
	СписокСкрываемыхЭлементов.Добавить("Примечание");
	СписокСкрываемыхЭлементов.Добавить("Судно");
	// ++ rarus Чернавин Г.К 10.11.2020 № 25167
	СписокСкрываемыхЭлементов.Добавить("ГруппаПодборСтоянок");
	СписокСкрываемыхЭлементов.Добавить("ГруппаПодборСтоянокКоманды");
	// -- rarus Чернавин Г.К 10.11.2020
	
	//raruskzn AydaFZ 18.11.2019 Задача № 17711{
	СписокСкрываемыхЭлементов.Добавить("ГруппаГрузы");
	//raruskzn AydaFZ 18.11.2019
	
	// ++ rarus Чернавин Г.К 06.11.2020 № 25175
	СписокСкрываемыхЭлементов.Добавить("ГруппаУточнениеМестонахождения");
	СписокСкрываемыхЭлементов.Добавить("ГруппаКоординатыУточнениеМестонахождения");	
	// -- rarus Чернавин Г.К 06.11.2020
	
	
	Для каждого ЭлементСкрытия Из СписокСкрываемыхЭлементов Цикл
		Элементы[ЭлементСкрытия].Видимость = Ложь;
	КонецЦикла; 
	
	// ++ rarus Чернавин Г.К 10.04.2020
	
	ТолькоПросмотрПриСоздании = Не ЗначениеЗаполнено(Объект.Шаблон);
	Элементы.ГруппаСтрока1.ТолькоПросмотр = ТолькоПросмотрПриСоздании;
	Элементы.Комментарий.ТолькоПросмотр = ТолькоПросмотрПриСоздании;
	Элементы.Группа20.Доступность = Не ТолькоПросмотрПриСоздании;
	// -- rarus Чернавин Г.К 10.04.2020
КонецПроцедуры 

&НаСервере
Процедура ДополнитьСписокРеквизитовПостояннымиЭлементами(СписокРеквизитовПоШаблону) Экспорт
	//СписокРеквизитовПоШаблону.Добавить("Номер");
	СписокРеквизитовПоШаблону.Добавить("Дата");
	//СписокРеквизитовПоШаблону.Добавить("Организация");
	//СписокРеквизитовПоШаблону.Добавить("Судно");
	//СписокРеквизитовПоШаблону.Добавить("Рейс");
	//СписокРеквизитовПоШаблону.Добавить("Статус");
	СписокРеквизитовПоШаблону.Добавить("Сообщение");
	//СписокРеквизитовПоШаблону.Добавить("ГруппаСообщение");
	СписокРеквизитовПоШаблону.Добавить("Шаблон");
	СписокРеквизитовПоШаблону.Добавить("Комментарий");
	СписокРеквизитовПоШаблону.Добавить("ВидОперации");
	
	МассивУдаляемых = Новый Массив;
	
	Для каждого Элемент Из СписокРеквизитовПоШаблону Цикл
		Если Элемент = "Стоянка" Тогда
			МассивУдаляемых.Добавить(Элемент);
			СписокРеквизитовПоШаблону.Добавить("ГруппаСтоянки");
			// ++ rarus Чернавин Г.К 10.11.2020 № 25167
			Если ЭтоМСГФ Тогда
				СписокРеквизитовПоШаблону.Добавить("ГруппаПодборСтоянок");
				СписокРеквизитовПоШаблону.Добавить("ГруппаПодборСтоянокКоманды");
			КонецЕсли;
			// -- rarus Чернавин Г.К 10.11.2020
			//raruskzn AydaFZ 16.11.2019 Задача № 17711{
		ИначеЕсли Элемент = "Груз" Тогда
			МассивУдаляемых.Добавить(Элемент);
			СписокРеквизитовПоШаблону.Добавить("ГруппаГрузы");
			//raruskzn AydaFZ 16.11.2019}
		ИначеЕсли Элемент = "СудноНомер" Тогда 
			МассивУдаляемых.Добавить(Элемент);
		ИначеЕсли Элемент = "Mime" Тогда 
			МассивУдаляемых.Добавить(Элемент);
		ИначеЕсли Элемент = "From" Тогда 
			МассивУдаляемых.Добавить(Элемент);
			
			//ИначеЕсли Элемент = "СудноКод" Тогда
			//	МассивУдаляемых.Добавить(Элемент);
			//	СписокРеквизитовПоШаблону.Добавить("ГруппаСудноКод");
			//ИначеЕсли Элемент = "СудноНомер" Тогда
			//	МассивУдаляемых.Добавить(Элемент);
			//	СписокРеквизитовПоШаблону.Добавить("ГруппаСудноНомер");
			
		ИначеЕсли Элемент = "Дислокация" Тогда 
			
			СписокРеквизитовПоШаблону.Добавить("ДислокацияПункт");
			СписокРеквизитовПоШаблону.Добавить("ДислокацияОсобая");
			Если Объект.ДислокацияОсобая Тогда
				//++ rarus isaeva 17.11.2020
				//СписокРеквизитовПоШаблону.Добавить("ДислокацияКм");
				//СписокРеквизитовПоШаблону.Добавить("ДислокацияБассейн");
				Если ЭтоННФ Тогда
					СписокРеквизитовПоШаблону.Добавить("ДислокацияКм");
					СписокРеквизитовПоШаблону.Добавить("ДислокацияБассейн");
				КонецЕсли;
				//-- rarus isaeva 17.11.2020
				
				//СписокРеквизитовПоШаблону.Добавить("ДислокацияКоординаты");
				// rarus_KloA_04.08.2015 < 
				СписокРеквизитовПоШаблону.Добавить("ГруппаКоординаты")
				// rarus_KloA_04.08.2015 > 
			КонецЕсли; 
			МассивУдаляемых.Добавить(Элемент);
		ИначеЕсли Элемент = "УточнениеМестонахождения" Тогда
			СписокРеквизитовПоШаблону.Добавить("ГруппаУточнениеМестонахождения");	
		КонецЕсли;
		
	КонецЦикла;
	
	СписокРеквизитовПоШаблону = ОбщегоНазначенияКлиентСервер.СократитьМассив(СписокРеквизитовПоШаблону,МассивУдаляемых);
	
	
КонецПроцедуры

&НаСервере
Процедура УдалитьПостоянныеЭлементы(СписокРеквизитовПоШаблону) Экспорт
	
	МассивУдаляемых = Новый Массив;
	
	
	МассивУдаляемых.Добавить("Дата");
	МассивУдаляемых.Добавить("Сообщение");
	МассивУдаляемых.Добавить("Шаблон");
	МассивУдаляемых.Добавить("Комментарий");
	// ++ rarus Камаев П.В. 29.01.2021 Задача № 26995
	//МассивУдаляемых.Добавить("ВидОперации");
	// -- rarus Камаев П.В. 29.01.2021
		
	Для каждого Элемент Из СписокРеквизитовПоШаблону Цикл
		Если Элемент = "Стоянка" Тогда
			// ++ rarus Камаев П.В. 12.02.2021 Задача № 27213
			МассивУдаляемых.Добавить(Элемент);
			Если Элементы.ГруппаСтоянки.Видимость 
				И Элементы.ГруппаСтоянкиПраво.Видимость
				И Элементы.Стоянки.Видимость Тогда
				
				СписокРеквизитовПоШаблону.Добавить("Стоянки");	
			КонецЕсли;
			// -- rarus Камаев П.В. 12.02.2021
			
			//ИначеЕсли Элемент = "СудноКод" Тогда
			//	МассивУдаляемых.Добавить(Элемент);
			//ИначеЕсли Элемент = "СудноНомер" Тогда
			//	МассивУдаляемых.Добавить(Элемент);
			
			//СписокРеквизитовПоШаблону.Добавить("ГруппаСтоянки");
		ИначеЕсли Элемент = "Дислокация" Тогда 
			
			// ++ rarus Камаев П.В. 12.02.2021 Задача № 27213
			Если Элементы.ГруппаДислокация.Видимость Тогда
				Если Элементы.ГруппаНахождение.Видимость Тогда
					Если Элементы.ДислокацияПункт.Видимость Тогда
						СписокРеквизитовПоШаблону.Добавить("ДислокацияПункт");
					КонецЕсли;
					Если Элементы.ДислокацияКоординаты.Видимость Тогда
						//СписокРеквизитовПоШаблону.Добавить("ДислокацияКоординаты");
					КонецЕсли;	
					Если Элементы.ГруппаКоординаты.Видимость Тогда
						Если Элементы.КоординатыN.Видимость Тогда
							СписокРеквизитовПоШаблону.Добавить("КоординатыN");
						КонецЕсли;
						Если Элементы.КоординатыE.Видимость Тогда
							СписокРеквизитовПоШаблону.Добавить("КоординатыE");
						КонецЕсли;	
					КонецЕсли;
				КонецЕсли;
				Если Элементы.ГруппаРека.Видимость Тогда
					Если Элементы.ДислокацияКм.Видимость Тогда
						СписокРеквизитовПоШаблону.Добавить("ДислокацияКм");
					КонецЕсли;
					Если Элементы.ДислокацияБассейн.Видимость Тогда
						СписокРеквизитовПоШаблону.Добавить("ДислокацияБассейн");
					КонецЕсли;	
				КонецЕсли;
			КонецЕсли;
			// -- rarus Камаев П.В. 12.02.2021
			
			//СписокРеквизитовПоШаблону.Добавить("ДислокацияКм");
			//СписокРеквизитовПоШаблону.Добавить("ДислокацияБассейн");
			//СписокРеквизитовПоШаблону.Добавить("ДислокацияКоординаты");
			//СписокРеквизитовПоШаблону.Добавить("ДислокацияПункт");
			МассивУдаляемых.Добавить(Элемент);
			// ++ rarus Камаев П.В. 12.02.2021 Задача № 27213
		ИначеЕсли Элемент = "Груз" Тогда
			МассивУдаляемых.Добавить(Элемент);
			Если Элементы.ГруппаГрузы.Видимость 
				И Элементы.Грузы.Видимость Тогда
				
				СписокРеквизитовПоШаблону.Добавить("Грузы");	
			КонецЕсли;
		КонецЕсли;
		// -- rarus Камаев П.В. 12.02.2021
		
	КонецЦикла;
	
	СписокРеквизитовПоШаблону = ОбщегоНазначенияКлиентСервер.СократитьМассив(СписокРеквизитовПоШаблону,МассивУдаляемых);
	
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблонПриИзменении(Элемент)
	ШаблонПриИзмененииНаСервере();//raruskzn AydaFZ 15.11.2019 Задача № 17711
	
	//++ rarus isaeva 14.04.2021
	УстановитьВидимостьКлиент();
	//-- rarus isaeva 14.04.2021

КонецПроцедуры

&НаСервере
Процедура ШаблонПриИзмененииНаСервере();//raruskzn AydaFZ 15.11.2019 Задача № 17711
	
	//Проверим особый случай когда нужно отследить введенную отметку в путевом журнале, для этого проверим
	//список операций по шаблону и проверим не было ли в последних записях этих операций
	ПроверитьИЗаполнитьПоПоследнейОперации();
	УстановитьВидимость();
	УстановитьОбязательныеРеквизиты();
	// ++ rarus Чернавин Г.К 13.04.2020
	ЗаполнитьСписокВыбораОпераций();
	// -- rarus Чернавин Г.К 13.04.2020
	Объект.Сообщение = "";
	
	// ++ rarus Чернавин Г.К 19.11.2020
	ПодсказкиПоказателей();
	// -- rarus Чернавин Г.К 19.11.2020
КонецПроцедуры //raruskzn AydaFZ 15.11.2019}

// ++ rarus Чернавин Г.К 13.04.2020
&НаСервере
Процедура ЗаполнитьСписокВыбораОпераций()
	
	
	СписокВидовОпераций = Объект.Шаблон.ВидыОпераций;
	
	Если СписокВидовОпераций.Количество() = 0 Тогда
		Элементы.ВидОперации.РежимВыбораИзСписка = Ложь;
		Возврат;
	КонецЕсли;
	
	Элементы.ВидОперации.РежимВыбораИзСписка = Истина;
	Элементы.ВидОперации.СписокВыбора.Очистить();
	Объект.ВидОперации = Справочники.vftТиповыеОперации.ПустаяСсылка();
	Для Каждого Строка Из СписокВидовОпераций Цикл
		// ++ rarus Камаев П.В. 25.01.2021 Задача № 26829
		Элементы.ВидОперации.СписокВыбора.Добавить(Строка.ВидОперации, Строка.ВидОперации.КодОперации + " (" + Строка.ВидОперации.Наименование + ")");
		// -- rarus Камаев П.В. 25.01.2021
	КонецЦикла;
	
КонецПроцедуры
// -- rarus Чернавин Г.К 13.04.2020

&НаСервере
Процедура ПроверитьИЗаполнитьПоПоследнейОперации()
	// ++ rarus kloa 29.04.2016   Очищаем всегда
	ТекущийНаборЗаписей.Очистить();
	// -- rarus kloa 29.04.2016 
	
	Если Объект.Шаблон.ВидыОпераций.Количество() = 0 Тогда
		Возврат;
	КонецЕсли; 	
	
	//raruskzn AydaFZ 21.11.2019{
	
	СписокОпераций = Объект.Шаблон.ВидыОпераций.ВыгрузитьКолонку("ВидОперации");
	//СтруктураОтбора = Новый Структура("Отправлено", Ложь); 
	//ВыборкаЗаписейРС = РегистрыСведений.vftТаблицаДвижения.Выбрать(,,СтруктураОтбора);
	// ++ rarus Чернавин Г.К 07.04.2020
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	рарусОтправленныеРейсыРДО.Судно КАК Судно,
	               |	vftРейсПункты.Ссылка.Ссылка КАК Рейс,
	               |	vftРейсПункты.Пункт КАК Пункт,
	               |	vftРейсПункты.ПричинаСтоянки КАК ВидОперации,
	               |	vftРейсПункты.Приход КАК Начало,
	               |	vftРейсПункты.Отход КАК Окончание,
	               |	vftРейсПункты.Примечание КАК Примечание,
	               |	vftРейсПункты.РасстояниеПлан КАК ПройденноеРасстояниеНорма,
	               |	vftРейсПункты.РасстояниеФакт КАК ПройденноеРасстояниеФакт,
	               |	vftРейсПункты.ХодовоеВремя КАК ХодовоеВремяПлан,
	               |	vftРейсПункты.ИД КАК ИД,
	               |	vftРейсПункты.ВремяСтоянки КАК ВремяСтоянки,
	               |	vftРейсПункты.ХодовоеВремяПлан КАК ХодовоеВремяНорма
	               |ИЗ
	               |	РегистрСведений.рарусОтправленныеРейсыРДО КАК рарусОтправленныеРейсыРДО
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.vftРейс.Пункты КАК vftРейсПункты
	               |		ПО рарусОтправленныеРейсыРДО.Рейс = vftРейсПункты.Ссылка
	               |			И (рарусОтправленныеРейсыРДО.Отправлено = ЛОЖЬ)
	               |			И (рарусОтправленныеРейсыРДО.Судно = &Судно)
	               |			И рарусОтправленныеРейсыРДО.ИДСтрокиРейса = vftРейсПункты.ИД";	
	Запрос.УстановитьПараметр("Судно", Объект.Судно);
	// -- rarus Чернавин Г.К 07.04.2020
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаЗаписейРС = РезультатЗапроса.Выбрать();
	
	//raruskzn AydaFZ 21.11.2019} 
	
	ТекущийНаборЗаписей.Очистить();
	Пока ВыборкаЗаписейРС.Следующий() Цикл
		ДобЗапись = ТекущийНаборЗаписей.Добавить();	
		ЗаполнитьЗначенияСвойств(ДобЗапись,ВыборкаЗаписейРС);
	КонецЦикла; 
	
	//НаборЗаписей = ДанныеФормыВЗначение(ТекущийНаборЗаписей,Тип("ТаблицаЗначений"));
	ТаблицаНабор = ТекущийНаборЗаписей.Выгрузить();
	Для каждого ВидОперации Из СписокОпераций Цикл
		СтрокаСОперацией = ТаблицаНабор.найти(ВидОперации);
		Если СтрокаСОперацией<>Неопределено Тогда
			Объект.ВидОперации = СтрокаСОперацией.ВидОперации;
			Объект.Дата = СтрокаСОперацией.Начало;
			ЗаполнитьНаСервере(Истина, Истина);
			Прервать;
		КонецЕсли; 	
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОбязательныеРеквизиты()
	ЦветОР = WebЦвета.СветлоЗолотистый;
	Если ЗначениеЗаполнено(Объект.Шаблон) Тогда
		
		ШаблонОбъект = Объект.Шаблон.ПолучитьОбъект();
		УбратьОтметки();		
		СписокОбязательныхРеквизитовПоШаблону = ШаблонОбъект.ПолучитьСписокОбязательныхРеквизитовДляФормыДокумента(Объект.Дата);//raruskzn AydaFZ 18.11.2019 Задача № 17711
		
		Если СписокОбязательныхРеквизитовПоШаблону<>Неопределено И ТипЗнч(СписокОбязательныхРеквизитовПоШаблону) = Тип("Массив") Тогда
			
			vftОбщегоНазначения.УдалитьНеЗаполненныеЭлементыМассива(СписокОбязательныхРеквизитовПоШаблону);
			УдалитьПостоянныеЭлементы(СписокОбязательныхРеквизитовПоШаблону);
			
			Для каждого РеквизитОтображения Из СписокОбязательныхРеквизитовПоШаблону Цикл
				
				Если Не ЗначениеЗаполнено(Объект[СокрЛП(РеквизитОтображения)]) Тогда
					
					// ++ rarus Камаев П.В. 15.02.2021 Задача № 27213
					//Проверку убираем если заполнена КоординатыN ИЛИ КоординатыE ИЛИ (ДислокацияКм И ДислокацияБассейн)
					РеквизитОтображения = СокрЛП(РеквизитОтображения);
					
					УстанавливатьОтметку = Истина;
					Если РеквизитОтображения = "КоординатыN"
						ИЛИ РеквизитОтображения = "КоординатыE" 
						ИЛИ РеквизитОтображения = "ДислокацияКм" 
						ИЛИ РеквизитОтображения = "ДислокацияБассейн" Тогда
						
						Если ЗначениеЗаполнено(Объект["КоординатыN"]) 
							ИЛИ ЗначениеЗаполнено(Объект["КоординатыE"]) 
							ИЛИ (ЗначениеЗаполнено(Объект["ДислокацияБассейн"]) И ЗначениеЗаполнено(Объект["ДислокацияБассейн"])) Тогда
							УстанавливатьОтметку = Ложь;	
						КонецЕсли;
					КонецЕсли;
					// -- rarus Камаев П.В. 15.02.2021
					
					Если УстанавливатьОтметку Тогда
						Элементы[РеквизитОтображения].ОтметкаНезаполненного = Истина;
						Элементы[РеквизитОтображения].ЦветФона = ЦветОР;
					КонецЕсли;
				КонецЕсли;
				
				Элементы[РеквизитОтображения].АвтоОтметкаНезаполненного = Ложь;
				
			КонецЦикла;			
		КонецЕсли; 
		
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура УбратьОтметки()
	Для каждого РеквизитОтображения Из Элементы Цикл
		// ++ rarus Камаев П.В. 12.02.2021 Задача № 27213
		// Если ТипЗнч(РеквизитОтображения) = Тип("ПолеФормы") И РеквизитОтображения.Вид = ВидПоляФормы.ПолеВвода Тогда
		Если ТипЗнч(РеквизитОтображения) = Тип("ПолеФормы") И РеквизитОтображения.Вид = ВидПоляФормы.ПолеВвода ИЛИ ТипЗнч(РеквизитОтображения) = Тип("ТаблицаФормы") Тогда
			// -- rarus Камаев П.В. 12.02.2021
			
			РеквизитОтображения.АвтоОтметкаНезаполненного = Ложь;
			РеквизитОтображения.ОтметкаНезаполненного = Ложь;
			РеквизитОтображения.ЦветФона = WebЦвета.Белый;
		КонецЕсли; 
	КонецЦикла; 	
КонецПроцедуры

&НаСервере
Процедура СформироватьТекстСообщения()
	ИтоговоеСообщение = "";
	ТаблицаРеквизитов = Новый ТаблицаЗначений;
	ТаблицаРеквизитов.Колонки.Добавить("Идентификатор");
	ТаблицаРеквизитов.Колонки.Добавить("Значение");
	ТаблицаРеквизитов.Колонки.Добавить("Обязательный");
	ТаблицаРеквизитов.Колонки.Добавить("НомерСтроки");
	ТаблицаРеквизитов.Колонки.Добавить("ПропускатьЕслиНеЗаполнено");
	ТаблицаРеквизитов.Колонки.Добавить("Заполнено");
	ТаблицаРеквизитов.Колонки.Добавить("НеЗаполнятьПослеПараметра");
	//Получим массив строк сообщения
	МассивСтрок = Объект.Шаблон.СтруктураФайла.Выгрузить(,"НомерСтроки,Структура,ОбъединятьСПредыдущей,ПропускатьЕслиНеЗаполнено,НеЗаполнятьПослеПараметра");
	//Получим идентификаторы
	
	//Rarus-NN_Ikor_19.11.14 исключение ошибки получения пустого объекта {
	//ШаблонОбъект = Объект.Шаблон.ПолучитьОбъект();    Далее переменная не используется
	//Rarus-NN_Ikor_19.11.14 исключение ошибки получения пустого объекта }
	СимволПробел = "";
	СимволПС = "";
	Для каждого СтрокаФайла Из МассивСтрок Цикл
		Идентификаторы = vftШаблоныРДО.ИдентификаторыПоказателейФормулы(СтрокаФайла.Структура);
		НеЗаполнятьПослеПараметра = Ложь;
		Для каждого Ид Из Идентификаторы Цикл
			НовыйРеквизит = ТаблицаРеквизитов.Добавить();
			НовыйРеквизит.Идентификатор = Ид;
			НовыйРеквизит.НомерСтроки = СтрокаФайла.НомерСтроки;
			// ++ rarus Чернавин Г.К 28.09.2020 № 24443
			НовыйРеквизит.ПропускатьЕслиНеЗаполнено = СтрокаФайла.ПропускатьЕслиНеЗаполнено;
			НовыйРеквизит.Заполнено = Ложь;
			// -- rarus Чернавин Г.К 28.09.2020
			// ++ rarus Чернавин Г.К 02.10.2020 № 24445
			НовыйРеквизит.НеЗаполнятьПослеПараметра = СтрокаФайла.НеЗаполнятьПослеПараметра;
			// -- rarus Чернавин Г.К 02.10.2020
		КонецЦикла;
		МеткаПропускатьЕслиНеЗаполнено = ?(СтрокаФайла.ПропускатьЕслиНеЗаполнено = Истина, "^^"+(100-СтрокаФайла.НомерСтроки), "");
		// ++ rarus Чернавин Г.К 05.10.2020  № 24445
		МеткаНеЗаполнятьПослеПараметраНачало = ?(ЗначениеЗаполнено(СтрокаФайла.НеЗаполнятьПослеПараметра), "^Start^"+(30-СтрокаФайла.НомерСтроки), "");
		МеткаНеЗаполнятьПослеПараметраКонец = ?(ЗначениеЗаполнено(СтрокаФайла.НеЗаполнятьПослеПараметра), "^End^"+(30-СтрокаФайла.НомерСтроки), "");
		// -- rarus Чернавин Г.К 05.10.2020

		// ++ rarus Чернавин Г.К 28.09.2020 № 24443

		ИтоговоеСообщение = ИтоговоеСообщение  
			+ МеткаПропускатьЕслиНеЗаполнено + ?(СтрокаФайла.ОбъединятьСПредыдущей = Истина, СимволПробел, СимволПС) + МеткаНеЗаполнятьПослеПараметраНачало 
			+ СтрокаФайла.Структура + МеткаНеЗаполнятьПослеПараметраКонец				 
			+ МеткаПропускатьЕслиНеЗаполнено;
		СимволПробел = " ";
		СимволПС = Символы.ПС;
		// -- rarus Чернавин Г.К 28.09.2020
			КонецЦикла; 
	
	//Заполним их с учетом типа реквизиты
	//все даты указываем как ddMMччмм
	//все пункты указываем как шифр
	//все грузы указываем как шифр
	ПроверкаУдалитьОкончаниеСтроки = Ложь;
	ТекИндекс = 0;
	ТекНомерСтроки = 0;
	Для каждого Поле Из ТаблицаРеквизитов Цикл
		Если ТекНомерСтроки <> Поле.НомерСтроки Тогда
			ТекНомерСтроки = Поле.НомерСтроки;
			ТекИндекс = 0;
		КонецЕсли;
		ТекИндекс = ТекИндекс + 1;
		Попытка
			
			ТекЗначение = Объект[Поле.Идентификатор];
			//raruskzn AydaFZ 22.11.2019{
			
			Если Поле.Идентификатор = "Дата" 
				И ЕстьРДОПослеОткрытияСтоянки Тогда 
				
				ТекЗначение = ДатаНачалоСтоянки;
				
			КонецЕсли;
			
			Поле.Значение = ПреобразоватьЗначениеДляРДО(ТекЗначение);
			//raruskzn AydaFZ 22.11.2019}
			СтрокаПоля = Объект.Шаблон.ОбязательныеРеквизиты.Найти(Поле.Идентификатор, "Реквизит");
			
			//raruskzn AydaFZ 18.11.2019 Задача № 17711 {
			Если СтрокаПоля<>Неопределено 
				И (Объект.Дата = НачалоМесяца(ТекущаяДата()) 
				ИЛИ Не СтрокаПоля.ТолькоНаНачалоМесяца) Тогда  
				//raruskzn AydaFZ 18.11.2019}	
				ЭтоОбязательноеПоле = Истина;
				
			Иначе
				
				ЭтоОбязательноеПоле = Ложь;
				
			КонецЕсли;
			
			ЭтоУдаляемыйРеквизит = Справочники.vftШаблоныРДО.ЭтоУдаляемыйРеквизит(Объект.Шаблон,Поле.Идентификатор,Поле.НомерСтроки);			
			Если ЭтоОбязательноеПоле ИЛИ Не ЭтоУдаляемыйРеквизит Тогда
				// ++ rarus Чернавин Г.К 05.10.2020
				МеткаНеЗаполнятьПослеПараметраНачало = "";
				Если ЗначениеЗаполнено(Поле.НеЗаполнятьПослеПараметра) Тогда
					Если Поле.НеЗаполнятьПослеПараметра = ТекИндекс Тогда
						МеткаНеЗаполнятьПослеПараметраНачало = "^Start^"+(30-Поле.НомерСтроки);
						ИтоговоеСообщение = СтрЗаменить(ИтоговоеСообщение, МеткаНеЗаполнятьПослеПараметраНачало, "");
					ИначеЕсли Поле.НеЗаполнятьПослеПараметра < ТекИндекс Тогда
						Если ЗначениеЗаполнено(Поле.Значение) И Не Поле.Значение = "0" Тогда
							МеткаНеЗаполнятьПослеПараметраНачало = "^Start^"+(30-Поле.НомерСтроки);
							ИтоговоеСообщение = СтрЗаменить(ИтоговоеСообщение, МеткаНеЗаполнятьПослеПараметраНачало, "");	
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				ИтоговоеСообщение = СтрЗаменить(ИтоговоеСообщение,"["+Поле.Идентификатор+"]", Поле.Значение + МеткаНеЗаполнятьПослеПараметраНачало);
				// -- rarus Чернавин Г.К 05.10.2020
			ИначеЕсли ЭтоУдаляемыйРеквизит Тогда 
				Если ЗначениеЗаполнено(ТекЗначение) Тогда 
					ИтоговоеСообщение = СтрЗаменить(ИтоговоеСообщение,"["+Поле.Идентификатор+"]", Поле.Значение);					
				КонецЕсли;				
			КонецЕсли; 
			
			
		Исключение
			Если Поле.Идентификатор = "Дислокация" Тогда
				Поле.Значение = ПолучитьЗначениеДислокации();
				ИтоговоеСообщение = СтрЗаменить(ИтоговоеСообщение,"["+Поле.Идентификатор+"]", Поле.Значение);
			ИначеЕсли Поле.Идентификатор = "СудноНомер" Тогда 	
				Поле.Значение = Объект.Судно.КодБыстрогоВвода;
				ИтоговоеСообщение = СтрЗаменить(ИтоговоеСообщение,"["+Поле.Идентификатор+"]", Поле.Значение);
			ИначеЕсли Поле.Идентификатор = "Mime" Тогда 	
				Поле.Значение = "MIME-Version: 1.0";
				ИтоговоеСообщение = СтрЗаменить(ИтоговоеСообщение,"["+Поле.Идентификатор+"]", Поле.Значение);				
			ИначеЕсли Поле.Идентификатор = "From" Тогда 	
				Поле.Значение = "From";
				ИтоговоеСообщение = СтрЗаменить(ИтоговоеСообщение,"["+Поле.Идентификатор+"]", Поле.Значение);				
			ИначеЕсли Поле.Идентификатор = "Стоянка" Тогда
				Поле.Значение = ПолучитьЗначениеСтоянок();
				ИтоговоеСообщение = СтрЗаменить(ИтоговоеСообщение,"["+Поле.Идентификатор+"]", Поле.Значение);
			ИначеЕсли Поле.Идентификатор = "СудноКод" Тогда
				Поле.Значение = Объект.Судно.КодБыстрогоВвода;
				ИтоговоеСообщение = СтрЗаменить(ИтоговоеСообщение,"["+Поле.Идентификатор+"]", Поле.Значение);				
				//raruskzn AydaFZ 15.11.2019 Задача № 17711{
			ИначеЕсли Поле.Идентификатор = "Груз" Тогда
				
				Поле.Значение = ПолучитьЗначениеГрузов();
				ИтоговоеСообщение = СтрЗаменить(ИтоговоеСообщение,"["+Поле.Идентификатор+"]", Поле.Значение);
				//raruskzn AydaFZ 15.11.2019} 
				// ++ rarus Чернавин Г.К 06.11.2020
			ИначеЕсли Поле.Идентификатор = "УточнениеМестонахождения" Тогда
				Поле.Значение = ПолучитьЗначениеУточнениеМестоположения();
				ИтоговоеСообщение = СтрЗаменить(ИтоговоеСообщение,"["+Поле.Идентификатор+"]", Поле.Значение);
				// -- rarus Чернавин Г.К 06.11.2020
			// ++ rarus Чернавин Г.К 17.02.2021 № 27215
			ИначеЕсли Поле.Идентификатор = "Ответственный" Тогда
				Поле.Значение = Строка(Поле.Значение);
				ИтоговоеСообщение = СтрЗаменить(ИтоговоеСообщение,"["+Поле.Идентификатор+"]", Поле.Значение);
			// -- rarus Чернавин Г.К 17.02.2021
			КонецЕсли; 
		КонецПопытки;
		// ++ rarus Чернавин Г.К 01.10.2020 № 24443
		Если ЗначениеЗаполнено(Поле.Значение) 
				И Не Поле.Значение = "0" Тогда
			Поле.Заполнено = Истина;
		КонецЕсли;
		// -- rarus Чернавин Г.К 01.10.2020
	КонецЦикла;
	
	// ++ rarus Чернавин Г.К 01.10.2020 № 24443
	ТекНомерСтроки = Неопределено;
	Для Каждого Строка Из ТаблицаРеквизитов Цикл
		// ++ rarus Чернавин Г.К 05.10.2020  № 24445
		Если ТекНомерСтроки <> Строка.НомерСтроки И Строка.НеЗаполнятьПослеПараметра Тогда			
			МеткаНеЗаполнятьПослеПараметраНачало = "^Start^"+(30-Строка.НомерСтроки);
			МеткаНеЗаполнятьПослеПараметраКонец = "^End^"+(30-Строка.НомерСтроки);
			НачПозиция = СтрНайти(ИтоговоеСообщение, МеткаНеЗаполнятьПослеПараметраНачало);
			КонПозиция = СтрНайти(ИтоговоеСообщение, МеткаНеЗаполнятьПослеПараметраКонец);
			Дельта = СтрДлина(МеткаНеЗаполнятьПослеПараметраКонец);
			ИтоговоеСообщение = Лев(ИтоговоеСообщение, НачПозиция-1) + Сред(ИтоговоеСообщение, КонПозиция+Дельта);
		КонецЕсли;
		// -- rarus Чернавин Г.К 05.10.2020
		Если ТекНомерСтроки <> Строка.НомерСтроки И Строка.ПропускатьЕслиНеЗаполнено Тогда			
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("Заполнено", Истина);
			СтруктураОтбора.Вставить("НомерСтроки", Строка.НомерСтроки);
			НайтиСтроки = ТаблицаРеквизитов.НайтиСтроки(СтруктураОтбора);
			Если НайтиСтроки.Количество() = 0 Тогда
				НачПозиция = СтрНайти(ИтоговоеСообщение, "^^"+(100-Строка.НомерСтроки));
				КонПозиция = СтрНайти(ИтоговоеСообщение, "^^"+(100-Строка.НомерСтроки), НаправлениеПоиска.СКонца);
				Дельта = СтрДлина(""+(100-Строка.НомерСтроки));
				ИтоговоеСообщение = Лев(ИтоговоеСообщение, НачПозиция-1) + Сред(ИтоговоеСообщение, КонПозиция+Дельта+2);
			Иначе
				ИтоговоеСообщение = СтрЗаменить(ИтоговоеСообщение, "^^"+(100-Строка.НомерСтроки), "");
			КонецЕсли;
		КонецЕсли;
		ТекНомерСтроки = Строка.НомерСтроки;
	КонецЦикла;
	// -- rarus Чернавин Г.К 01.10.2020	
	//Удалим лишние символы
	ИтоговоеСообщение = СтрЗаменить(ИтоговоеСообщение,"+","");
	//ИтоговоеСообщение = СтрЗаменить(ИтоговоеСообщение,"\","");
	ИтоговоеСообщение = СтрЗаменить(ИтоговоеСообщение,"{","");
	ИтоговоеСообщение = СтрЗаменить(ИтоговоеСообщение,"}","");
	
	//проверим удаляемые части РДО
	ЕстьУдаляемыеЧасти = Найти(ИтоговоеСообщение,"\");
 	Пока ЕстьУдаляемыеЧасти Цикл
		//проверим, есть ли не заполненные части
		НомерПервого = 0;
		НомерПоследнего = 0;
		Для НомерСимвола = 0 По СтрДлина(ИтоговоеСообщение)  Цикл
			Если Символ(КодСимвола(ИтоговоеСообщение,НомерСимвола))="\" И НомерПервого = 0 Тогда
				НомерПервого = НомерСимвола;
			ИначеЕсли Символ(КодСимвола(ИтоговоеСообщение,НомерСимвола))="\" И НомерПервого <> 0 Тогда 
				НомерПоследнего = НомерСимвола;
				Прервать;
			КонецЕсли; 	
			
			
		КонецЦикла;
		
		ПодстрокаПоиска = Сред(ИтоговоеСообщение,НомерПервого,НомерПоследнего-НомерПервого+1);
		СимволПоказателя = Найти(ПодстрокаПоиска,"[");
		Если СимволПоказателя Тогда
			ИтоговоеСообщение = СтрЗаменить(ИтоговоеСообщение,ПодстрокаПоиска,"");
		Иначе
			ПодстрокаБезСкобок = Сред(ИтоговоеСообщение,НомерПервого+1,НомерПоследнего-НомерПервого-1);
			ИтоговоеСообщение = СтрЗаменить(ИтоговоеСообщение,ПодстрокаПоиска,ПодстрокаБезСкобок);
		КонецЕсли; 
		
		ЕстьУдаляемыеЧасти = Найти(ИтоговоеСообщение,"\");
		
		ЕстьУдаляемыеЧасти = Найти(ИтоговоеСообщение,"\");
	КонецЦикла; 
	
	//выведем сообщение в форму
	Объект.Сообщение = ИтоговоеСообщение; 
КонецПроцедуры

&НаСервере
Функция ПолучитьЗначениеДислокации()
	Если ЗначениеЗаполнено(Объект.ДислокацияПункт) И Не Объект.ДислокацияОсобая Тогда
		Возврат ПреобразоватьЗначениеДляРДО(Объект.ДислокацияПункт);
	ИначеЕсли ЗначениеЗаполнено(Объект.ДислокацияКм) И ЗначениеЗаполнено(Объект.ДислокацияБассейн) И Объект.ДислокацияОсобая Тогда 
		
		//++ rarus isaeva 05.08.2020
		//Возврат Строка(Объект.ДислокацияКм)+"km"+Объект.ДислокацияБассейн.Name;
		Возврат Строка(Формат(Объект.ДислокацияКм, "ЧГ=0"))+"km"+Объект.ДислокацияБассейн.ШифрРДО;
		//-- rarus isaeva 05.08.2020

	ИначеЕсли Объект.ДислокацияОсобая И (ЗначениеЗаполнено(Объект.ДислокацияКоординаты) ИЛИ
		ЗначениеЗаполнено(Объект.КоординатыN))
		Тогда
		// rarus_KloA_04.08.2015 < 
		//Возврат ПолучитьСтрокуКоординат(Объект.ДислокацияКоординаты);
		// ++ rarus Чернавин Г.К 05.11.2020 № 25179
		Если ЭтоМСГФ Тогда
			Объект.ДислокацияКоординаты = ПолучитьСтрокуКоординат(1,Неопределено, Объект.КоординатыN, Объект.КоординатыE,Объект.ПараметрNS, Объект.ПараметрWE);	
		Иначе
			Объект.ДислокацияКоординаты = ПолучитьСтрокуКоординат(1,Неопределено, Объект.КоординатыN, Объект.КоординатыE,Объект.ПараметрNS, Объект.ПараметрWE);
		КонецЕсли;
		// -- rarus Чернавин Г.К 05.11.2020
		Возврат Объект.ДислокацияКоординаты;
		// rarus_KloA_04.08.2015 > 
	КонецЕсли; 
КонецФункции

// ++ rarus Чернавин Г.К 06.11.2020 № 25175
&НаСервере
Функция ПолучитьЗначениеУточнениеМестоположения()
	Если ЗначениеЗаполнено(Объект.УточнениеМестонахожденияСтрока) Тогда
		Возврат ПреобразоватьЗначениеДляРДО(Объект.УточнениеМестонахожденияСтрока);
	ИначеЕсли ЗначениеЗаполнено(Объект.КоординатыУточнениеМестонахожденияN) Тогда		
		Объект.ДислокацияКоординаты = ПолучитьСтрокуКоординат(1,Неопределено, Объект.КоординатыУточнениеМестонахожденияN, Объект.КоординатыУточнениеМестонахожденияE,Объект.ПараметрУточнениеМестонахожденияNS, Объект.ПараметрУточнениеМестонахожденияWE);	
		Возврат Объект.ДислокацияКоординаты;
	КонецЕсли; 
	
	Возврат "";
КонецФункции
// -- rarus Чернавин Г.К 06.11.2020

&НаСервере
Функция ПолучитьЗначениеСтоянок()
	
	СтрокаСтоянок = "";
	//raruskzn AydaFZ 19.11.2019 Задача № 17711{
	МодельРДО = Объект.Судно.Проект.МодельРДО;
	ШаблонСтоянок = МодельРДО.ШаблонСтоянок;
	
	//raruskzn AydaFZ 19.11.2019}
	
	Стоянки = Объект.Стоянки.Выгрузить();
	
	Для каждого Строка Из Объект.Стоянки Цикл
		Если НЕ Строка.ВидСтоянки.Стоянка Тогда
			Продолжить;
		Иначе
			ТипПункта = "";
			Пункт = "";
			Если ТипЗнч(Строка.ПунктСтоянки) = Тип("СправочникСсылка.vftПунктыСледования") Тогда
				ТипПункта = "0";
				Пункт = ПреобразоватьЗначениеДляРДО(Строка.ПунктСтоянки);
			ИначеЕсли ТипЗнч(Строка.ПунктСтоянки) = Тип("Строка") Тогда 
				Если Найти(Строка.ПунктСтоянки, "'") Тогда //координаты
					ТипПункта = "1";
					Пункт = ПолучитьСтрокуКоординат(0, Строка.ПунктСтоянки,Неопределено,Неопределено,Неопределено,Неопределено);
				Иначе//километр
					ТипПункта = "2";
					Пункт = СтрЗаменить(Строка.ПунктСтоянки,"km","");
				КонецЕсли; 
			КонецЕсли;
			
			//raruskzn AydaFZ 19.11.2019 Задача № 17711{
			
			СтрокаСтоянок = СтрокаСтоянок + ШаблонСтоянок;
			
			Для каждого СтрокаКолонки Из Стоянки.Колонки Цикл
				
				Если СтрокаКолонки.Имя = "ПунктСтоянки" Тогда
					
					НайденнаяЗначение = Пункт;
					
				ИначеЕсли СтрокаКолонки.Имя = "Примечание"  Тогда 
					
					НайденнаяЗначение = vftОбщегоНазначенияКлиентСервер.СтрокаЛатиницей(Строка.Примечание);
					
				ИначеЕсли СтрокаКолонки.Имя = "ВидСтоянки"  Тогда 
					
					//++ rarus isaeva 05.03.2021
					//НайденнаяЗначение = СокрЛП(Строка[СтрокаКолонки.Имя].Код);
					Если ЭтоМСГФ тогда
						НайденнаяЗначение = СокрЛП(Строка[СтрокаКолонки.Имя].КодОперации);
					Иначе
						НайденнаяЗначение = СокрЛП(Строка[СтрокаКолонки.Имя].Код);
					КонецЕсли;
					//-- rarus isaeva 05.03.2021
					
				ИначеЕсли Тип(СтрокаКолонки.ТипЗначения) = Тип("Дата") Тогда  
					
					НайденнаяЗначение = Формат(Строка[СтрокаКолонки.Имя],"ДФ=ЧЧмм" );
					
				Иначе
					
					НайденнаяЗначение = Строка[СтрокаКолонки.Имя];
					
				КонецЕсли;
				
				//++ rarus isaeva 12.03.2021 Инцидент ВПIT-0021033
				//СтрокаСтоянок = СтрЗаменить(СтрокаСтоянок, "[" + СтрокаКолонки.Имя + "]", НайденнаяЗначение);  
				Если  ЭтоМСГФ И СтрокаКолонки.Имя = "Время" И НайденнаяЗначение = 0 Тогда
					СтрокаСтоянок = СтрЗаменить(СтрокаСтоянок, "-"+"[" + СтрокаКолонки.Имя + "]", "");  
				Иначе
					СтрокаСтоянок = СтрЗаменить(СтрокаСтоянок, "[" + СтрокаКолонки.Имя + "]", НайденнаяЗначение);  
				КонецЕсли;
				//-- rarus isaeva 12.03.2021 Инцидент ВПIT-0021033

			КонецЦикла;
			
			СтрокаСтоянок = СтрЗаменить(СтрокаСтоянок, "[ТипПункта]", ТипПункта); 
			
			//СтрокаСтоянокТест = ТипПункта+":" + Пункт + ":" + Формат(Строка.Начало,"ДФ=ЧЧMM") 
			//				+ Формат(Строка.Окончание,"ДФ=ЧЧMM" ) + ":" + СокрЛП(Строка.ВидСтоянки.Код) + ":" 
			//				+ vftОбщегоНазначенияКлиентСервер.СтрокаЛатиницей(Строка.Примечание) + "|";
			
			//raruskzn AydaFZ 19.11.2019}
			
		КонецЕсли; 	
	КонецЦикла;
	
	// ++ rarus Чернавин Г.К 12.05.2020
	СтрокаСтоянокS = "";
	Если Объект.Шаблон.ПриоритетныйВидОперации = "S" Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	vftРДО.Шаблон КАК Шаблон
		|ИЗ
		|	Документ.vftРДО КАК vftРДО
		|ГДЕ
		|	vftРДО.Судно = &Судно
		|	И vftРДО.Шаблон.ПриоритетныйВидОперации <> ""M""
		//|	И vftРДО.СтатусОтправления = ИСТИНА
		|	И vftРДО.ПометкаУдаления = ЛОЖЬ
		|	И vftРДО.Ссылка <> &Ссылка
		|	И vftРДО.Дата < &Дата
		|
		|УПОРЯДОЧИТЬ ПО
		|	vftРДО.Дата УБЫВ";
		Запрос.УстановитьПараметр("Судно", Объект.Судно);
		Запрос.УстановитьПараметр("Дата", Объект.Дата);
		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаЗапроса = РезультатЗапроса.Выбрать();
		Если РезультатЗапроса.Пустой() 
			ИЛИ (ВыборкаЗапроса.Следующий() И ВыборкаЗапроса.Шаблон <> Объект.Шаблон) Тогда
			
			СтрокаСтоянокS = Объект.ВидОперации.КодОперации + " ";
			
		КонецЕсли;
	КонецЕсли;
	Возврат СтрокаСтоянок + СтрокаСтоянокS; 
	// -- rarus Чернавин Г.К 12.05.2020
	
		
КонецФункции

&НаСервере
Функция ПолучитьСтрокуКоординат(ВариантОбработки, Знач СтрокаКоординат, Знач КоординатыN, Знач КоординатыE, Знач ПараметрNS, Знач ПараметрWE)
	
	// rarus_KloA_04.08.2015 < Изменено в релизе 1.0.0.20
	Если ВариантОбработки = 0 Тогда
		ЕстьСимволS = Найти(ВРЕГ(СтрокаКоординат),"S");
		ЕстьСимволW = Найти(ВРЕГ(СтрокаКоординат),"W");
		
		СимволТочки = Найти(СтрокаКоординат,".");
		СимволПробел = Найти(СтрокаКоординат," ");
		СтрокаЗамены = Сред(СтрокаКоординат,СимволТочки, СимволПробел-СимволТочки);
		СтрокаКоординат = СтрЗаменить(СтрокаКоординат,СтрокаЗамены,"");
		СтрокаКоординат = СтрЗаменить(СтрокаКоординат," ", ?(ЕстьСимволS,"S/","N/"));
		СтрокаКоординат = СтрЗаменить(СтрокаКоординат,"'", "");
		СимволТочки = Найти(СтрокаКоординат,".");
		СтрокаЗамены = Сред(СтрокаКоординат,СимволТочки, СтрДлина(СтрокаКоординат)+1-СимволТочки);
		СтрокаКоординат = СтрЗаменить(СтрокаКоординат,СтрокаЗамены,?(ЕстьСимволW,"W","E"));
	Иначе
		// ++ rarus Чернавин Г.К 12.02.2021  № 27219 добавим лидирующие нули
		//Если ЭтоННФ Тогда
		//	ДлиннаЕ = 3;
		//Иначе
		//	ДлиннаЕ = 4;
		//КонецЕсли;
		ДлиннаЕ = 4;
		КоординатыE = Формат(КоординатыE,"ЧГ=0");
		Если СтрДлина(КоординатыE) < ДлиннаЕ 
			//++ rarus isaeva 06.04.2021
			//В текст РДО должно попадать "0000E" вместо "Е"
			//И СтрДлина(КоординатыE) > 0 
			//-- rarus isaeva 06.04.2021
			Тогда
			Пока СтрДлина(КоординатыE) < ДлиннаЕ Цикл 
				КоординатыE = "0" + КоординатыE;	
			КонецЦикла;
		КонецЕсли;
		КоординатыN = Формат(КоординатыN,"ЧГ=0");
		Если СтрДлина(КоординатыN) < 4 И СтрДлина(КоординатыN) > 0 Тогда
			Пока СтрДлина(КоординатыN) < 4 Цикл 
				КоординатыN = "0" + КоординатыN;	
			КонецЦикла;
		КонецЕсли;
		// -- rarus Чернавин Г.К 12.02.2021 
		Если ЭтоННФ Тогда 
			СтрокаКоординат = Формат(КоординатыN,"ЧГ=0")+?(ПараметрNS=0, "N/0", "S/0")+КоординатыE+?(ПараметрWE=0, "E", "W");	
		Иначе
			Если ЭтоМСГФ Тогда
				СтрокаКоординат = Формат(КоординатыN,"ЧГ=0")+?(ПараметрNS=0, "N", "S")+" "+КоординатыE+?(ПараметрWE=0, "E", "W");
			Иначе
				СтрокаКоординат = Формат(КоординатыN,"ЧГ=0")+" "+КоординатыE;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли; 
	
	
	// rarus_KloA_04.08.2015 > 
	
	Возврат СтрокаКоординат;
КонецФункции

&НаСервере
Функция ПреобразоватьЗначениеДляРДО(ТекЗначение)
	Если ТипЗнч(ТекЗначение) = Тип("Строка") Тогда
		Возврат СокрЛП(vftОбщегоНазначенияКлиентСервер.СтрокаЛатиницей(ТекЗначение));	
	ИначеЕсли ТипЗнч(ТекЗначение) = Тип("Дата") Тогда 
		Если ЗначениеЗаполнено(ТекЗначение) Тогда
			
			// ++ rarus Чернавин Г.К 08.04.2020
			МодельРДО = Объект.Шаблон.МодельРДО;
			КоличествоСимволовВДате = МодельРДО.КоличествоСимволовВДате;
			ФорматДаты =  "ДФ=ddMMHHmm";
			ФорматДаты =  Сред(ФорматДаты, 1, КоличествоСимволовВДате+3);
			
			ДатаВозврат = Формат(ТекЗначение, ФорматДаты);
			ПриоритетныйВидОперации = Объект.Шаблон.ПриоритетныйВидОперации;
			Если Не ЭтоННФ 
				//++ rarus isaeva 26.01.2021
				И НЕ ЭтоМСГФ
				//-- rarus isaeva 26.01.2021
				Тогда
				Если ПриоритетныйВидОперации = "S" Тогда
					ДатаВозврат = ПолучитьТекДатуДляПутиS(ТекЗначение, ФорматДаты);
				КонецЕсли;
				Если ПриоритетныйВидОперации = "P" Тогда
					ДатаВозврат = ПолучитьТекДатуДляПутиПорта(ТекЗначение, ФорматДаты);
				КонецЕсли;
			КонецЕсли;			
			
			Возврат ДатаВозврат;
			// -- rarus Чернавин Г.К 08.04.2020
		Иначе
			// ++ rarus Чернавин Г.К 13.11.2020 № 25265
			Возврат "";
			// -- rarus Чернавин Г.К 13.11.2020
		КонецЕсли; 
		
	ИначеЕсли ТипЗнч(ТекЗначение) = Тип("СправочникСсылка.vftПунктыСледования") Тогда 
		//++ rarus isaeva 02.12.2020
		//Возврат ТекЗначение.ШифрРДО;
		ШифрРДО_ПунктаСледования = ТекЗначение.ШифрРДО;
		Если ЗначениеЗаполнено(ШифрРДО_ПунктаСледования) Тогда
			Возврат ШифрРДО_ПунктаСледования;
		Иначе
			Возврат СокрЛП(vftОбщегоНазначенияКлиентСервер.СтрокаЛатиницей(ТекЗначение.Наименование));
		КонецЕсли;
		//-- rarus isaeva 02.12.2020

	ИначеЕсли ТипЗнч(ТекЗначение) = Тип("СправочникСсылка.vftГрузы") Тогда 
		Возврат ТекЗначение.ШифрРДО;
	ИначеЕсли ТипЗнч(ТекЗначение) = Тип("СправочникСсылка.vftТиповыеОперации") Тогда 
		Если ЗначениеЗаполнено(Объект.Шаблон.ПриоритетныйВидОперации) И ЭтоННФ Тогда
			Возврат Объект.Шаблон.ПриоритетныйВидОперации
		Иначе
			Если ТекЗначение.Стоянка И Не СтоянкаЗакрыта Тогда
				
				//raruskzn AydaFZ 21.11.2019{
				
				Если ЕстьРДОПослеОткрытияСтоянки Тогда
					
					Возврат "";
					
				Иначе
					
					Возврат Объект.Судно.Проект.МодельРДО.СоответствиеОткрытойСтоянки.КодОперации;
					
				КонецЕсли;
				//Возврат "S";
				
			ИначеЕсли ТекЗначение.Стоянка И СтоянкаЗакрыта Тогда 
				
				Если Объект.Шаблон.ОчисткаВидаОперации Тогда
					
					Возврат "";
					
				Иначе
					
					Возврат "SL"; 
					
				КонецЕсли;
				//raruskzn AydaFZ 21.11.2019}
				
			Иначе
				Если ЭтоМСГФ Тогда 
					Возврат СокрЛП(ТекЗначение.КодОперации);
				Иначе
					Возврат СокрЛП(ТекЗначение.Код);
				КонецЕсли;				
			КонецЕсли; 
			
			
		КонецЕсли; 
	ИначеЕсли ТипЗнч(ТекЗначение) = Тип("СправочникСсылка.vftШаблоныРДО") Тогда 
		Возврат СокрЛП(ТекЗначение.КодШаблона);
	ИначеЕсли ТипЗнч(ТекЗначение) = Тип("Число") Тогда 
		Возврат Формат(ТекЗначение,"ЧН=; ЧГ=0");
	// ++ rarus Чернавин Г.К 06.11.2020 № 25177
	ИначеЕсли ТипЗнч(ТекЗначение) = Тип("ПеречислениеСсылка.рарусНаправленияВетра") Тогда
		Возврат Строка(ТекЗначение);
	// -- rarus Чернавин Г.К 06.11.2020
	// ++ rarus Чернавин Г.К 06.11.2020 № 25173
	ИначеЕсли ТипЗнч(ТекЗначение) = Тип("ПеречислениеСсылка.рарусЕдиницыИзмеренияГруза") Тогда
		Возврат Строка(ТекЗначение);	
	// -- rarus Чернавин Г.К 06.11.2020
	// ++ rarus Чернавин Г.К 03.12.2020 № 25587
	//ИначеЕсли ТипЗнч(ТекЗначение) = Тип("СправочникСсылка.ЕдиницыИзмерения") Тогда
	//	Возврат Строка(ТекЗначение.ШифрРДО);
	// -- rarus Чернавин Г.К 03.12.2020
	
	// ++ rarus isaeva 14.12.2020
	ИначеЕсли ТипЗнч(ТекЗначение) = Тип("СправочникСсылка.УпаковкиЕдиницыИзмерения") Тогда
	Возврат ТекЗначение.ШифрРДО;	
	// -- rarus isaeva 14.12.2020
	
	Иначе 
	Возврат ТекЗначение;
	КонецЕсли; 
КонецФункции

// ++ rarus Чернавин Г.К 10.04.2020
&НаСервере
Функция ПолучитьТекДатуДляПутиS(ТекЗначение, ФорматДаты)
	
	ДатаВозврат = "S "+Формат(ТекЗначение, ФорматДаты);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 100
	               |	vftРДО.Дата КАК Дата,
	               |	vftРДО.Шаблон КАК Шаблон
	               |ИЗ
	               |	Документ.vftРДО КАК vftРДО
	               |ГДЕ
	               |	vftРДО.Судно = &Судно
	               |	И vftРДО.Шаблон.ПриоритетныйВидОперации <> ""M""
				   //|	И vftРДО.СтатусОтправления = ИСТИНА
	               |	И vftРДО.ПометкаУдаления = ЛОЖЬ
	               |	И vftРДО.Ссылка <> &Ссылка
	               |	И vftРДО.Дата < &Дата
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	vftРДО.Дата УБЫВ";
	Запрос.УстановитьПараметр("Судно", Объект.Судно);
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаЗапроса = РезультатЗапроса.Выбрать();
	Пока ВыборкаЗапроса.Следующий() Цикл
		Если ВыборкаЗапроса.Шаблон = Объект.Шаблон Тогда
			ДатаВозврат = Формат(ВыборкаЗапроса.Дата, ФорматДаты);
		Иначе
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ДатаВозврат;
	
КонецФункции

&НаСервере
Функция ПолучитьТекДатуДляПутиПорта(ТекЗначение, ФорматДаты)
	
	ДатаВозврат = Формат(ТекЗначение, ФорматДаты);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 100
	               |	vftРДО.Дата КАК Дата,
	               |	vftРДО.Шаблон КАК Шаблон,
	               |	vftРДО.ВидОперации КАК ВидОперации
	               |ИЗ
	               |	Документ.vftРДО КАК vftРДО
	               |ГДЕ
	               |	vftРДО.Судно = &Судно
	               |	И vftРДО.Шаблон.ПриоритетныйВидОперации <> ""M""
				   //|	И vftРДО.СтатусОтправления = ИСТИНА
	               |	И vftРДО.ПометкаУдаления = ЛОЖЬ
	               |	И vftРДО.Ссылка <> &Ссылка
	               |	И vftРДО.Дата < &Дата
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	vftРДО.Дата УБЫВ";
	Запрос.УстановитьПараметр("Судно", Объект.Судно);
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаЗапроса = РезультатЗапроса.Выбрать();
	Пока ВыборкаЗапроса.Следующий() Цикл
		Если ВыборкаЗапроса.Шаблон = Объект.Шаблон И ВыборкаЗапроса.ВидОперации = Объект.ВидОперации Тогда
			ДатаВозврат = Формат(ВыборкаЗапроса.Дата, ФорматДаты);
		Иначе
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ДатаВозврат;
	
КонецФункции
// -- rarus Чернавин Г.К 10.04.2020

&НаКлиенте
Процедура Заполнить(Команда)
	
	//++ rarus isaeva 13.11.2020
	//ЗаполнитьНаСервере();
	ЗаполнитьНаСервере(Ложь, Истина);
	//-- rarus isaeva 13.11.2020
	
	Модифицированность = Истина;
	СформироватьТекстСообщения();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере(ТолькоСтоянки = Ложь, ЗаполнятьДислокацию = Ложь)
	// ++ rarus Чернавин Г.К 07.04.2020
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	vftРейсПункты.Ссылка.Судно КАК Судно,
	               |	vftРейсПункты.Ссылка.Ссылка КАК Рейс,
	               |	vftРейсПункты.Пункт КАК Пункт,
	               |	vftРейсПункты.ПричинаСтоянки КАК ВидОперации,
	               |	vftРейсПункты.Приход КАК Начало,
	               |	vftРейсПункты.Отход КАК Окончание,
	               |	vftРейсПункты.Примечание КАК Примечание,
	               |	vftРейсПункты.РасстояниеПлан КАК ПройденноеРасстояниеНорма,
	               |	vftРейсПункты.РасстояниеФакт КАК ПройденноеРасстояниеФакт,
	               |	vftРейсПункты.ХодовоеВремя КАК ХодовоеВремяПлан,
	               |	vftРейсПункты.ИД КАК ИДСтрокиРейса,
	               |	vftРейсПункты.ВремяСтоянки КАК ВремяСтоянки,
	               |	vftРейсПункты.ХодовоеВремяПлан КАК ХодовоеВремяНорма,
	               |	vftРейсПункты.Координаты КАК Координаты,
	               |	vftРейсПункты.КоординатыN КАК КоординатыN,
	               |	vftРейсПункты.КоординатыE КАК КоординатыE,
	               |	vftРейсПункты.ПараметрNS КАК ПараметрNS,
	               |	vftРейсПункты.ПараметрWE КАК ПараметрWE,
	               |	vftРейсПункты.РасстояниеФакт КАК РасстояниеФакт
	               |ИЗ
	               |	РегистрСведений.рарусОтправленныеРейсыРДО КАК рарусОтправленныеРейсыРДО
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.vftРейс.Пункты КАК vftРейсПункты
	               |		ПО рарусОтправленныеРейсыРДО.Рейс = vftРейсПункты.Ссылка
	               |			И (рарусОтправленныеРейсыРДО.Отправлено = ЛОЖЬ)
				   |			И (рарусОтправленныеРейсыРДО.Судно = &Судно)
				   |			И (vftРейсПункты.Приход <= &Дата)
				   //++ rarus isaeva 10.03.2021
				   |			И (vftРейсПункты.Приход >= &ДатаПоследнейОтправленнойСтроки)
				   //--rarus isaeva 10.03.2021
				   |			И рарусОтправленныеРейсыРДО.ИДСтрокиРейса = vftРейсПункты.ИД";
				   
				  			   
	 Запрос.УстановитьПараметр("Судно", Объект.Судно);
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	
	//++ rarus isaeva 10.03.2021
	ДатаПоследнейОтправленнойСтроки = ДатаПоследнейОтправленнойСтроки();
	Запрос.УстановитьПараметр("ДатаПоследнейОтправленнойСтроки", ДатаПоследнейОтправленнойСтроки);
	//--rarus isaeva 10.03.2021

	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаЗаписейРС = РезультатЗапроса.Выбрать();
	// -- rarus Чернавин Г.К 07.04.2020
	ТекущийНаборЗаписей.Очистить();
	Пока ВыборкаЗаписейРС.Следующий() Цикл
		ДобЗапись = ТекущийНаборЗаписей.Добавить();	
		ЗаполнитьЗначенияСвойств(ДобЗапись,ВыборкаЗаписейРС);
	КонецЦикла;
	
	
	ТаблицаНеотправленных = ТекущийНаборЗаписей.Выгрузить();
	
	//Rarus-NN_Ikor_19.11.14 исключение ошибки выхода за границы массива {
	Если ТаблицаНеотправленных.Количество() = 0 Тогда 
		Сообщить("Путевой журнал не содержит данных для автоматического заполнения РДО");
		Возврат;
	КонецЕсли;
	//Rarus-NN_Ikor_19.11.14 исключение ошибки выхода за границы массива }
	
	
	ТаблицаНеотправленных.Сортировать("Начало");
	ПоследняяЗаписьЖурнала = ТаблицаНеотправленных[ТаблицаНеотправленных.Количество()-1];
	Объект.Рейс = ПоследняяЗаписьЖурнала.Рейс;
	Попытка
		КорректнаяЗапись = ТаблицаНеотправленных[ТаблицаНеотправленных.Количество()-2];
	Исключение
		КорректнаяЗапись = Неопределено;
	КонецПопытки; 
	
	//????
	Если Не ТолькоСтоянки Тогда
		//Вид операции
		Если ПоследняяЗаписьЖурнала.ВидОперации.НеУчитыватьПослеСтоянки И КорректнаяЗапись<>Неопределено И ЗначениеЗаполнено(КорректнаяЗапись.Окончание) Тогда
			Объект.ВидОперации = КорректнаяЗапись.ВидОперации;
			СтоянкаЗакрыта = Истина;
		Иначе
			Объект.ВидОперации = ПоследняяЗаписьЖурнала.ВидОперации;
			Если ПоследняяЗаписьЖурнала.ВидОперации.Стоянка 
				// ++ rarus kloa 26.02.2018  
				И ЗначениеЗаполнено(ПоследняяЗаписьЖурнала.ВидОперации)
				// -- rarus kloa 26.02.2018 
				Тогда
				СтоянкаЗакрыта = Ложь;
			Иначе
				СтоянкаЗакрыта = Истина;	
			КонецЕсли; 
			
		КонецЕсли; 
	
	КонецЕсли;
	
	Если ЗаполнятьДислокацию Тогда
		ЗаполнитьДислокациюПоЗаписи(ПоследняяЗаписьЖурнала);
	КонецЕсли; 
	
	//++ rarus isaeva 14.11.2020
	//Заполняем Расстояние по ПЖ
	Если ЭтоННФ Тогда
		Объект.ПройденноеРасстояниеОтПунктаОбработки = ТаблицаНеотправленных.Итог("РасстояниеФакт");
	КонецЕсли;
	//-- rarus isaeva 14.11.2020
	
	//
	//Стоянки
	ЕстьСтоянки = vftШаблоныРДО.ЕстьРеквизитВШаблоне(Объект.Шаблон, "Стоянка");
	Если ЕстьСтоянки Тогда
		Объект.Стоянки.Очистить();
		Для каждого ЗаписьЖурнала Из ТаблицаНеотправленных Цикл
			Если ЗаписьЖурнала.ВидОперации.Стоянка Тогда
				НоваяСтоянка = Объект.Стоянки.Добавить();
				// ++ rarus Чернавин Г.К 18.09.2020
				Если ЗначениеЗаполнено(ЗаписьЖурнала.ВидОперации.ОперацияДляРДО) Тогда
	                НоваяСтоянка.ВидСтоянки = ЗаписьЖурнала.ВидОперации.ОперацияДляРДО;
				Иначе
					НоваяСтоянка.ВидСтоянки = ЗаписьЖурнала.ВидОперации;
				КонецЕсли;
				// -- rarus Чернавин Г.К 18.09.2020
				НоваяСтоянка.Начало =ЗаписьЖурнала.Начало;
				Если ЗначениеЗаполнено(ЗаписьЖурнала.Окончание) И ЗаписьЖурнала.Окончание <= Объект.Дата Тогда			
					НоваяСтоянка.Окончание = ЗаписьЖурнала.Окончание;
				КонецЕсли;
				Если ЗначениеЗаполнено(НоваяСтоянка.Окончание) Тогда
					НоваяСтоянка.Время = (ЗаписьЖурнала.Окончание-ЗаписьЖурнала.Начало)/3600;
				КонецЕсли; 
				//НоваяСтоянка.ПунктСтоянки = ОпределитьПунктСтоянки(ЗаписьЖурнала.Пункт, ЗаписьЖурнала.Координаты);
				
				//++ rarus isaeva 16.02.2021
				//НоваяСтоянка.ПунктСтоянки = ЗаписьЖурнала.Пункт;
				НоваяСтоянка.ПунктСтоянки = ?(ЗначениеЗаполнено(ЗаписьЖурнала.Пункт), ЗаписьЖурнала.Пункт, ЗаписьЖурнала.Координаты);
				//-- rarus isaeva 16.02.2021

				НоваяСтоянка.Примечание = ПреобразоватьЗначениеДляРДО(ЗаписьЖурнала.ДопСведения);
			КонецЕсли; 
		КонецЦикла;	
		
		//raruskzn AydaFZ 22.11.2019 Задача № 17711{
		Количество = ТаблицаНеотправленных.Количество();
		ЕстьРДОПослеОткрытияСтоянки = Ложь;
		
		Если Количество > 0 Тогда 
			
			ПоследнаяСтрока = ТаблицаНеотправленных [Количество - 1];
			
			Если ПоследнаяСтрока.ВидОперации.Стоянка 
				И Не ЗначениеЗаполнено(ПоследнаяСтрока.Окончание)  Тогда
				
				ЕстьРДОПослеОткрытияСтоянки = ЕстьРДОПослеОткрытияСтоянки(ПоследнаяСтрока.Начало);		
				
			КонецЕсли;
			
		КонецЕсли; 
		
		ДатаНачалоСтоянки = ?(ЕстьРДОПослеОткрытияСтоянки, ПоследнаяСтрока.Начало, Объект.Дата);
		//raruskzn AydaFZ 22.11.2019}
		
	КонецЕсли; 
	
	
КонецПроцедуры

//raruskzn AydaFZ 25.11.2019{

&НаСервере
Функция ДатаПоследнейОтправленнойСтроки()
	
	ДатаПоследнейОтправленнойСтроки = '00010101';
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	МАКСИМУМ(vftРейсПункты.Отход) КАК ДатаПоследнейОтправленнойСтроки,
	|	vftРейсПункты.Ссылка.Судно КАК Судно
	|ИЗ
	|	РегистрСведений.рарусОтправленныеРейсыРДО КАК рарусОтправленныеРейсыРДО
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.vftРейс.Пункты КАК vftРейсПункты
	|		ПО рарусОтправленныеРейсыРДО.Рейс = vftРейсПункты.Ссылка
	|			И (рарусОтправленныеРейсыРДО.Отправлено = ИСТИНА)
	|			И (рарусОтправленныеРейсыРДО.Судно = &Судно)
	|			И (vftРейсПункты.Приход <= &Дата)
	|			И рарусОтправленныеРейсыРДО.ИДСтрокиРейса = vftРейсПункты.ИД
	|
	|СГРУППИРОВАТЬ ПО
	|	vftРейсПункты.Ссылка.Судно";
	
	Запрос.УстановитьПараметр("Судно", Объект.Судно);
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() ТОгда
		Выборка= РезультатЗапроса.Выбрать();
		Выборка.Следующий(); 
		ДатаПоследнейОтправленнойСтроки = Выборка.ДатаПоследнейОтправленнойСтроки;
		ВОзврат ДатаПоследнейОтправленнойСтроки;
	КонецЕсли;
	Возврат ДатаПоследнейОтправленнойСтроки;
КонецФункции

	&НаСервере
Функция ЕстьРДОПослеОткрытияСтоянки(ДатаНачало)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	vftРДО.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.vftРДО КАК vftРДО
	|ГДЕ
	|	vftРДО.Судно = &Судно
	|	И vftРДО.Дата МЕЖДУ &ДатаНачало И &ДатаДокумента
	|	И НЕ vftРДО.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("ДатаНачало", ДатаНачало);
	Запрос.УстановитьПараметр("ДатаДокумента", Объект.Дата);
	
	Запрос.УстановитьПараметр("Судно", Объект.Судно);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка= РезультатЗапроса.Выбрать();
	
	Результат = ?(Выборка.Следующий(), Истина, Ложь); 
	
	Возврат Результат;
	
КонецФункции//raruskzn AydaFZ 25.11.2019}

&НаСервере
Функция ЗаполнитьДислокациюПоЗаписи(Запись)
	Если ЗначениеЗаполнено(Запись.Пункт) Тогда
		Объект.ДислокацияПункт = Запись.Пункт;	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Запись.Координаты) Тогда
		//++ rarus isaeva 14.11.2020
		//Объект.ДислокацияКоординаты = Запись.Координаты;
		Объект.ДислокацияОсобая = Истина;
		Объект.КоординатыN = Число(СтрЗаменить(Лев(Запись.КоординатыN, 5), "'", ""));
		Объект.ПараметрNS = Запись.ПараметрNS;
		Объект.КоординатыE = Число(СтрЗаменить(Лев(Запись.КоординатыE, 5), "'", ""));
		Объект.ПараметрWE = Запись.ПараметрWE;
		
		Если ЭтоННФ Тогда
			Элементы.ДислокацияБассейн.Видимость = Объект.ДислокацияОсобая;
			//Элементы.ДислокацияКоординаты.Видимость = Объект.ДислокацияОсобая;
			Элементы.ДислокацияКм.Видимость = Объект.ДислокацияОсобая;
		КонецЕсли;
		
		// rarus_KloA_04.08.2015 < 
		Элементы.ГруппаКоординаты.Видимость = Объект.ДислокацияОсобая;
		// rarus_KloA_04.08.2015 > 
		// ++ rarus Камаев П.В. 18.02.2021 Задача № 27359
		Элементы.ДислокацияПункт.Видимость = Не Объект.ДислокацияОсобая;
		// -- rarus Камаев П.В. 18.02.2021
		//-- rarus isaeva 14.11.2020

	КонецЕсли;
КонецФункции

&НаСервере
Функция ОпределитьПунктСтоянки(Пункт, Координаты)
	Если ЗначениеЗаполнено(Пункт) Тогда
		Возврат Пункт;
	ИначеЕсли ЗначениеЗаполнено(Координаты) Тогда
		Возврат ПолучитьСтрокуКоординат(0,Координаты,Неопределено,Неопределено,Неопределено,Неопределено);
	КонецЕсли; 
КонецФункции


#Область ПроцедурыИзмененияРеквизитов

&НаКлиенте
Процедура ПриИзмененииЭлементаРДО(Элемент)
	
	СформироватьТекстСообщения();
	УстановитьОтметкуПоля(Элемент.Имя);
	//raruskzn AydaFZ 19.11.2019 Задача № 17711{
	УстановитьОбязательныеРеквизиты();
	//raruskzn AydaFZ 19.11.2019}
	
	// ++ rarus Чернавин Г.К 19.11.2020
	ПодсказкиПоказателей();
	// -- rarus Чернавин Г.К 19.11.2020

	
	// ++ rarus Чернавин Г.К 03.12.2020 № 25587
	Если Элемент.Имя = "ГрузыГруз" Тогда
		ТекущиеДанные = Элементы.Грузы.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			ТекущиеДанные.ЕдиницаИзмерения = ПолучитьЗначениеРеквизита(ТекущиеДанные.Груз, "ЕдиницаИзмерения");
		КонецЕсли;
	КонецЕсли;
	// -- rarus Чернавин Г.К 03.12.2020
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьДислокацию(ИмяЭлемента)
	//Если ИмяЭлемента = "ДислокацияПункт" ИЛИ ИмяЭлемента = "ДислокацияБассейн" Тогда
	//	ПроверитьПараметрыДислокацииОтносительноЖурнала();	
	//КонецЕсли; 
	
КонецПроцедуры


&НаСервере
Процедура УстановитьОтметкуПоля(ИмяПоля)
	ШаблонОбъект = Объект.Шаблон.ПолучитьОбъект();
	СписокОбязательныхРеквизитовПоШаблону = ШаблонОбъект.ПолучитьСписокОбязательныхРеквизитовДляФормыДокумента(Объект.Дата);//raruskzn AydaFZ 18.11.2019 Задача № 17711
	Если СписокОбязательныхРеквизитовПоШаблону<>Неопределено И СписокОбязательныхРеквизитовПоШаблону.Найти(ИмяПоля)<>Неопределено Тогда
		ИмяДанных = Элементы[СокрЛП(ИмяПоля)].ПутьКДанным;
		ИмяДанных = СтрЗаменить(ИмяДанных,"Объект.", "");
		Если ЗначениеЗаполнено(Объект[СокрЛП(ИмяДанных)]) Тогда
			Элементы[СокрЛП(ИмяПоля)].ОтметкаНезаполненного = Ложь;
			Элементы[СокрЛП(ИмяПоля)].ЦветФона = WebЦвета.Белый;
		Иначе
			Элементы[СокрЛП(ИмяПоля)].ОтметкаНезаполненного = Истина;
			Элементы[СокрЛП(ИмяПоля)].ЦветФона = WebЦвета.СветлоЗолотистый; 
		КонецЕсли;	
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ДислокацияПунктОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ПроверитьПараметрыДислокацииОтносительноЖурнала(СтандартнаяОбработка, ВыбранноеЗначение);		
КонецПроцедуры


#КонецОбласти

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	// ++ rarus Чернавин Г.К 28.01.2021 ВПIT-0018741
	ВыводитьСообщения = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыЗаписи, "ВыводитьСообщения", Ложь);
	
	Если ВыводитьСообщения Тогда
		ПроверитьЗаполнениеФормы(Отказ);
	КонецЕсли;
	// -- rarus Чернавин Г.К 28.01.2021
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗаполнениеФормы(Отказ)
	// ++ rarus Чернавин Г.К 28.01.2021  ВПIT-0018741
	ОчиститьСообщения();
	// -- rarus Чернавин Г.К 28.01.2021
	Для каждого Элемент Из Элементы Цикл
		// ++ rarus Камаев П.В. 12.02.2021 Задача № 27213
		// Если ТипЗнч(Элемент) = Тип("ПолеФормы") И Элемент.Вид = ВидПоляФормы.ПолеВвода И Элемент.ОтметкаНезаполненного = Истина Тогда
		Если (ТипЗнч(Элемент) = Тип("ПолеФормы") И Элемент.Вид = ВидПоляФормы.ПолеВвода ИЛИ ТипЗнч(Элемент) = Тип("ТаблицаФормы"))
			И Элемент.ОтметкаНезаполненного = Истина Тогда
			// -- rarus Камаев П.В. 12.02.2021
			
			Сообщение = Новый СообщениеПользователю();
			ИмяЭлемента = ?(ЗначениеЗаполнено(Элемент.Заголовок), Элемент.Заголовок, Элемент.Имя);
			Сообщение.Текст = "Заполните поле:"+ИмяЭлемента;
			Сообщение.Поле = Элемент.Имя;
			Сообщение.ПутьКДанным = "Объект";
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры


Процедура ПроверитьПараметрыДислокацииОтносительноЖурнала(СтандартнаяОбработка, ВыбранноеЗначение)
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.vftПунктыСледования") И ЗначениеЗаполнено(ВыбранноеЗначение) И ВыбранноеЗначение.РекаМоре = Перечисления.vftРекаМоре.Река Тогда
		// ++ rarus Камаев П.В. 03.04.2020 Задача № 20785
		//МассивсмежныхПунктов = РегистрыСведений.vftСвязьПунктовСледования.ПолучитьМассивСмежныхПунктов(ВыбранноеЗначение);
		МассивсмежныхПунктов = РегистрыСведений.vftСвязьПунктовСледования.ПолучитьМассивСмежныхПунктов(ВыбранноеЗначение, Объект.Судно);
		// -- rarus Камаев П.В. 03.04.2020
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.vftБассейны") И ЗначениеЗаполнено(Объект.ДислокацияКм) И ЗначениеЗаполнено(ВыбранноеЗначение) Тогда 
		БлижайшиеПункты = vftШаблоныРДО.ПолучитьБлижайшийПунктНаРеке(ВыбранноеЗначение, Объект.ДислокацияКм);
		Если БлижайшиеПункты<>Неопределено Тогда
			// ++ rarus Камаев П.В. 03.04.2020 Задача № 20785
			//МассивсмежныхПунктов = РегистрыСведений.vftСвязьПунктовСледования.ПолучитьМассивСмежныхПунктов(БлижайшиеПункты);
			МассивсмежныхПунктов = РегистрыСведений.vftСвязьПунктовСледования.ПолучитьМассивСмежныхПунктов(БлижайшиеПункты, Объект.Судно);
			// -- rarus Камаев П.В. 03.04.2020
			МассивсмежныхПунктов.Добавить(БлижайшиеПункты);
		КонецЕсли;
	Иначе
		МассивсмежныхПунктов = Новый Массив;
	КонецЕсли;
	// ++ rarus Чернавин Г.К 08.04.2020
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата",Объект.Дата);
	Запрос.УстановитьПараметр("Судно", Объект.Судно);
	Запрос.УстановитьПараметр("ПустойПункт", Справочники.vftПунктыСледования.ПустаяСсылка());
	//Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	//|	vftТаблицаДвижения.Период КАК Период,
	//|	vftТаблицаДвижения.Судно,
	//|	vftТаблицаДвижения.Рейс,
	//|	vftТаблицаДвижения.Пункт,
	//|	vftТаблицаДвижения.Отправлено
	//|ИЗ
	//|	РегистрСведений.vftТаблицаДвижения КАК vftТаблицаДвижения
	//|ГДЕ
	//|	vftТаблицаДвижения.Судно = &Судно
	//|	И vftТаблицаДвижения.Период < &Дата
	//|	И vftТаблицаДвижения.Пункт <> &ПустойПункт
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	Период УБЫВ";
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	vftРейсПункты.Приход КАК Приход,
	               |	vftРейсПункты.Ссылка.Судно КАК Судно,
	               |	vftРейсПункты.Ссылка КАК Ссылка,
	               |	vftРейсПункты.Пункт КАК Пункт,
	               |	рарусОтправленныеРейсыРДО.Отправлено КАК Отправлено
	               |ИЗ
	               |	Документ.vftРейс.Пункты КАК vftРейсПункты
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.рарусОтправленныеРейсыРДО КАК рарусОтправленныеРейсыРДО
	               |		ПО vftРейсПункты.Ссылка = рарусОтправленныеРейсыРДО.Рейс
	               |			И vftРейсПункты.ИД = рарусОтправленныеРейсыРДО.ИДСтрокиРейса
	               |ГДЕ
	               |	vftРейсПункты.Ссылка.ПометкаУдаления = ЛОЖЬ
	               |	И vftРейсПункты.Приход < &Дата
	               |	И vftРейсПункты.Пункт <> &ПустойПункт
	               |	И vftРейсПункты.Ссылка.Судно = &Судно
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	vftРейсПункты.Приход УБЫВ";
	// -- rarus Чернавин Г.К 08.04.2020
	Результат = Запрос.Выполнить().Выгрузить();			   
	Если Результат.Количество() Тогда
		Если Результат[0].Пункт.РекаМоре = Перечисления.vftРекаМоре.Река Тогда
			Если МассивсмежныхПунктов.Найти(Результат[0].Пункт)=Неопределено 
				// ++ rarus Камаев П.В. 03.04.2020 Задача № 20785
				И рарусОбщегоНазначенияВызовСервера.ЭтоСудноННФ(Объект.Судно) Тогда
				// -- rarus Камаев П.В. 06.04.2020Тогда
				
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = НСтр("ru = 'Не полностью заполнен путевой журнал'");
				Сообщение.Сообщить();
				СтандартнаяОбработка = Ложь;
			КонецЕсли;	
		КонецЕсли; 	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если Не Отказ Тогда
		//НачатьТранзакцию();
		ПодготовитьНаборЗаписейДляИзменения();
		ИзменитьПризнакОтправки();
		// ++ rarus Чернавин Г.К 07.04.2020
		МассивСтрокБлокировки = Новый Массив;
		Для каждого Запись Из ТекущийНаборЗаписей Цикл
			Если Запись.Отправлено Тогда
				МенеджерДляЗаписи = РегистрыСведений.рарусОтправленныеРейсыРДО.СоздатьМенеджерЗаписи();
				ЗаполнитьЗначенияСвойств(МенеджерДляЗаписи, Запись, "Судно,Рейс,ИДСтрокиРейса,Отправлено");
				МенеджерДляЗаписи.Записать(Истина);
				МассивСтрокБлокировки.Добавить(Запись.ИДСтрокиРейса);
			КонецЕсли;
		КонецЦикла;

		Если ЭтоННФ И ЗначениеЗаполнено(Объект.Рейс) Тогда
			ДокументРейс = Объект.Рейс.ПолучитьОбъект();
			ЗаписатьДокументРейс = Ложь;
			Для Каждого Пункт Из ДокументРейс.Пункты Цикл
				Если МассивСтрокБлокировки.Найти(Пункт.ИД) <> Неопределено Тогда
					Пункт.ПровереноМенеджером = Истина;
					ЗаписатьДокументРейс = Истина;
				КонецЕсли;
			КонецЦикла;
			Если ЗаписатьДокументРейс Тогда
				ДокументРейс.ДополнительныеСвойства.Вставить("ЗаписьИзРДО", Истина);
				ДокументРейс.Записать();
			КонецЕсли;
		КонецЕсли;
			
		// -- rarus Чернавин Г.К 07.04.2020
		//ЗафиксироватьТранзакцию();
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ПодготовитьНаборЗаписейДляИзменения()
	//здесь проверим чтобы все записи набора были раньше даты документа, иначе удалим, они попадут в следующий РДО
	МассивУдаляемыхЗаписей = Новый Массив;
	Для Каждого Запись Из ТекущийНаборЗаписей Цикл
		// ++ rarus Чернавин Г.К 07.04.2020
		Если Запись.Начало > Объект.Дата Или Запись.Окончание > Объект.Дата Тогда
			МассивУдаляемыхЗаписей.Добавить(Запись);
		КонецЕсли; 
		// -- rarus Чернавин Г.К 07.04.2020
	КонецЦикла; 
	
	Для Каждого УдаляемаяЗапись Из МассивУдаляемыхЗаписей Цикл
		ТекущийНаборЗаписей.Удалить(УдаляемаяЗапись);	
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьПризнакОтправки()
	Для Каждого Запись Из ТекущийНаборЗаписей Цикл
		Если Запись.ВидОперации.Стоянка И Не ЗначениеЗаполнено(Запись.Окончание) Тогда
			Продолжить;
		КонецЕсли; 
		// ++ rarus kloa 26.02.2018
		Если Не ЗначениеЗаполнено(Запись.ВидОперации) Тогда 
			Продолжить;	
		КонецЕсли; 
		// -- rarus kloa 26.02.2018
		Запись.Отправлено = Истина; 
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	Результат = ЭтаФорма.Записать
	// ++ rarus Чернавин Г.К 28.01.2021 ВПIT-0018741
	(Новый Структура("ВыводитьСообщения", Истина));
	// -- rarus Чернавин Г.К 28.01.2021	
	Если Результат Тогда
		ОтправитьНаСервере();	
	КонецЕсли;
	УстановитьСтатус();
	
	//++ rarus isava 02.12.2020
	Результат = ЭтаФорма.Записать()
	//-- rarus isava 02.12.2020

КонецПроцедуры

&НаСервере
Процедура ОтправитьНаСервере()	
	
	
	FTPСоединение = ПолучитьFTP();	
	
	
	ДатаФайла = ТекущаяДата();
	//КрИмяФайла = Объект.Судно.КодБыстрогоВвода+"_"+День(ДатаФайла)+Месяц(ДатаФайла)+Час(ДатаФайла)+Минута(ДатаФайла) + ".vft";
	КрИмяФайла = Объект.Судно.КодБыстрогоВвода+"_"+Час(ДатаФайла)+Минута(ДатаФайла) + Секунда(Датафайла) + ".asu";
	ИмяВрФайла = КаталогВременныхФайлов()+КрИмяФайла;
	
	Удачно = Ложь;
	ЗаписьТекста = Новый ЗаписьТекста(ИмяВрФайла,КодировкаТекста.UTF8);
	ЗаписьТекста.Записать(Объект.Сообщение);
	ЗаписьТекста.Закрыть();
	//Каталог = СокрЛП(Объект.Судно.КодБыстрогоВвода)+"/IN/";
	Каталог = "IN/";
	FTPСоединение.УстановитьТекущийКаталог(Каталог); 
	
	Попытка
		
		FTPСоединение.Записать(ИмяВрФайла,КрИмяФайла);
		Объект.СтатусОтправления = Истина;
		Записать();
	Исключение
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		Сообщить(ТекстОшибки);
	КонецПопытки;
	
КонецПроцедуры

Функция ПолучитьFTP()
	НастройкиПодключения = РегистрыСведений.vftВнешниеДанные.Получить(Новый Структура("ВнешнийИсточник,Судно", Справочники.vftВнешниеИсточники.FTPСервер, vftОбщегоНазначенияВызовСервера.ПолучитьЗначениеПоУмолчанию("ОсновноеСудно")));	
	Сервер = НастройкиПодключения.FTPСоединениеПуть;
	
	ОбработкаОбъект = Обработки.ТранспортСообщенийОбменаFTP.Создать();
	
	ЗаполнитьЗначенияСвойств(ОбработкаОбъект, НастройкиПодключения);
	
	
	ОбработкаОбъект.Инициализация();
	Если Не ОбработкаОбъект.ПодключениеУстановлено() Тогда
		Сообщить("Подключение не установлено");
	Иначе
	КонецЕсли;
	ИмяПользователя = НастройкиПодключения.FTPСоединениеПользователь;
	ПарольПользователя = НастройкиПодключения.FTPСоединениеПароль;
	
	//++ rarus isaeva 05.08.2020
	//FTPСоединение = Новый FTPСоединение(Сервер,21, ИмяПользователя, ПарольПользователя,,Истина) ;
	
	ПараметрыFTP = ОбменДаннымиСервер.FTPИмяСервераИПуть(Сервер);
	ИмяСервера  = ПараметрыFTP.Сервер;
	ИмяКаталога = ПараметрыFTP.Путь;
	
	FTPСоединение = Новый FTPСоединение(ИмяСервера,21, ИмяПользователя, ПарольПользователя,,Истина) ;
	//-- rarus isaeva 05.08.2020
	
	Возврат FTPСоединение;
КонецФункции

&НаКлиенте
Процедура Сохранить(Команда)
	Результат = ЭтаФорма.Записать
	// ++ rarus Чернавин Г.К 28.01.2021 ВПIT-0018741
	(Новый Структура("ВыводитьСообщения", Истина));
	// -- rarus Чернавин Г.К 28.01.2021
	ДатаФайла = ТекущаяДата();
	Если Результат Тогда
		Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
		
		Диалог.Заголовок = "Выберите имя файла для сохранения";
		
		Диалог.МножественныйВыбор = Ложь;
		
		//Диалог.Фильтр = "*.vft";
		//Диалог.Расширение = "vft";
		Диалог.Фильтр = "*.asu";
		Диалог.Расширение = "asu";
		
		КрИмяФайла = ПолучитьИмяФайла(ДатаФайла);
		Диалог.ПолноеИмяФайла = КрИмяФайла;
		
		
		//Вызов собственно диалога на экран
		
		Если Диалог.Выбрать() Тогда
			
			//Сюда попадем только если пользователь нажал ОК
			
			//Сохранение выбранного имени файла (полного имени, значит включая путь к нему)
			
			ИмяФайла = Диалог.ПолноеИмяФайла;
			
			ЗаписьТекста = Новый ЗаписьТекста(ИмяФайла,КодировкаТекста.UTF8);
			ЗаписьТекста.Записать(Объект.Сообщение);
			ЗаписьТекста.Закрыть();
			
		КонецЕсли;	
	КонецЕсли; 
	
	
КонецПроцедуры

&НаКлиенте
Процедура ДислокацияБассейнОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	// ++ rarus Чернавин Г.К 08.06.2020 Задача № 22181
	//ПроверитьПараметрыДислокацииОтносительноЖурнала(СтандартнаяОбработка, ВыбранноеЗначение);
	// -- rarus Чернавин Г.К 08.06.2020
КонецПроцедуры

&НаСервере
Функция ПолучитьИмяФайла(ДатаФайла)
	Возврат Объект.Судно.КодБыстрогоВвода+"_"+День(ДатаФайла)+Месяц(ДатаФайла)+Час(ДатаФайла)+Минута(ДатаФайла);
КонецФункции

&НаКлиенте
Процедура ПечатьРДО(Команда)
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.УстановитьТекст(Объект.Сообщение);
	ТекстовыйДокумент.Показать();
КонецПроцедуры

&НаКлиенте
Процедура ДислокацияОсобаяПриИзменении(Элемент)
	
	Если ЭтоННФ Тогда
		Элементы.ДислокацияБассейн.Видимость = Объект.ДислокацияОсобая;
		//Элементы.ДислокацияКоординаты.Видимость = Объект.ДислокацияОсобая;
		Элементы.ДислокацияКм.Видимость = Объект.ДислокацияОсобая;
	КонецЕсли;
	
	// rarus_KloA_04.08.2015 < 
	Элементы.ГруппаКоординаты.Видимость = Объект.ДислокацияОсобая;
	// rarus_KloA_04.08.2015 > 
	
	// ++ rarus Чернавин Г.К 04.12.2020 № 25589
	УстановитьВидимостьКлиент();
	
	СформироватьТекстСообщения();
	// -- rarus Чернавин Г.К 04.12.2020
	
	// ++ rarus Камаев П.В. 12.02.2021 Задача № 27213 
	УстановитьОбязательныеРеквизиты();
	// -- rarus Камаев П.В. 12.02.2021
	
КонецПроцедуры


#Область ДоработкиПоСудовомуМодулю 

//raruskzn AydaFZ 15.11.2019 Задача № 17711{
&НаСервере
Процедура ЗаполнитьСписокШаблонов()
	
	Элементы.Шаблон.СписокВыбора.Очистить();
	
	СписокШаблонов = Справочники.vftШаблоныРДО.ПолучитьСписокШаблонов(Объект.Судно.Проект.МодельРДО);
	
	Для каждого ШаблонИзСписка Из СписокШаблонов Цикл
		
		Элементы.Шаблон.СписокВыбора.Добавить(ШаблонИзСписка,ШаблонИзСписка.Наименование);	
		
	КонецЦикла;
	
КонецПроцедуры //raruskzn AydaFZ 15.11.2019}

&НаСервере
Функция ПолучитьЗначениеГрузов()
	
	СтрокаГрузов 	= "";
	МодельРДО 		= Объект.Судно.Проект.МодельРДО;
	ШаблонГрузов 	= МодельРДО.ШаблонГрузов;
	// ++ rarus Чернавин Г.К 10.04.2020
	ШаблонГрузовСекций = Не ЭтоННФ И Объект.Судно.Проект.Толкач;
	Если ШаблонГрузовСекций Тогда
		ШаблонГрузов 	= МодельРДО.ШаблонГрузовСекций;	
	КонецЕсли;
	// -- rarus Чернавин Г.К 10.04.2020
	
	Если ШаблонГрузов <> "" Тогда
		
		Грузы = Объект.Грузы.Выгрузить();
		
		Для каждого Строка Из Грузы Цикл
			
			СтрокаГрузов = СтрокаГрузов + ШаблонГрузов;
			
			Груз = "";
			
			Если ТипЗнч(Строка.Груз) = Тип("СправочникСсылка.vftГрузы") Тогда
				
				Груз = ПреобразоватьЗначениеДляРДО(Строка.Груз);
				
			КонецЕсли;
			
			Для каждого СтрокаКолонки Из Грузы.Колонки Цикл
				
				Если СтрокаКолонки.Имя = "Груз" Тогда
					
					НайденнаяЗначение = Груз;
				// ++ rarus Чернавин Г.К 10.04.2020
				ИначеЕсли ШаблонГрузовСекций И СтрокаКолонки.Имя = "Секция" Тогда
					НайденнаяЗначение = Строка.Секция.КодБыстрогоВвода;
				// -- rarus Чернавин Г.К 10.04.2020
				// ++ rarus Чернавин Г.К 06.11.2020 № 25173
				//ИначеЕсли ШаблонГрузовСекций И СтрокаКолонки.Имя = "ЕдиницаИзмерения" И ЭтоМСГФ Тогда
				ИначеЕсли СтрокаКолонки.Имя = "ЕдиницаИзмерения" И ЭтоМСГФ Тогда
					НайденнаяЗначение = ПреобразоватьЗначениеДляРДО(Строка.ЕдиницаИзмерения);
				// -- rarus Чернавин Г.К 06.11.2020
				Иначе
					
					НайденнаяЗначение = Формат(Строка[СтрокаКолонки.Имя],"ЧГ=0");
					
				КонецЕсли;
				
				СтрокаГрузов = СтрЗаменить(СтрокаГрузов, "[" + СтрокаКолонки.Имя + "]", НайденнаяЗначение);  
				
			КонецЦикла;
			
		КонецЦикла;
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Заполните в модели шаблон грузов'"), МодельРДО, "ШаблонГрузов", "Объект.ШаблонГрузов");
		
	КонецЕсли;
	
	Возврат СтрокаГрузов;
	
КонецФункции

//raruskzn AydaFZ 15.11.2019}

//raruskzn AydaFZ 18.11.2019 Задача № 17711{
&НаСервере
Процедура НастроитьВидимостьГрузов()
	
	РасширенныеДанныеПоГрузу = НЕ Объект.Судно.Проект.МодельРДО.СокращенныеДанныеПоГрузу;
	
	Элементы.ГрузыКоличествоГрузаПоСудовымЗамерам.Видимость 			= РасширенныеДанныеПоГрузу; 
	Элементы.ГрузыКоличествоГрузаПоСудовымЗамерамСVEF.Видимость 		= РасширенныеДанныеПоГрузу; 
	Элементы.ГрузыКоличествоГрузаПоСудовымЗамерамСдано.Видимость 		= РасширенныеДанныеПоГрузу; 
	Элементы.ГрузыКоличествоГрузаПоСудовымЗамерамСданоСVEF.Видимость 	= РасширенныеДанныеПоГрузу; 
	Элементы.ГрузыКоличествоГрузаСдано.Видимость 						= РасширенныеДанныеПоГрузу; 
	Элементы.ГрузыСредняяТемператураГрузаПоСудовымЗамерам.Видимость 	= РасширенныеДанныеПоГрузу; 
	Элементы.ГрузыПлотностьГруза.Видимость 								= РасширенныеДанныеПоГрузу; 
	// ++ rarus Чернавин Г.К 06.11.2020 № 25173
	Элементы.ГрузыЕдиницаИзмерения.Видимость 							= ЭтоМСГФ;
	// -- rarus Чернавин Г.К 06.11.2020
	
	// ++ rarus Чернавин Г.К 10.04.2020
	Элементы.ГрузыСекция.Видимость = Не ЭтоННФ И Объект.Судно.Проект.Толкач;
	// -- rarus Чернавин Г.К 10.04.2020
	
	
КонецПроцедуры //raruskzn AydaFZ 18.11.2019}

//raruskzn AydaFZ 26.11.2019 {

&НаСервере
Функция ПодключениеКВебСервису()
	
	Отбор = Новый Структура;
	Отбор.Вставить("ВнешнийИсточник", Справочники.vftВнешниеИсточники.WEBСервис);
	Отбор.Вставить("Судно", Объект.Судно);

	Выборка = РегистрыСведений.vftВнешниеДанные.Выбрать(Отбор, );

	Если Выборка.Следующий() Тогда
		
		Определение = Новый WSОпределения(Выборка.WSURLВебСервиса);
		Прокси = Новый WSПрокси(Определение, Выборка.WSURLПространстваИменСервиса, Выборка.WSИмяСервиса, Выборка.WSИмяСервиса + "Soap");
		Прокси.Пользователь = Выборка.WSИмяПользователя;
		Прокси.Пароль		= Выборка.WSПароль;			
		
		Возврат Прокси;
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Для этого судно не определены параметры подключения'"), Объект.Ссылка);
		
		Возврат Ложь;

	КонецЕсли;
	
КонецФункции

//raruskzn AydaFZ 26.11.2019 {
&НаКлиенте
Процедура ОтправитьПоВебСервису(Команда)
	
	// ++ rarus Чернавин Г.К 21.04.2020
	ДокументУспешноОтправлен = Ложь;
	// -- rarus Чернавин Г.К 21.04.2020
	Результат = ЭтаФорма.Записать
	// ++ rarus Чернавин Г.К 28.01.2021 ВПIT-0018741
	(Новый Структура("ВыводитьСообщения", Истина));
	// -- rarus Чернавин Г.К 28.01.2021	
	Если Результат Тогда
		
		ДокументУспешноОтправлен = ОтправитьПоВебСервисуКлиент(Объект.Ссылка);
		
	КонецЕсли;
	
	Если ДокументУспешноОтправлен  Тогда
		Объект.ОтправленоПоВебСервису = Истина;
		Объект.СтатусОтправления = Истина;
		УстановитьСтатус();
	КонецЕсли;

	//++ rarus isava 02.12.2020
	Результат = ЭтаФорма.Записать();
	//-- rarus isava 02.12.2020


КонецПроцедуры //raruskzn AydaFZ 26.11.2019}


#Область ПодключениеКHTTPСервису 

&НаКлиенте
Функция ОтправитьПоВебСервисуКлиент(Документ) Экспорт
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.vftРДО")
		И ЗначениеЗаполнено(Документ) Тогда
		
		НастройкиВебСервиса = ПолучитьНастройкиВебСервисаНаСервере(Объект.Судно);
			
		Если НастройкиВебСервиса = Неопределено Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Для судна отсуствуют настройки веб сервиса'"));
			
		КонецЕсли;
		
		//WSИмяСервиса  = "localhost";
		//WSИмяПользователя  = "rarus";
		//WSПароль  = "";
		//WSURLВебСервиса ="/VF_ERP_DEV9/hs/ExRDO/download/" 
		Параметр 	= "СоздатьРДО";
		Ресурс 		= НастройкиВебСервиса.WSURLВебСервиса + Параметр;	
		
		HTTPСоединение  = Новый HTTPСоединение(НастройкиВебСервиса.WSИмяСервиса, , НастройкиВебСервиса.WSИмяПользователя, НастройкиВебСервиса.WSПароль);
		
		#Если ВебКлиент Тогда
			ВремКаталог = КаталогВременныхФайлов();
			ИмяВремФайла = Строка(Новый УникальныйИдентификатор) + ".tmp";
			ПутьКФайлуJSON = ВремКаталог + ИмяВремФайла;
		#Иначе
			ПутьКФайлуJSON 	= ПолучитьИмяВременногоФайла();
		#КонецЕсли
		СтрокаJSON 		= СформированныйФайлJSONНаСервере(Документ);
		
		ТекстовыйФайл = Новый ТекстовыйДокумент;
		
		ТекстовыйФайл.УстановитьТекст(СтрокаJSON);
		ТекстовыйФайл.Записать(ПутьКФайлуJSON, КодировкаТекста.UTF8);
	
		#Если ВебКлиент Тогда
			ВремКаталог = КаталогВременныхФайлов();
			ИмяВремФайла = Строка(Новый УникальныйИдентификатор) + ".tmp";
			ФайлРезультата = ВремКаталог + ИмяВремФайла;
		#Иначе
			ФайлРезультата = ПолучитьИмяВременногоФайла();
		#КонецЕсли
		
		ЗаголовокHTTP = Новый Соответствие();
		
		ЗаголовокHTTP.Вставить("Content-Type"		, "application/x-www-form-urlencoded");
		ЗаголовокHTTP.Вставить("Accept-Language"	, "ru");
		ЗаголовокHTTP.Вставить("Accept-Charset"		, "utf-8");
		ЗаголовокHTTP.Вставить("Content-Language"	, "ru");
		ЗаголовокHTTP.Вставить("Content-Charset"	, "utf-8");
		
		HTTPСоединение.ОтправитьДляОбработки(ПутьКФайлуJSON, Ресурс, ФайлРезультата, ЗаголовокHTTP);
		
		Ответ = Новый ТекстовыйДокумент();
		
		Ответ.Прочитать(ФайлРезультата, КодировкаТекста.UTF8);
		
		ТекстОтвета = Ответ.ПолучитьТекст();
		
		УдалитьФайлы(ПутьКФайлуJSON);
		УдалитьФайлы(ФайлРезультата);
		// ++ rarus Чернавин Г.К 19.05.2020 добавил вариант ответа Да. Иногда такой приходит.
		Если ТекстОтвета = "Yes" Или ТекстОтвета = "Да" Тогда
		// -- rarus Чернавин Г.К 19.05.2020	
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Документ загружен'"));		
			Результат = Истина;
			
		Иначе
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Документ Не загружен'") + ТекстОтвета);
			Результат = Ложь;
		
		КонецЕсли;
			
	КонецЕсли;
		
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция СформированныйФайлJSONНаСервере(Документ) Экспорт
	
	Возврат впОбменРДО.СформированныйФайлJSON(Документ);
	
КонецФункции // ()

&НаСервереБезКонтекста
Функция ПолучитьНастройкиВебСервисаНаСервере(Судно);
	
	СтруктураНастройкиВебСервиса = впОбменРДО.ПолучитьСтруктуруНастройкиВебСервиса();
	Выборка = РегистрыСведений.vftВнешниеДанные.ПолучитьНастройкиВебСервиса(Справочники.vftВнешниеИсточники.WEBСервис);
	ЗаполнитьЗначенияСвойств(СтруктураНастройкиВебСервиса,Выборка); 
	
	Возврат СтруктураНастройкиВебСервиса;
	
КонецФункции

&НаКлиенте
Процедура ГрузыСекцияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Истина);
			
	ДопПараметры = новый Структура;
	Поле = "ГрузыГруз";
	ДопПараметры.Вставить("Поле", Поле);
	
	ОповещениеЗакрытия = новый ОписаниеОповещения("ОповещениеВыбораСудна", ЭтотОбъект, ДопПараметры);
	
	Форма = ОткрытьФорму("Справочник.vftСуда.Форма.ФормаВыбора", ПараметрыФормы, Элементы.Грузы, ЭтаФорма.УникальныйИдентификатор,,,ОповещениеЗакрытия, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
	
	//СписокСудов
	Форма.Элементы.Список.Отображение = ОтображениеТаблицы.Список;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Форма.Список,
		"ЭтоГруппа",
		Ложь,
		ВидСравненияКомпоновкиДанных.Равно
		,, 
		Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);

	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Форма.Список,
		"Проект.ТипХода",
		1,
		ВидСравненияКомпоновкиДанных.Равно
		,, 
		Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
КонецПроцедуры

&НаКлиенте
Процедура ГрузыСекцияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	Если Текст <> "" Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = ПолучитьДанныеВыбораСудов(Текст);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГрузыСекцияОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = ПолучитьДанныеВыбораСудов(Текст);
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеВыбораСудна(Результат, ДопПараметры) Экспорт
	
	Если ДопПараметры.Свойство("Поле") И ЗначениеЗаполнено(Результат) Тогда
		Поле = ДопПараметры.Поле;
		Если Поле = "ГрузыГруз" Тогда
			Элементы.Грузы.ТекущиеДанные.Секция = Результат;			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеВыбораСудов(Текст = "")
	
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	vftСуда.Ссылка КАК Ссылка,
	               |	vftСуда.Наименование КАК Наименование
	               |ИЗ
	               |	Справочник.vftСуда КАК vftСуда
	               |ГДЕ
	               |	(vftСуда.Проект.ТипХода = 1)
	               |	И НЕ vftСуда.ЭтоГруппа
	               |	И vftСуда.Наименование ПОДОБНО &Наименование
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Наименование";
	Запрос.УстановитьПараметр("Наименование", "%" + Текст + "%");	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Список = новый СписокЗначений;
	Пока Выборка.Следующий() Цикл
		Список.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Возврат Список
	
КонецФункции

// ++ rarus Чернавин Г.К 13.04.2020
&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
		
	Ошибки = Неопределено;	
	
	Если Не Объект.Шаблон.ПриоритетныйВидОперации = "M" И Не ЭтоННФ 
		//++ rarus isaeva 27.01.2021
		И Не ЭтоМСГФ 
		//-- rarus isaeva 27.01.2021
		Тогда
		//Проверим что это операция выход из порта
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("ОперацияОтправления", Объект.ВидОперации);
		НайтиСтроки = СочетаниеОпераций.НайтиСтроки(ПараметрыОтбора);
		//если это выход из порта, проверим что общее время стоянок не превышает время стоянки в порту
		Если НайтиСтроки.Количество() <> 0 Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 100
			               |	vftРДО.Дата КАК Дата,
			               |	vftРДО.Шаблон КАК Шаблон,
			               |	vftРДО.ВидОперации КАК ВидОперации
			               |ИЗ
			               |	Документ.vftРДО КАК vftРДО
			               |ГДЕ
			               |	vftРДО.Судно = &Судно
			               |	И vftРДО.Шаблон.ПриоритетныйВидОперации <> ""M""
			               |	И vftРДО.ПометкаУдаления = ЛОЖЬ
			               |	И vftРДО.Ссылка <> &Ссылка
			               |	И vftРДО.Дата < &Дата
			               |
			               |УПОРЯДОЧИТЬ ПО
			               |	vftРДО.Дата УБЫВ";
			Запрос.УстановитьПараметр("Дата", Объект.Дата);
			Запрос.УстановитьПараметр("Судно", Объект.Судно);
			Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
			РезультатЗапроса = Запрос.Выполнить();
			ВыборкаЗапроса = РезультатЗапроса.Выбрать();
			ПредыдущаяОперация = Неопределено;
			Если ВыборкаЗапроса.Следующий() Тогда
				ПредыдущаяОперация = ВыборкаЗапроса.ВидОперации;	
				ДатаПредыдущейОперации = ВыборкаЗапроса.Дата;
			КонецЕсли;
			
			Пока ВыборкаЗапроса.Следующий() Цикл
				Если ВыборкаЗапроса.ВидОперации = ПредыдущаяОперация Тогда
					ДатаПредыдущейОперации = ВыборкаЗапроса.Дата;
				Иначе
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если ЗначениеЗаполнено(ПредыдущаяОперация) Тогда
				ОбщееВремяСтоянки = Окр((Объект.Дата - ДатаПредыдущейОперации) / 3600, 2);
				ВремяСтоянок = 0;
				Для Каждого Строка Из Объект.Стоянки Цикл
					ВремяСтоянок = ВремяСтоянок + Строка.Время;		
				КонецЦикла;
				Если ВремяСтоянок > ОбщееВремяСтоянки Тогда
					ТекстОшибки = НСтр("ru = 'Время стоянок превышает общее время стоянки на %1 ч.!'");
					ТекстОшибки = СтрЗаменить(ТекстОшибки, "%1", ВремяСтоянок - ОбщееВремяСтоянки); 
					ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки,
					"Объект.Стоянки",
					ТекстОшибки,
					Неопределено);	
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		//++ rarus isaeva 26.03.2021
		//Убираем данную проверку, т.к. может потребоваться повторная подача РДО
		
		//Если предыдущая операция была Приход в порт, то текущая должна быть Отправление
		//ВыборкаЗапроса = ВыборкаПредыдущаяРДО();
		//Если ВыборкаЗапроса.Следующий() И ВыборкаЗапроса.ВидОперации <> Объект.ВидОперации Тогда
		//	ПараметрыОтбора = Новый Структура;
		//	ПараметрыОтбора.Вставить("ОперацияПрибытия", ВыборкаЗапроса.ВидОперации);
		//	НайтиСтроки = СочетаниеОпераций.НайтиСтроки(ПараметрыОтбора);
		//	Если НайтиСтроки.Количество() <> 0 Тогда
		//		СписокКодовОпераций = "";
		//		ТекстОшибки = НСтр("ru = 'Выберите операцию с кодом: %1'");
		//		Для Каждого Строка Из НайтиСтроки Цикл
		//			Если Строка.ОперацияПрибытия = ВыборкаЗапроса.ВидОперации И Объект.ВидОперации = Строка.ОперацияОтправления Тогда
		//				ТекстОшибки = "";
		//			Иначе
		//				СписокКодовОпераций = СписокКодовОпераций + Строка.ОперацияОтправления.КодОперации + ", ";
		//			КонецЕсли;
		//		КонецЦикла;
		//		СписокКодовОпераций = Сред(СписокКодовОпераций,1, СтрДлина(СписокКодовОпераций) - 2);
		//		Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		//			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%1", СписокКодовОпераций);
		//			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки,
		//			"Объект.ВидОперации",
		//			ТекстОшибки,
		//			Неопределено);	
		//		КонецЕсли;
		//	КонецЕсли;
		//КонецЕсли;
		//-- rarus isaeva 26.03.2021

	КонецЕсли;
		
	Если Не ЭтоМСГФ Тогда   // rarus isaeva 07.06.2021
		//Задача #21387
		ВыборкаЗапроса = ВыборкаПредыдущаяРДО();
		Если  Объект.Шаблон.ПриоритетныйВидОперации = "M"
			ИЛИ (Объект.Шаблон.ПриоритетныйВидОперации = "PT" 
			И ВыборкаЗапроса.Следующий()
			И Не ВыборкаЗапроса.Шаблон.ПриоритетныйВидОперации = "S") Тогда
			
			ВремяСтоянок = 0;
			Для Каждого Строка Из Объект.Стоянки Цикл
				ВремяСтоянок = ВремяСтоянок + Строка.Время;		
			КонецЦикла;
			Если ВремяСтоянок > 24 Тогда
				ТекстОшибки = НСтр("ru = 'Время стоянок превышает 24 ч.!'");
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки,
				"Объект.Стоянки",
				ТекстОшибки,
				Неопределено);	
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;

	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	
КонецПроцедуры

Функция ВыборкаПредыдущаяРДО()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	vftРДО.Дата КАК Дата,
	|	vftРДО.Шаблон КАК Шаблон,
	|	vftРДО.ВидОперации КАК ВидОперации
	|ИЗ
	|	Документ.vftРДО КАК vftРДО
	|ГДЕ
	|	vftРДО.Судно = &Судно
	|	И vftРДО.Шаблон.ПриоритетныйВидОперации <> ""M""
	|	И vftРДО.ПометкаУдаления = ЛОЖЬ
	|	И vftРДО.Ссылка <> &Ссылка
	|	И vftРДО.Дата < &Дата
	|
	|УПОРЯДОЧИТЬ ПО
	|	vftРДО.Дата УБЫВ";
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("Судно", Объект.Судно);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаЗапроса = РезультатЗапроса.Выбрать();
	Возврат ВыборкаЗапроса;
	
КонецФункции
// -- rarus Чернавин Г.К 13.04.2020
#КонецОбласти

// ++ rarus Камаев П.В. 28.08.2020 Задача № 23531 
&НаКлиенте
Процедура ДислокацияПунктНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ПортовыйШаблон = рарусОбщегоНазначенияВызовСервера.ЗначениеРеквизитаОбъекта(Объект.Шаблон, "ПортовыйШаблон");
	
	// ++ rarus Камаев П.В. 02.09.2020 Задача № 23575
	РежимОтображения	= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
	ЭтоГлавныйУзел		= vftОбщегоНазначения.ЭтоГлавныйУзел();
	Если НЕ ЭтоГлавныйУзел Тогда
		РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;
	КонецЕсли;
	// -- rarus Камаев П.В. 02.09.2020
	
	Если ПортовыйШаблон = Истина Тогда
		СтандартнаяОбработка = Ложь;
		
		Отбор = Новый Структура;
		Форма = ОткрытьФорму("Справочник.vftПунктыСледования.ФормаВыбора", Отбор ,Элемент,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Форма.Список,
		"Тип",
		ПредопределенноеЗначение("Справочник.рарусТипыПунктовСледования.Порт"),
		ВидСравненияКомпоновкиДанных.Равно,
		,
		Истина, 
		РежимОтображения);	
		Форма.Элементы.Список.Отображение = ОтображениеТаблицы.Список;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДислокацияПунктАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если Текст <> "" Тогда
		СтандартнаяОбработка = Ложь;
		ПортовыйШаблон = рарусОбщегоНазначенияВызовСервера.ЗначениеРеквизитаОбъекта(Объект.Шаблон, "ПортовыйШаблон");
		ДанныеВыбора = ПолучитьДанныеВыбораПункт(Текст,,ПортовыйШаблон);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДислокацияПунктОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	Если Текст <> "" Тогда
		СтандартнаяОбработка = Ложь;
		ПортовыйШаблон = рарусОбщегоНазначенияВызовСервера.ЗначениеРеквизитаОбъекта(Объект.Шаблон, "ПортовыйШаблон");
		ДанныеВыбора = ПолучитьДанныеВыбораПункт(Текст,,ПортовыйШаблон);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПунктСледованияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	ТекСтрока = Элементы.Стоянки.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		Если ТипЗнч(ТекСтрока.ПунктСтоянки) = Тип("СправочникСсылка.vftПунктыСледования") Тогда
			Если Текст <> "" Тогда
				СтандартнаяОбработка = Ложь;
				ДанныеВыбора = ПолучитьДанныеВыбораПункт(Текст,,Ложь); 
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПунктСледованияОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ТекСтрока = Элементы.Стоянки.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		Если ТипЗнч(ТекСтрока.ПунктСтоянки) = Тип("СправочникСсылка.vftПунктыСледования") Тогда
			Если Текст <> "" Тогда		
				СтандартнаяОбработка = Ложь;
				ДанныеВыбора = ПолучитьДанныеВыбораПункт(Текст,,Ложь);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеВыбораПункт(Текст, ТипПункта = Неопределено, ТипПунктаПорт = Истина)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Пункты.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА Пункты.Код ПОДОБНО &СтрокаПоиска
	|			ТОГДА 1
	|		КОГДА Пункты.Наименование ПОДОБНО &СтрокаПоиска
	|			ТОГДА 2
	|		КОГДА Пункты.НаименованиеНаАнглийском ПОДОБНО &СтрокаПоиска
	|			ТОГДА 3
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Представление,
	|	Пункты.Код КАК Код,
	|	Пункты.Наименование КАК Наименование,
	|	Пункты.НаименованиеНаАнглийском КАК НаименованиеНаАнглийском
	|ИЗ
	|	Справочник.vftПунктыСледования КАК Пункты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.vftПунктыСледования.РазрешеноПропускать КАК ПунктыСледованияРазрешеноПропускать
	|		ПО (ПунктыСледованияРазрешеноПропускать.Ссылка = Пункты.Ссылка)
	|			И (ПунктыСледованияРазрешеноПропускать.МодельРДО = &МодельРДО)
	|ГДЕ
	|	&УсловиеТипПунктаПорт
	|	И ЕСТЬNULL(ПунктыСледованияРазрешеноПропускать.ИспользуетсяВПЖ, ИСТИНА) = ИСТИНА
	|	И Пункты.ЭтоГруппа = ЛОЖЬ
	|	И Пункты.ПометкаУдаления = ЛОЖЬ
	|	И ВЫБОР
	|			КОГДА Пункты.Код ПОДОБНО &СтрокаПоиска
	|				ТОГДА 1
	|			КОГДА Пункты.Наименование ПОДОБНО &СтрокаПоиска
	|				ТОГДА 2
	|			КОГДА Пункты.НаименованиеНаАнглийском ПОДОБНО &СтрокаПоиска
	|				ТОГДА 3
	|		КОНЕЦ <> 0";
	Запрос.УстановитьПараметр("СтрокаПоиска","%"+Текст+"%");
	Запрос.УстановитьПараметр("МодельРДО", Объект.Судно.Проект.МодельРДО);
	
	Если ТипПунктаПорт Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеТипПунктаПорт", "Пункты.Тип = ЗНАЧЕНИЕ(Справочник.рарусТипыПунктовСледования.Порт)");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеТипПунктаПорт", "Истина");
	КонецЕсли;

	Выборка = Запрос.Выполнить().Выбрать();
	Список = Новый СписокЗначений;
	Пока Выборка.Следующий() Цикл
		ТекстПредставления = Выборка.Наименование;
		Если Выборка.Представление = 1 Тогда
			ТекстПредставления = Выборка.Код + "(" + Выборка.Наименование + ")";
		КонецЕсли;
		Если Выборка.Представление = 2 Тогда
			ТекстПредставления = Выборка.Наименование + "(" + Выборка.Код + ")";
		КонецЕсли;
		Если Выборка.Представление = 3 Тогда
			ТекстПредставления = Выборка.НаименованиеНаАнглийском + "(" + Выборка.Наименование + ")";
		КонецЕсли;	
		Список.Добавить(Выборка.Ссылка, ТекстПредставления);
	КонецЦикла;
	
	Возврат Список;
		
КонецФункции

&НаКлиенте
Процедура СтоянкиПунктСтоянкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.Стоянки.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Если ТекущиеДанные.ПунктСтоянки	= Неопределено Тогда
			ТекущиеДанные.ПунктСтоянки	= ПредопределенноеЗначение("Справочник.vftПунктыСледования.ПустаяСсылка");	
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
// -- rarus Камаев П.В. 28.08.2020


// ++ rarus Чернавин Г.К 06.11.2020 
&НаКлиенте
Процедура КоординатыУточнениеМестонахожденияПриИзменении(Элемент)
	Элементы.ГруппаКоординатыУточнениеМестонахождения.Видимость = Объект.ДислокацияОсобаяУточнениеМестонахождения;
КонецПроцедуры
// -- rarus Чернавин Г.К 06.11.2020

// ++ rarus Чернавин Г.К 10.11.2020 № 25167
Процедура ЗаполнитьПодборСтоянок()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	vftТиповыеОперацииРазделениеПоМоделямРДО.Ссылка КАК Ссылка,
	               |	vftТиповыеОперацииРазделениеПоМоделямРДО.Ссылка.Наименование КАК Наименование,
	               |	vftТиповыеОперацииРазделениеПоМоделямРДО.Ссылка.КодОперации КАК Код
	               |ИЗ
	               |	Справочник.vftТиповыеОперации.РазделениеПоМоделямРДО КАК vftТиповыеОперацииРазделениеПоМоделямРДО
	               |ГДЕ
	               |	vftТиповыеОперацииРазделениеПоМоделямРДО.МодельРДО = &СЗП
	               |	И НЕ vftТиповыеОперацииРазделениеПоМоделямРДО.Ссылка.ПометкаУдаления
	               |	И vftТиповыеОперацииРазделениеПоМоделямРДО.ВидимостьВРДО
	               |	И vftТиповыеОперацииРазделениеПоМоделямРДО.Ссылка.Стоянка = ИСТИНА
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Код";
	Запрос.УстановитьПараметр("СЗП",Справочники.рарусСправочникСсылок.МодельРДО_СЗП.Значение);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ПодборСтоянок.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура СтоянкиПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	СтандартнаяОбработка = Ложь;
	Для Каждого Значение Из ПараметрыПеретаскивания.Значение Цикл
		Если ТипЗнч(Значение.Ссылка) = Тип("СправочникСсылка.vftТиповыеОперации") Тогда
			НоваяСтрока = Объект.Стоянки.Добавить();
			НоваяСтрока.ВидСтоянки = Значение.Ссылка;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПодборСтоянокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	НоваяСтрока = Объект.Стоянки.Добавить();
	НоваяСтрока.ВидСтоянки = ТекущиеДанные.Ссылка;
	
	//++ rarus isaeva 12.03.2021
	СформироватьТекстСообщения();
	//-- rarus isaeva 12.03.2021

КонецПроцедуры

&НаКлиенте
Процедура ПодборСтоянокПраво(Команда)
	Для Каждого Строка Из Элементы.ПодборСтоянок.ВыделенныеСтроки Цикл
		НоваяСтрока = Объект.Стоянки.Добавить();
		НоваяСтрока.ВидСтоянки = ПодборСтоянок.НайтиПоИдентификатору(Строка).Ссылка;	
	КонецЦикла;
	// ++ rarus Камаев П.В. 12.02.2021 Задача № 27213
	УстановитьОбязательныеРеквизиты();
	// -- rarus Камаев П.В. 12.02.2021
	
	//++ rarus isaeva 12.03.2021
	СформироватьТекстСообщения();
	//-- rarus isaeva 12.03.2021

КонецПроцедуры
// -- rarus Чернавин Г.К 10.11.2020

// ++ rarus Чернавин Г.К 19.11.2020 № 25419
&НаСервере
Процедура ПодсказкиПоказателей()
	
	//если элементов будет много заменить на перечисление к примеру
	Элементы.ПройденноеРасстояниеДекорация.Видимость = Ложь;
	Элементы.ПройденноеРасстояниеОтПунктаОбработкиДекорация.Видимость = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	рарусПодсказкиПоказателейРДО.Показатель КАК Показатель,
	               |	рарусПодсказкиПоказателейРДО.Шаблон КАК Шаблон,
	               |	рарусПодсказкиПоказателейРДО.ВидОперации КАК ВидОперации,
	               |	рарусПодсказкиПоказателейРДО.ТекстПодсказки КАК ТекстПодсказки
	               |ИЗ
	               |	РегистрСведений.рарусПодсказкиПоказателейРДО КАК рарусПодсказкиПоказателейРДО
	               |ГДЕ
	               |	рарусПодсказкиПоказателейРДО.Шаблон = &Шаблон
	               |	И рарусПодсказкиПоказателейРДО.ВидОперации = &ВидОперации";
	Запрос.УстановитьПараметр("Шаблон", Объект.Шаблон);
	Запрос.УстановитьПараметр("ВидОперации", Объект.ВидОперации);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаЗапроса = РезультатЗапроса.Выбрать();
	Пока ВыборкаЗапроса.Следующий() Цикл
		
		ИмяЭлемента = ""+ ВыборкаЗапроса.Показатель + "Декорация";
		ИмяПоказателя = ""+ ВыборкаЗапроса.Показатель;
		Если Элементы.Найти(ИмяЭлемента) <> Неопределено 
			И Элементы.Найти(ИмяПоказателя) <> Неопределено
			И Элементы.Найти(ИмяПоказателя).Видимость Тогда
			
			Элементы[ИмяЭлемента].Видимость = Истина;	
			Элементы[ИмяЭлемента].Заголовок = ВыборкаЗапроса.ТекстПодсказки;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры
// -- rarus Чернавин Г.К 19.11.2020

// ++ rarus Чернавин Г.К 03.12.2020 № 25587 
&НаСервере
Функция ПолучитьЗначениеРеквизита(Значение, ИмяРеквизита)
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Значение, ИмяРеквизита);	
КонецФункции
// -- rarus Чернавин Г.К 03.12.2020

// ++ rarus Чернавин Г.К 04.12.2020
&НаКлиенте
Процедура УстановитьВидимостьКлиент()
	
	Элементы.ДислокацияПункт.Видимость = Не Объект.ДислокацияОсобая;
	Элементы.ГруппаКоординаты.Видимость = Объект.ДислокацияОсобая;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимостьКлиент();
	// ++ rarus Камаев П.В. 12.02.2021 Задача № 27213
	УстановитьОбязательныеРеквизиты();
	// -- rarus Камаев П.В. 12.02.2021
КонецПроцедуры
// -- rarus Чернавин Г.К 04.12.2020
#КонецОбласти











