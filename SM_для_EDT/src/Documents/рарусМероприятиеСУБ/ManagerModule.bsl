#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс
	
// Формирует представление объекта метаданных на основном языке.
// Возвращаемое значение:
// Строка - Представление объекта метаданных на основном языке.
//
Функция ПредставлениеОбъектаНаОсновномЯзыке() Экспорт
	
	КодОсновногоЯзыка = ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка();
	
	ПредставлениеОбъекта = НСтр(
		"ru = 'Мероприятие СУБ';
		|en = 'Event'",
		КодОсновногоЯзыка);
		
	Возврат ПредставлениеОбъекта;
	
КонецФункции                                  

// См. ЗапретРедактированияРеквизитовОбъектовПереопределяемый.ПриОпределенииОбъектовСЗаблокированнымиРеквизитами.
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("ФИОКапитана");
	Результат.Добавить("Дата");
	Результат.Добавить("Судно");
	Результат.Добавить("ФиоИнспектора");
	Результат.Добавить("РезультатВыполнения");
	Результат.Добавить("КонтролирующийОрган");
	Результат.Добавить("МестоПроведения");
	Результат.Добавить("ВидМероприятия");
	Результат.Добавить("Комментарий");
	Результат.Добавить("ИдентификаторСтрокиПланГрафика");
	Результат.Добавить("МероприятиеПоПлану");
	Результат.Добавить("ПредставлениеМероприятия");
	Результат.Добавить("Анкета");
	Результат.Добавить("ДатаИнспекции");
	Результат.Добавить("ДокументыСудов");
	Результат.Добавить("Список ; СписокСоздать, СписокСкопировать");
	
	Возврат Результат;
	
КонецФункции

#Область СозданиеНаОсновании

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт

КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// ++ rarus zalikh 2021-05-07 [27315]
	// СписокЗамечаний (Microsoft Word)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "рарусСУБКлиент.ПечатьСпискаЗамечанийWord";
		КомандаПечати.МенеджерПечати = "";
		КомандаПечати.Идентификатор = "СписокЗамечанийMicrosoftWord";
		КомандаПечати.Представление = НСтр("ru = 'Список замечаний (Microsoft Word)';
		|en = 'List of comments (Microsoft Word)'");
	// -- rarus zalikh 2021-05-07 [27315]
	
	// ++ rarus zalikh 2021-08-31 [ЗНИ РАIT-0023492]
	// КраткийСписокЗамечаний
	КомандаПечати = КомандыПечати.Добавить();	
	КомандаПечати.Идентификатор = "КраткийСписокЗамечанийСУБ";
	КомандаПечати.Представление = НСтр("ru = 'Краткий список замечаний';
	                                      |en = 'List of comments'");	
	
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	// -- rarus zalikh 2021-08-31 [ЗНИ РАIT-0023492]
	
КонецПроцедуры

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "КраткийСписокЗамечанийСУБ") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм, 
		"КраткийСписокЗамечанийСУБ", 
		НСтр("ru = 'Краткий список замечаний';
		|en = 'List of comments'"), СформироватьПечатнуюКраткийСписокЗамечанийСУБ(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьПечатнуюКраткийСписокЗамечанийСУБ(МассивОбъектов, ОбъектыПечати, ВставлятьРазрывВКонцеМакета = Истина)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.рарусМероприятиеСУБ.ПФ_MXL_КраткийСписокЗамечаний");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ПолеСлева = 5;
	ТабличныйДокумент.ПолеСправа = 5;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Для Каждого Документ Из МассивОбъектов Цикл
		
		ДанныеДляПечатнойФормы = ПолучитьДанныеДляПечатнойФормы(Документ);
		
		ШапкаДокумента    = Макет.ПолучитьОбласть("Шапка");
		СтрокаТаблицы     = Макет.ПолучитьОбласть("СтрокаТЧ");
		Подвал            = Макет.ПолучитьОбласть("Подвал");
		
		РезультатПоШапке = ДанныеДляПечатнойФормы.РезультатПоШапке.Выгрузить();
		РезультатПоТЧ = ДанныеДляПечатнойФормы.РезультатПоТабличнойЧасти.Выгрузить();
		
		СтруктураШапки = Новый Структура;
		СтруктураШапки.Вставить("ДатаФормирования",    Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy"));
		СтруктураШапки.Вставить("ВидМероприятия",      РезультатПоШапке[0].ВидМероприятия);
		СтруктураШапки.Вставить("ДатаИнспекции",       Формат(РезультатПоШапке[0].ДатаИнспекции,"ДФ=dd.MM.yyyy"));
		СтруктураШапки.Вставить("ФИОИнспектора",       РезультатПоШапке[0].ФИОИнспектора);
		СтруктураШапки.Вставить("ШаблонАнкеты",        РезультатПоШапке[0].ШаблонАнкеты);
		СтруктураШапки.Вставить("КоличествоЗамечаний", РезультатПоТЧ.Количество());
		
		ШапкаДокумента.Параметры.Заполнить(СтруктураШапки);
		ТабличныйДокумент.Вывести(ШапкаДокумента);
				
		СчетчикСтроки = 0;
					
		Для Каждого тСтрока Из РезультатПоТЧ Цикл
			
			// id
			тID = "";
			Если ЗначениеЗаполнено(Документ.Анкета) Тогда
				Если ЗначениеЗаполнено(тСтрока.Ссылка.ВопросАнкетирования) Тогда
					Если РезультатПоШапке[0].ШаблонАнкеты.ВыводитьIDВопросов Тогда
						тID = тСтрока.IDВопроса;
					Иначе
						
					КонецЕсли;
				Иначе
					
				КонецЕсли;
			Иначе
				
			КонецЕсли;
			
			СчетчикСтроки = СчетчикСтроки +1;
			СтруктураТЧ = Новый Структура;
			СтруктураТЧ.Вставить("Номер",          			   СчетчикСтроки);
			СтруктураТЧ.Вставить("ОписаниеЗамечания",          тСтрока.ОписаниеЗамечания);
			СтруктураТЧ.Вставить("ID",                         тID);
			СтруктураТЧ.Вставить("ПланируемыеСрокиУстранения", Формат(тСтрока.ПланируемыеСрокиУстраненияКорДействия, "ДФ=dd.MM.yyyy"));
			СтруктураТЧ.Вставить("ДатаУстранения",             Формат(тСтрока.ДатаУстранения, "ДФ=dd.MM.yyyy"));
			
			СтрокаТаблицы.Параметры.Заполнить(СтруктураТЧ);
			ТабличныйДокумент.Вывести(СтрокаТаблицы);
						
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(Подвал);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;

КонецФункции

Функция ПолучитьДанныеДляПечатнойФормы(Документ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	рарусМероприятиеСУБ.Ссылка КАК Ссылка,
	               |	рарусМероприятиеСУБ.Судно КАК Судно,
	               |	рарусМероприятиеСУБ.Дата КАК Дата,
	               |	рарусМероприятиеСУБ.Номер КАК Номер,
	               |	рарусМероприятиеСУБ.ФИОКапитана КАК ФИОКапитана,
	               |	рарусМероприятиеСУБ.ФиоИнспектора КАК ФиоИнспектора,
	               |	рарусМероприятиеСУБ.ВидМероприятия КАК ВидМероприятия,
	               |	рарусМероприятиеСУБ.Анкета.ШаблонАнкеты КАК ШаблонАнкеты,
	               |	рарусМероприятиеСУБ.ДатаИнспекции КАК ДатаИнспекции
	               |ИЗ
	               |	Документ.рарусМероприятиеСУБ КАК рарусМероприятиеСУБ
	               |ГДЕ
	               |	рарусМероприятиеСУБ.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	vftНесоответствия.ОписаниеНесоответствия КАК ОписаниеЗамечания,
	               |	vftНесоответствия.ПланируемыеСрокиУстранения КАК ПланируемыеСрокиУстраненияКорДействия,
	               |	vftНесоответствия.ФИООтветственныйПредупреждающиеДействия КАК ФИООтветственныйПредупреждающиеДействия,
	               |	vftНесоответствия.ПредупреждающиеДействия КАК ПредупреждающиеДействия,
	               |	vftНесоответствия.ДатаУстранения КАК ДатаУстранения,
	               |	vftНесоответствия.Ссылка КАК Ссылка,
	               |	vftНесоответствия.ВопросАнкетирования.IDВопроса КАК IDВопроса,
	               |	vftНесоответствия.ВопросАнкетирования.Наименование КАК ВопросАнкетирования,
	               |	vftНесоответствия.ПричинаНесоответствия КАК ПричинаНесоответствия
	               |ИЗ
	               |	Справочник.vftНесоответствия КАК vftНесоответствия
	               |ГДЕ
	               |	vftНесоответствия.ВладелецЗамечания = &Ссылка
	               |	И НЕ vftНесоответствия.ПометкаУдаления";	
	
	Запрос.УстановитьПараметр("Ссылка", Документ);
	
	ПакетРезультатовЗапроса = Запрос.ВыполнитьПакет();
	
	СтруктураДанныхДляПечати = Новый Структура;
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке", ПакетРезультатовЗапроса[0]);
	СтруктураДанныхДляПечати.Вставить("РезультатПоТабличнойЧасти", ПакетРезультатовЗапроса[1]);
	
	Возврат СтруктураДанныхДляПечати;

КонецФункции

Функция ПолучитьДанныеПечати(знач МассивДокументов, знач МассивИменМакетов) Экспорт
	
	Возврат Новый Структура("Данные,Макеты",
				ПолучитьДанныеОбъектаПоМакетам(МассивДокументов[0].Ссылка, МассивИменМакетов),
				ПолучитьМакетыИОписанияСекций(МассивИменМакетов));
КонецФункции

Функция ПолучитьДанныеОбъектаПоМакетам(знач МассивДокументов, знач МассивИменМакетов) Экспорт
	
	ДанныеПоВсемОбъектам = Новый Соответствие;
	
	СтруктураРезультатов =  ПолучитьДанныеДляПечатнойФормы(МассивДокументов);
	
	РезультатПоШапке = СтруктураРезультатов.РезультатПоШапке.Выгрузить();
	
	ДанныеОбъекта = Новый Структура;
	ДанныеОбъекта.Вставить("Код",         РезультатПоШапке[0].Номер);
	ДанныеОбъекта.Вставить("Дата",        Формат(РезультатПоШапке[0].Дата, "ДФ=dd.MM.yy"));
	ДанныеОбъекта.Вставить("Судно",       РезультатПоШапке[0].Судно);
	ДанныеОбъекта.Вставить("Капитан",     РезультатПоШапке[0].ФИОКапитана);
	ДанныеОбъекта.Вставить("ИнспектирующийОрган", " ");
	ДанныеОбъекта.Вставить("Инспектор",   РезультатПоШапке[0].ФиоИнспектора);
	ДанныеОбъекта.Вставить("МестоИнспекции", " ");
	ДанныеОбъекта.Вставить("ДатаИнспекции", " ");
	
	Замечания = СтруктураРезультатов.РезультатПоТабличнойЧасти.Выгрузить();
	
	ДанныеОбъекта.Вставить("Замечания",Новый Массив);
	
	Номер = 0;
	
	Для Каждого тЗамечание Из Замечания Цикл 
			
		Номер = Номер + 1;
		
		КорректирующиеДействия = "";
		ИтогСтрПоКорДействиям = "";
		Для Каждого Подразделение Из тЗамечание.Ссылка.ЗоныОтветственности Цикл
			КорректирующиеДействия = Строка(Подразделение.КорректирующиеДействия) + Символы.ПС  + КорректирующиеДействия;
		КонецЦикла;  
		СтрокаРазделитель = "; " ;	
		ИтогСтрПоКорДействиям = СтрЗаменить(КорректирующиеДействия, Символы.НПП, " ");		
					
		СтрокаТаблицы = Новый Структура;
		СтрокаТаблицы.Вставить("Ном",                     Номер);
		СтрокаТаблицы.Вставить("IDВопроса",               тЗамечание.IDВопроса);
		СтрокаТаблицы.Вставить("ВопросАнкетирования",     тЗамечание.ВопросАнкетирования);
		СтрокаТаблицы.Вставить("Замечание",               тЗамечание.ОписаниеЗамечания);
		СтрокаТаблицы.Вставить("Причина",                 тЗамечание.ПричинаНесоответствия);
		СтрокаТаблицы.Вставить("КорДействия",             ИтогСтрПоКорДействиям);
		СтрокаТаблицы.Вставить("ОтветЛицо",               тЗамечание.ФИООтветственныйПредупреждающиеДействия);
		СтрокаТаблицы.Вставить("ПредупреждающиеДействия", тЗамечание.ПредупреждающиеДействия);
		СтрокаТаблицы.Вставить("Капитан",                 РезультатПоШапке[0].ФИОКапитана);
		СтрокаТаблицы.Вставить("ДатаУстранения",          Формат(тЗамечание.ПланируемыеСрокиУстраненияКорДействия, "ДФ=dd.MM.yy")); 
		СтрокаТаблицы.Вставить("ДатаЗакрытия",            Формат(тЗамечание.ДатаУстранения,"ДФ=dd.MM.yy"));
		
		ДанныеОбъекта.Замечания.Добавить(СтрокаТаблицы);
		
	КонецЦикла;
	
	ДанныеПоВсемОбъектам.Вставить(МассивДокументов, ДанныеОбъекта);
	
	Возврат ДанныеПоВсемОбъектам;

КонецФункции

Функция ПолучитьМакетыИОписанияСекций(знач МассивИменМакетов) Экспорт
	
	ОписаниеСекций = Новый Структура;
	ДвоичныеДанныеМакетов = Новый Структура;
	
	Для Каждого ИмяМакета Из МассивИменМакетов Цикл
		
		Макет = Неопределено;
		ОписаниеСекцийМакета = Неопределено;
		
		Если ИмяМакета = "ПФ_DOC_СписокЗамечаний" Тогда
			ОписаниеСекцийМакета = ПолучитьОписаниеОбластейСписокЗамечаний();
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.рарусМероприятиеСУБ.ПФ_DOC_СписокЗамечаний");
		КонецЕсли;
		
		Если ОписаниеСекцийМакета <> Неопределено И Макет <> Неопределено Тогда
			
			ОписаниеСекций.Вставить(ИмяМакета, ОписаниеСекцийМакета);
			ДвоичныеДанныеМакетов.Вставить(ИмяМакета, Макет);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Новый Структура("ОписаниеСекций,ДвоичныеДанныеМакетов",
	                         ОписаниеСекций,ДвоичныеДанныеМакетов);

КонецФункции

Функция ПолучитьОписаниеОбластейСписокЗамечаний()
	
	Секции = Новый Структура;
	
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "ВерхнийКолонтитул", "ВерхнийКолонтитул");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "НижнийКолонтитул",  "НижнийКолонтитул");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "Шапка",			   "Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "Замечания",		   "СтрокаТаблицы");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "Подпись",		   "Общая");
			
	Возврат Секции;
 
КонецФункции

#КонецОбласти

#Область Отчеты

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	КомандаОтчет = Отчеты.рарусОтчетПоЗамечаниям.ДобавитьКомандуОтчета(КомандыОтчетов); 
	Если КомандаОтчет <> Неопределено Тогда
		КомандаОтчет.ВидимостьВФормах = "ФормаСписка";
		КомандаОтчет.Порядок = 1;
	КонецЕсли;

	КомандаОтчет = Отчеты.рарусОтчетПоПроведеннымМероприятиямСУБ.ДобавитьКомандуОтчета(КомандыОтчетов); 
	Если КомандаОтчет <> Неопределено Тогда
		КомандаОтчет.ВидимостьВФормах = "ФормаСписка";
		КомандаОтчет.Порядок = 2;
	КонецЕсли;

КонецПроцедуры

#Область РегистрацияОбмена

Процедура ПередОбработкой(ИмяПланаОбмена, Отказ, Объект, Объектметаданных, Выгрузка, ПРО) Экспорт
	
	рарусОбменСУБСервер.ПередОбработкой(ИмяПланаОбмена, Отказ, Объект, Объектметаданных, Выгрузка, ПРО);
	
КонецПроцедуры	

Процедура ПослеОбработки(ИмяПланаОбмена, Отказ, Объект, Объектметаданных, Выгрузка, Получатели) Экспорт

КонецПроцедуры

#КонецОбласти

#Область Прочее

#КонецОбласти

#КонецОбласти

#КонецОбласти		
	
#КонецЕсли
