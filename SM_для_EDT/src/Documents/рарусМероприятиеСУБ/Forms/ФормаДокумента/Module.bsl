#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
	Если Параметры.ЗначенияЗаполнения.Количество() > 0 Тогда			
		ЗаполнитьДаннымиРеквизитыФормы(ЭтотОбъект, Параметры.ЗначенияЗаполнения);		
	КонецЕсли;
		
	НастроитьДоступностьРеквизитовФормы(ЭтотОбъект);
	
	УстановитьСвойстваЭлементов(ЭтотОбъект);

	Если Не Параметры.Ключ.Пустая() тогда
		
		ПараметрыСтроки = ПолучитьДанныеДанныеДинамическогоСписка();
		
		СформироватьТекстРасшифровкиКоличестваЗамечаний(ЭтотОбъект, ПараметрыСтроки);
		
	КонецЕсли;

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//СтандартныеПодсистемы.РаботаСФайлами
	ПараметрыГиперссылки = РаботаСФайлами.ГиперссылкаФайлов();
	ПараметрыГиперссылки.Размещение = "КоманднаяПанель";
	РаботаСФайлами.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыГиперссылки);
	//Конец СтандартныеПодсистемы.РаботаСФайлами
	
	ДополнительныеПараметры = рарусСУБСервер.ПараметрыПриСозданииНаСервере();
	ДополнительныеПараметры.Форма = ЭтотОбъект;
	ИспользоватьКоманду = рарусСУБСервер.ПолучитьПризнакОтображенияКомандыСменыСтатусов(Объект.Статус);
	ДополнительныеПараметры.ИспользоватьКоманду = ИспользоватьКоманду;	
	ДополнительныеПараметры.МестоРазмещенияКоманд =  Элементы.ПодменюСтатус;
	
	рарусСУБСервер.РазместитьКомандуОтменыСтатусаНаФорме(ДополнительныеПараметры);

	Если Объект.Статус = Перечисления.vftСтатусыДокументовСообщений.Проведено Тогда
		ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	КонецЕсли;
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
		
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
		
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	Если Объект.Статус = Перечисления.vftСтатусыДокументовСообщений.Проведено Тогда
		ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	КонецЕсли;
	
	//rarus_AfoD 30.08.2021 < 
	УстановитьОтборДинамическогоСпискаФормы(ЭтотОбъект);
	//rarus_AfoD 30.08.2021 > 
	
	СобытияФорм.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
			
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.РаботаСФайлами
	РаботаСФайламиКлиент.ПриОткрытии(ЭтотОбъект, Отказ);
	// Конец СтандартныеПодсистемы.РаботаСФайлами

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)// ++ rarus zalikh 2021-05-06 [27313]
	
	Если ИмяСобытия = "ОбновитьСписокЖурналДокументов" 
		Или ИмяСобытия = "Проведение_Анкета" Или ИмяСобытия = "Запись_Анкета" Тогда
		
		Элементы.Список.Обновить();
		//обновление табл части Замечания и надписи по замечаниям
		ПараметрыСтроки = ПолучитьДанныеДанныеДинамическогоСписка();
		СформироватьТекстРасшифровкиКоличестваЗамечаний(ЭтотОбъект, ПараметрыСтроки);
		УстановитьОтборДинамическогоСпискаФормы(ЭтотОбъект);
		
		Если ТипЗнч(Источник) = Тип("ДокументСсылка.Анкета") Тогда
			Если ЗначениеЗаполнено(Объект.Анкета) Тогда
				АнкетаЗаполнена = Истина;				
			КонецЕсли;		
		КонецЕсли;
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.РаботаСФайлами
	РаботаСФайламиКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия);
	// Конец СтандартныеПодсистемы.РаботаСФайлами

	
КонецПроцедуры // -- rarus zalikh 2021-05-06 [27313]

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуСменыСтатуса(Команда)

	рарусСУБКлиент.ПриИзмененииСменыСтатуса(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

// СтандартныеПодсистемы.РаботаСФайлами
&НаКлиенте
Процедура Подключаемый_КомандаПанелиПрисоединенныхФайлов(Команда)
	
	РаботаСФайламиКлиент.КомандаУправленияПрисоединеннымиФайлами(ЭтотОбъект, Команда);

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраНажатие(Элемент, СтандартнаяОбработка)
	РаботаСФайламиКлиент.ПолеПредпросмотраНажатие(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	РаботаСФайламиКлиент.ПолеПредпросмотраПеретаскивание(ЭтотОбъект, Элемент,ПараметрыПеретаскивания, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	РаботаСФайламиКлиент.ПолеПредпросмотраПроверкаПеретаскивания(ЭтотОбъект, Элемент,ПараметрыПеретаскивания, СтандартнаяОбработка);
КонецПроцедуры
// СтандартныеПодсистемы.РаботаСФайлами

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда) Экспорт
	
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды() Экспорт
	
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
    ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура МероприятиеПроведено(Команда)
			
	Статус = ПредопределенноеЗначение("Перечисление.vftСтатусыДокументовСообщений.Проведено");
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Статус", Статус); 
	СтруктураПараметров.Вставить("ОбластьСоздания", Объект.ОбластьСоздания); 
	
	ТекстВопроса = "Мероприятие СУБ будет зарегистрировано к отправке в береговую систему. Продолжить?";
	
	ОписаниеОповещения = Новый ОписаниеОповещения("УстановитьСтатусСогласованияЗавершение", ЭтотОбъект, СтруктураПараметров);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	рарусСУБСервер.УстановитьУсловноеОформление(ЭтотОбъект);
	
	УстановитьОтборДинамическогоСпискаФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуИОбновитьРеквизиты()
			
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСвойстваЭлементов(Форма)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;

	МассивЭлементов = Новый Массив();
	
	ОтметкаНезаполненного = Истина;
	ФиоИнспектораОтметкаНезаполненого = Истина;	
	
	ТипМероприятия = Форма.ТипМероприятия;
	
	Если ТипМероприятия <> ПредопределенноеЗначение("Перечисление.рарусТипыМероприятия.ПустаяСсылка") Тогда
		
		Если ТипМероприятия 
			= ПредопределенноеЗначение("Перечисление.рарусТипыМероприятия.ОсвидетельствованиеСудна") 
			Или ТипМероприятия 
			= ПредопределенноеЗначение("Перечисление.рарусТипыМероприятия.ВнешнийАудит") 
			Или ТипМероприятия  
			= ПредопределенноеЗначение("Перечисление.рарусТипыМероприятия.ОсвидетельствованиеКомпании") Тогда
			
			ФиоИнспектораОтметкаНезаполненого = Ложь;				
						
		КонецЕсли;                                                                   		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФиоИнспектора", "АвтоОтметкаНезаполненного", ФиоИнспектораОтметкаНезаполненого);
	
	Если Объект.Статус = ПредопределенноеЗначение("Перечисление.vftСтатусыДокументовСообщений.Черновик") Тогда
				
		ОтметкаНезаполненного =  Ложь;
			
		МассивЭлементов.Добавить("Судно");
		МассивЭлементов.Добавить("МестоПроведения");	
		МассивЭлементов.Добавить("ДатаИнспекции");		
		МассивЭлементов.Добавить("Капитан");	
		МассивЭлементов.Добавить("ФиоИнспектора");	
				
		Для Каждого Элемент Из МассивЭлементов Цикл 
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, Элемент, "АвтоОтметкаНезаполненного", ОтметкаНезаполненного);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьДоступностьРеквизитовФормы(Форма)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	Элементы.МероприятиеПоПлану.ТолькоПросмотр = Не ЗначениеЗаполнено(Объект.Судно);	
	
	Элементы.ПредставлениеМероприятия.ТолькоПросмотр = Не Объект.МероприятиеПоПлану;
															 
	Элементы.ВидМероприятия.ТолькоПросмотр =  Объект.МероприятиеПоПлану;	
	
	ЗаполненВидМероприятия = ЗначениеЗаполнено(Объект.ВидМероприятия);
			
	РеквизитыВидаМероприятий = ?(ЗаполненВидМероприятия, 
	                               ПолучитьЗначениеРеквизитовВидаМероприятия(Объект.ВидМероприятия),
	                                   Новый Структура("ВидМероприятия, ИмеетРезультатВыполнения, ТипМероприятия"
									                     , Ложь, Ложь, ПредопределенноеЗначение("Перечисление.рарусТипыМероприятия.ПустаяСсылка")));

	Форма.ТипМероприятия = РеквизитыВидаМероприятий.ТипМероприятия;
													 
														 													 
	РезультатВыполненияТолькоПросмотр = Истина;	
	Если ЗаполненВидМероприятия Тогда
		Если РеквизитыВидаМероприятий.ИмеетРезультатВыполнения Тогда
			РезультатВыполненияТолькоПросмотр = Ложь;	
		КонецЕсли;													  
	КонецЕсли;											  
	
	Элементы.РезультатВыполнения.ТолькоПросмотр = РезультатВыполненияТолькоПросмотр;
	
	Элементы.КонтролирующийОрган.ТолькоПросмотр 
	          = РеквизитыВидаМероприятий.ТипМероприятия 
			           = ПредопределенноеЗначение("Перечисление.рарусТипыМероприятия.ВнутреннийАудит");											  
												  
	СтатусПроведено	= Объект.Статус = ПредопределенноеЗначение("Перечисление.vftСтатусыДокументовСообщений.Проведено");
										  											  
	Элементы.МероприятиеПроведено.Видимость = Не СтатусПроведено;
													  												  																							  
	// ++ rarus zalikh 24.04.2021 27313 ФТ.СУБ.05.04
	// добавлен код для настройки видимости команды "ПровестиАудит"
	тШаблонОпроса = ПолучитьШаблонаОпросаУВидаМероприятия(Объект.ВидМероприятия);
	Если тШаблонОпроса = Неопределено Тогда
		Элементы.ФормаПровестиАудит.Видимость = Ложь;
	Иначе
		Элементы.ФормаПровестиАудит.Видимость = Истина;
	КонецЕсли;
	// -- rarus zalikh 24.04.2021 27313 ФТ.СУБ.05.04
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборДинамическогоСпискаФормы(Форма)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Форма.Список.Отбор, "ВладелецЗамечания",
	   ?(ЗначениеЗаполнено(Объект.Ссылка), Объект.Ссылка, 
	      ПредопределенноеЗначение("Документ.рарусМероприятиеСУБ.ПустаяСсылка")
	         ),ВидСравненияКомпоновкиДанных.Равно,,Истина);

КонецПроцедуры

#КонецОбласти

#Область ПриИзмененииРеквизитов

&НаКлиенте
Процедура СудноПриИзменении(Элемент)
	
	НастроитьДоступностьРеквизитовФормы(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура МероприятиеПоПлануПриИзменении(Элемент)
	
	НастроитьДоступностьРеквизитовФормы(ЭтотОбъект);
	
	Если Не Объект.МероприятиеПоПлану Тогда
		Объект.ПредставлениеМероприятия = " ";	 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУченияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Ссылка", Объект.Ссылка);
	ПараметрыОткрытия.Вставить("Судно",  Объект.Судно);

	ОписаниеОповещения  = Новый ОписаниеОповещения("ПредставлениеУченияНачалоВыбораЗавершение", ЭтотОбъект);	
	
	ОткрытьФорму("Документ.рарусМероприятиеСУБ.Форма.ВыборПланГрафика", ПараметрыОткрытия, , , , ,ОписаниеОповещения, 
	      РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидМероприятияПриИзменении(Элемент) // ++ rarus zalikh 24.04.2021 [27313] ФТ.СУБ.05.04
	
	НастроитьДоступностьРеквизитовФормы(ЭтотОбъект);
	УстановитьСвойстваЭлементов(ЭтотОбъект);

КонецПроцедуры // -- rarus zalikh 24.04.2021 [27313] ФТ.СУБ.05.04

#КонецОбласти

#Область Прочее

&НаКлиенте
Процедура ПредставлениеУченияНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт 
	
	ВозвращаемыеПараметры = Результат;
	
	Если ВозвращаемыеПараметры <> Неопределено Тогда
		ЗаполнитьДаннымиРеквизитыФормы(ЭтотОбъект, ВозвращаемыеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьДаннымиРеквизитыФормы(Форма, ПараметрыЗаполнения = Неопределено)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	Объект.ПредставлениеМероприятия       = СформироватьПредставлениеПоляФормыУчения(ПараметрыЗаполнения);
	Объект.ВидМероприятия                 = ПараметрыЗаполнения.ВидМероприятия;
	Объект.ИдентификаторСтрокиПланГрафика = ПараметрыЗаполнения.ИдентификаторСтроки;
		
	Если ПараметрыЗаполнения.ТипМероприятия 
		= ПредопределенноеЗначение("Перечисление.рарусТипыМероприятия.ОсвидетельствованиеСудна") 
		    Или ПараметрыЗаполнения.ТипМероприятия 
		       = ПредопределенноеЗначение("Перечисление.рарусТипыМероприятия.ВнешнийАудит") 
		          Или ПараметрыЗаполнения.ТипМероприятия  
		            = ПредопределенноеЗначение("Перечисление.рарусТипыМероприятия.ОсвидетельствованиеКомпании") Тогда
		Объект.КонтролирующийОрган = ПараметрыЗаполнения.КонтролирующийОрган;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ТипМероприятия 
		= ПредопределенноеЗначение("Перечисление.рарусТипыМероприятия.ВнутреннийАудит") Тогда		   
		Объект.КонтролирующийОрган = ПредопределенноеЗначение("Справочник.рарусКонтролирующиеОрганы.ПустаяСсылка");		
	КонецЕсли;
	
	НастроитьДоступностьРеквизитовФормы(Форма);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СформироватьПредставлениеПоляФормыУчения(СтрокаДанных)	
			
	ПредставлениеПериода = Строка(Формат(СтрокаДанных.ПериодС, "ДФ=dd.MM.yy")) 
	         + "-" + Строка(Формат(СтрокаДанных.ПериодПо, "ДФ=dd.MM.yy")); 
	
	СтрокаПредставления = Строка(СтрокаДанных.ВидМероприятия) + "; " + Строка(СтрокаДанных.ОбъектПроверки) + "; " + ПредставлениеПериода;	
	
	Возврат СтрокаПредставления;	
	
КонецФункции

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
		
	Отказ = Истина;	
		
	Если ЗначениеЗаполнено(Объект.Ссылка) И Не Модифицированность Тогда	
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Ключ", Объект.Ссылка);
		
		ПараметрыЗаполнения = Новый Структура;
		ПараметрыЗаполнения.Вставить("ВладелецЗамечания", Объект.Ссылка);
		// ++ rarus zalikh 2021-05-05 [27313]
		ПараметрыЗаполнения.Вставить("Владелец", ПредопределенноеЗначение("Справочник.vftДокладыОНесоответствии.рарусВременныйДоклад"));
		// -- rarus zalikh 2021-05-05 [27313]
		ПараметрыЗаполнения.Вставить("Судно",          Объект.Судно);
		ПараметрыЗаполнения.Вставить("Статус",         Объект.Статус);
				
		Если Копирование Тогда  
			
			ТекущаяСтрока = Элемент.ТекущиеДанные;
			
			ПараметрыКопирования = ПолучитьЗначениеРеквизитовЗамечанияДляКопирования(ТекущаяСтрока.Ссылка);
			
			ПараметрыЗаполнения.Вставить("ТипЗамечания",            ПараметрыКопирования.ТипЗамечания);
			ПараметрыЗаполнения.Вставить("ВопросАнкетирования",     ПараметрыКопирования.ВопросАнкетирования);
			ПараметрыЗаполнения.Вставить("ОписаниеНесоответствия",  ПараметрыКопирования.ОписаниеНесоответствия);
			ПараметрыЗаполнения.Вставить("ПричинаНесоответствия",   ПараметрыКопирования.ПричинаНесоответствия);
			ПараметрыЗаполнения.Вставить("КорректирующиеДействия",  ПараметрыКопирования.КорректирующиеДействия);
			ПараметрыЗаполнения.Вставить("ПредупреждающиеДействия", ПараметрыКопирования.ПредупреждающиеДействия);
			ПараметрыЗаполнения.Вставить("КодЗамечаний",            ПараметрыКопирования.КодЗамечаний);
			ПараметрыЗаполнения.Вставить("КодУстраненияЗамечания",  ПараметрыКопирования.КодУстраненияЗамечания);
			ПараметрыЗаполнения.Вставить("СсылкаНаДокумент",        ПараметрыКопирования.СсылкаНаДокумент);
			ПараметрыЗаполнения.Вставить("ОписаниеССайтаOCIMF",     ПараметрыКопирования.ОписаниеССайтаOCIMF);
			ПараметрыЗаполнения.Вставить("ДополнительныйКомментарийНесоответствие", ПараметрыКопирования.ДополнительныйКомментарийНесоответствие);
			
		КонецЕсли;		
			
		ОписаниеОповещения  = Новый ОписаниеОповещения("СозданиеЗамечанийНачалоВыбораЗавершение", ЭтотОбъект);
		
		ОткрытьФорму("Справочник.vftНесоответствия.ФормаОбъекта",
		    Новый Структура("ЗначенияЗаполнения, ДополнительныеПараметры", 
		    ПараметрыЗаполнения, ДополнительныеПараметры), ЭтотОбъект,,,,ОписаниеОповещения, 
		    РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
	Иначе
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Доклад не записан. Для добавления несоответствий запишите документ.';
		                                                      |en = 'You must fill in the Corrective Action field on the page: Remarks'"));
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СозданиеЗамечанийНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт 
	
	Элементы.Список.Обновить();
	
	ВозвращаемыеПараметры = Результат;
	
	Если ВозвращаемыеПараметры <> Неопределено Тогда
		
		ПараметрыСтроки = ПолучитьДанныеДанныеДинамическогоСписка();
		
		СформироватьТекстРасшифровкиКоличестваЗамечаний(ЭтотОбъект, ПараметрыСтроки);
		
		УстановитьОтборДинамическогоСпискаФормы(ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеДанныеДинамическогоСписка()
		
	ТекстЗапроса = "ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ vftНесоответствия.Ссылка) КАК ЗамечанийВсего
	|ИЗ
	|	Справочник.vftНесоответствия КАК vftНесоответствия
	|ГДЕ
	|	vftНесоответствия.ВладелецЗамечания = &ВладелецЗамечания
	|	И НЕ vftНесоответствия.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ vftНесоответствия.Ссылка) КАК ОткрытыхЗамечаний
	|ИЗ
	|	Справочник.vftНесоответствия КАК vftНесоответствия
	|ГДЕ
	|	vftНесоответствия.ВладелецЗамечания = &ВладелецЗамечания
	|	И vftНесоответствия.Статус <> ЗНАЧЕНИЕ(перечисление.vftСтатусыДокументовСообщений.Закрыт)
	|	И НЕ vftНесоответствия.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ vftНесоответствия.Ссылка) КАК ЗакрытыеЗамечания
	|ИЗ
	|	Справочник.vftНесоответствия КАК vftНесоответствия
	|ГДЕ
	|	vftНесоответствия.ВладелецЗамечания = &ВладелецЗамечания
	|	И vftНесоответствия.Статус = ЗНАЧЕНИЕ(Перечисление.vftСтатусыДокументовСообщений.Закрыт)
	|	И НЕ vftНесоответствия.ПометкаУдаления";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ВладелецЗамечания", Объект.Ссылка);
	
	ПакетРезультатовЗапроса = Запрос.ВыполнитьПакет();
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ВсегоЗамечаний",    ПакетРезультатовЗапроса[0].Выгрузить()[0].ЗамечанийВсего);
	СтруктураПараметров.Вставить("ОткрытыеЗамечания", ПакетРезультатовЗапроса[1].Выгрузить()[0].ОткрытыхЗамечаний);
	СтруктураПараметров.Вставить("ЗакрытыеЗамечания", ПакетРезультатовЗапроса[2].Выгрузить()[0].ЗакрытыеЗамечания);
	
	Возврат СтруктураПараметров; 
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьЗначениеРеквизитовВидаМероприятия(ВидМероприятияСУБ)
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВидМероприятияСУБ, "ВидМероприятия, ИмеетРезультатВыполнения, ТипМероприятия");
	
КонецФункции

&НаКлиенте
Процедура УстановитьСтатусСогласованияЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		УстановитьСтатусСогласованияЗаписатьИЗакрыть(ДополнительныеПараметры);
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатусСогласованияЗаписатьИЗакрыть(ПараметрыСогласования)
		
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("РежимЗаписи", РежимЗаписиДокумента.Запись);
	
	ТекущийСтатус = Объект.Статус;
	
	Объект.Статус = ПараметрыСогласования.Статус;
	
	Если ПроверитьЗаполнение() И ПроверитьПодчиненныыеЗамечанияПередОтправкой(Объект.Ссылка) Тогда
		Записать(ПараметрыЗаписи);
		Закрыть();
	Иначе
		Объект.Статус = ТекущийСтатус; 
		Модифицированность = Истина;
	КонецЕсли;	

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьПодчиненныыеЗамечанияПередОтправкой(ДокументСсылка)
		
	Запрос = Новый Запрос;
	
	ТекстЗапроса = ПолучитьТексЗапросаДляЗамечаний();	
	ТекстЗапроса = ТекстЗапроса + " И Несоответствия.Статус = ЗНАЧЕНИЕ(Перечисление.vftСтатусыДокументовСообщений.Черновик)"; 
	
	Запрос.Текст = ТекстЗапроса; 
	
	Запрос.УстановитьПараметр("ВладелецЗамечания",ДокументСсылка);
	
	ТаблицаЗамечаний = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаЗамечаний.Количество() = 0 Тогда
		Возврат Истина;			
	КонецЕсли;
	
	Для Каждого СтрокаТч Из ТаблицаЗамечаний Цикл
		
		ОбъектЗамечание = СтрокаТч.Ссылка.ПолучитьОбъект();
		ОбъектЗамечание.Статус = Перечисления.vftСтатусыДокументовСообщений.Отправлен;
		
		Отказ = Не ОбъектЗамечание.ПроверитьЗаполнение();
		
		Если Отказ Тогда			
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Не Отказ Тогда
		
		Для Каждого СтрокаТч Из ТаблицаЗамечаний Цикл
			
			ОбъектЗамечание = СтрокаТч.Ссылка.ПолучитьОбъект();
			ОбъектЗамечание.Статус = Перечисления.vftСтатусыДокументовСообщений.Отправлен;
			
			НачатьТранзакцию();	
			
			Попытка
					
				ОбъектЗамечание.Записать();	
				ЗафиксироватьТранзакцию();
				
			Исключение
				
				ОтменитьТранзакцию();
				ВызватьИсключение;
				
			КонецПопытки;
			
		КонецЦикла;
		
	Иначе
		Возврат Ложь;				
	КонецЕсли;
	
	Возврат Истина;	
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТексЗапросаДляЗамечаний()
	
	Возврат "ВЫБРАТЬ
	|	Несоответствия.Ссылка КАК Ссылка,
	|	Несоответствия.Статус КАК Статус
	|ИЗ
	|	Справочник.vftНесоответствия КАК Несоответствия
	|ГДЕ
	|	Несоответствия.ВладелецЗамечания = &ВладелецЗамечания"
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьЗначениеРеквизитовЗамечанияДляКопирования(Замечание)
	
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	|	vftНесоответствия.ОписаниеНесоответствия КАК ОписаниеНесоответствия,
	|	vftНесоответствия.ПричинаНесоответствия КАК ПричинаНесоответствия,
	|	vftНесоответствия.КорректирующиеДействия КАК КорректирующиеДействия,
	|	vftНесоответствия.СсылкаНаДокумент КАК СсылкаНаДокумент,
	|	vftНесоответствия.ПредупреждающиеДействия КАК ПредупреждающиеДействия,
	|	vftНесоответствия.КодУстраненияЗамечания КАК КодУстраненияЗамечания,
	|	vftНесоответствия.КодЗамечаний КАК КодЗамечаний,
	|	vftНесоответствия.ОписаниеССайтаOCIMF КАК ОписаниеССайтаOCIMF,
	|	vftНесоответствия.ДополнительныйКомментарийНесоответствие КАК ДополнительныйКомментарийНесоответствие,
	|	vftНесоответствия.ТипЗамечания КАК ТипЗамечания,
	|	vftНесоответствия.ВопросАнкетирования КАК ВопросАнкетирования
	|ИЗ
	|	Справочник.vftНесоответствия КАК vftНесоответствия
	|ГДЕ
	|	vftНесоответствия.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Замечание);
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Выборка.Следующий();
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ОписаниеНесоответствия",                  Выборка.ОписаниеНесоответствия); 
	СтруктураПараметров.Вставить("ПричинаНесоответствия",                   Выборка.ПричинаНесоответствия); 
	СтруктураПараметров.Вставить("КорректирующиеДействия",                  Выборка.КорректирующиеДействия); 
	СтруктураПараметров.Вставить("СсылкаНаДокумент",                        Выборка.СсылкаНаДокумент); 
	СтруктураПараметров.Вставить("ПредупреждающиеДействия",                 Выборка.ПредупреждающиеДействия); 
	СтруктураПараметров.Вставить("КодУстраненияЗамечания",                  Выборка.КодУстраненияЗамечания); 
	СтруктураПараметров.Вставить("КодЗамечаний",                            Выборка.КодЗамечаний); 
	СтруктураПараметров.Вставить("ОписаниеССайтаOCIMF",                     Выборка.ОписаниеССайтаOCIMF); 
	СтруктураПараметров.Вставить("ДополнительныйКомментарийНесоответствие", Выборка.ДополнительныйКомментарийНесоответствие); 
	СтруктураПараметров.Вставить("ТипЗамечания",                            Выборка.ТипЗамечания); 
	СтруктураПараметров.Вставить("ВопросАнкетирования",                     Выборка.ВопросАнкетирования); 
 
	Возврат СтруктураПараметров;
		
КонецФункции

#КонецОбласти

#Область ВыводНадписей

&НаКлиентеНаСервереБезКонтекста
Процедура СформироватьТекстРасшифровкиКоличестваЗамечаний(Форма, ПараметрыСтроки)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;

	ВсегоЗамечений = "всего" + " " + Строка(ПараметрыСтроки.ВсегоЗамечаний);
	ОткрытыеЗамечания = "открытых" + " " + Строка(ПараметрыСтроки.ОткрытыеЗамечания);
	ЗакрытыеЗамечания = "закрытых" + " " + Строка(ПараметрыСтроки.ЗакрытыеЗамечания);
	
	НадписьЗамечаний  = "Замечаний: " + ВсегоЗамечений + " " + ОткрытыеЗамечания + " " + ЗакрытыеЗамечания; 

	ПоясняющийТекст = Новый ФорматированнаяСтрока(НадписьЗамечаний, Новый Шрифт("Arial", 11, Ложь, Ложь, Ложь, Ложь, 90));
		
	Форма.КоличествоЗамечаний = ПараметрыСтроки.ВсегоЗамечаний;
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
	Элементы,
	"ДекорацияКоличествоЗамечаний",
	"Заголовок",
	ПоясняющийТекст);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияКоличествоЗамечанийНажатие(Элемент)
	
	ЭтаФорма.ТекущийЭлемент = Элементы.СтраницаЗамечания;

КонецПроцедуры

#КонецОбласти

// ++ rarus zalikh 2021-05-08
//добавлена область Анкетирование
#Область Анкетирование

&НаКлиенте
Процедура ПровестиАудит(Команда) // ++ rarus zalikh 24.04.2021 [27313] ФТ.СУБ.05.04
	
	Если Объект.Ссылка.Пустая() Тогда
		ТекстВопроса = НСтр("ru = 'Данные еще не записаны.
		|Проведение аудита возможно только после записи данных.
		|Данные будут записаны.'");
		ОбработчикОповещения = Новый ОписаниеОповещения("ПоказатьВопросЗаписиНовогоВладельца", ЭтотОбъект);
		
		ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		
	Иначе
		ОткрытьФормуИнтервью();
	КонецЕсли;
	
КонецПроцедуры // -- rarus zalikh 24.04.2021 [27313] ФТ.СУБ.05.04

&НаКлиенте
Процедура ПоказатьВопросЗаписиНовогоВладельца(Ответ, ДополнительныеПараметры) Экспорт // ++ rarus zalikh 24.04.2021 [27313] ФТ.СУБ.05.04
	
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		
		Если Не ЭтаФорма.Записать() Тогда
			Возврат;
		КонецЕсли;
		
		ОткрытьФормуИнтервью();
	
	КонецЕсли;
	
КонецПроцедуры // -- rarus zalikh 24.04.2021 [27313] ФТ.СУБ.05.04

// Открывает форму новой анкеты в режиме интервью с выбранным респондентом и шаблоном анкеты.
&НаКлиенте
Процедура ОткрытьФормуИнтервью() // ++ rarus zalikh 24.04.2021 [27313] ФТ.СУБ.05.04
	
	тШаблонОпроса = ПолучитьШаблонаОпросаУВидаМероприятия(Объект.ВидМероприятия);
	
	Если Объект.Анкета.Пустая() Тогда
		//если анкета не создана покажем список шаблонов анкет
		Оповещение = Новый ОписаниеОповещения("ОткрытьФормуИнтервьюЗавершение", ЭтотОбъект, Параметры);
		ПоказатьВводЗначения(Оповещение, тШаблонОпроса, "Выберите шаблон опроса", Тип("СправочникСсылка.ШаблоныАнкет"));
	Иначе
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ТолькоФормаЗаполнения", Истина);
		ПараметрыФормы.Вставить("ВозможностьПредварительногоСохранения", Истина);
		ПараметрыФормы.Вставить("Ключ", Объект.Анкета);
		
		ФормаАнкеты = ОткрытьФорму("Документ.Анкета.ФормаОбъекта", ПараметрыФормы);
	КонецЕсли;

КонецПроцедуры // -- rarus zalikh 24.04.2021 [27313] ФТ.СУБ.05.04

// Обработчик результата работы процедуры ОткрытьФормуИнтервью.
&НаКлиенте
Процедура ОткрытьФормуИнтервьюЗавершение(ВыбранныйШаблон, Респондент) Экспорт // ++ rarus zalikh 24.04.2021 [27313] ФТ.СУБ.05.04
	Если ВыбранныйШаблон = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	тАнкета = СоздатьНовуюАнкету(Объект.Ссылка, ВыбранныйШаблон);
	Если тАнкета.Пустая() Тогда
		Возврат;
	Иначе
		//запишем новый реквизит Анкета
		Объект.Анкета = тАнкета;
		ЭтаФорма.Модифицированность = Истина;
		//открываем форму анкеты
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ТолькоФормаЗаполнения", Истина);
		ПараметрыФормы.Вставить("ВозможностьПредварительногоСохранения", Истина);
		ПараметрыФормы.Вставить("Ключ", Объект.Анкета);
		
		ФормаАнкеты = ОткрытьФорму("Документ.Анкета.ФормаОбъекта", ПараметрыФормы);
	КонецЕсли; 
КонецПроцедуры // -- rarus zalikh 24.04.2021 [27313] ФТ.СУБ.05.04

&НаСервереБезКонтекста
Функция СоздатьНовуюАнкету(тМероприятиеСУБ, тШаблонАнкеты) // ++ rarus zalikh 24.04.2021 [27313] ФТ.СУБ.05.04
	//создаем анкету
	Попытка
		нАнкета = Документы.Анкета.СоздатьДокумент();
		нАнкета.Дата = ТекущаяДатаСеанса();
		нАнкета.рарусМероприятиеСУБ = тМероприятиеСУБ;
		нАнкета.РежимАнкетирования = Перечисления.РежимыАнкетирования.Интервью;
		нАнкета.ШаблонАнкеты = тШаблонАнкеты;
		нАнкета.Записать(РежимЗаписиДокумента.Запись);
		Возврат нАнкета.Ссылка;
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не удалось создать анкету по причине: " + ОписаниеОшибки();
		Сообщение.Сообщить();
		Возврат Документы.Анкета.ПустаяСсылка();
	КонецПопытки;
КонецФункции // -- rarus zalikh 24.04.2021 [27313] ФТ.СУБ.05.04

&НаСервереБезКонтекста
Функция ПолучитьШаблонаОпросаУВидаМероприятия(ВидМероприятияСУБ) // ++ rarus zalikh 24.04.2021 [27313] ФТ.СУБ.05.04
	РеквизитШаблонОпроса = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВидМероприятияСУБ, "ШаблонОпроса");
	Возврат РеквизитШаблонОпроса.ШаблонОпроса;
КонецФункции // -- rarus zalikh 24.04.2021 [27313] ФТ.СУБ.05.04

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
		
	Если АнкетаЗаполнена И ЭтотОбъект.Модифицированность Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Нужно записать документ ""Мероприятие СУБ"".';
			|en = 'It is necessary to write down the document ""Event""'"));
					
		Отказ = Истина;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти  
// -- rarus zalikh 2021-05-08 