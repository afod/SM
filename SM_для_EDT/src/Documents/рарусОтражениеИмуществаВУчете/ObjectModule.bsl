#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИнициализироватьДокумент();
		
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПроверитьЗаполнениеДвижений(Отказ);
	
	УстановитьАктивностьДвижений(НЕ ПометкаУдаления);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеДвижений(Отказ)
	
	Для Каждого Движение Из Движения Цикл
		
		ДвижениеЗаполненоКорректно = Движение.ПроверитьЗаполнение();
		Если НЕ ДвижениеЗаполненоКорректно Тогда
			ТекстСообщения = СтрШаблон("Некорректно заполнены движения по регистру ""%1""",
				Движение.Метаданные().Представление());
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Отказ = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьАктивностьДвижений(ФлагАктивности)
	
	// При записи из формы документа его движения уже прочитаны.
	НеобходимоПрочитатьДвижения = НЕ ДополнительныеСвойства.Свойство("ЗаписьДокументаИзФормы");
	
	Для Каждого Движение Из Движения Цикл
		
		Если НеобходимоПрочитатьДвижения Тогда
			Движение.Прочитать();
		КонецЕсли;
		
		Если Движение.Количество() > 0 Тогда
			ТекущаяАктивность = Движение[0].Активность;
		Иначе
			ТекущаяАктивность = Истина;
		КонецЕсли;
		
		Если ТекущаяАктивность <> ФлагАктивности Тогда
			Движение.УстановитьАктивность(ФлагАктивности);
			Движение.Записывать = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
