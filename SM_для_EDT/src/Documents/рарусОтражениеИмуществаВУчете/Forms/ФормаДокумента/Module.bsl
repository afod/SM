#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	СобытияФорм.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ЗаполнитьСкладВДвижениях();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ДополнительныеСвойства.Вставить("ЗаписьДокументаИзФормы", Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда) Экспорт
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды() Экспорт
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ЗаписатьДокумент(Команда)
	
	ОбщегоНазначенияУТКлиент.Записать(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ОбщегоНазначенияУТКлиент.ЗаписатьИЗакрыть(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОтбору(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Категория) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("Не заполнена категория");
		Возврат;
	КонецЕсли; 
	
	Если Объект.Движения.рарусИмуществоНаСудах.Количество() > 0 Тогда
		ДополнительныеПараметры = Новый Структура("Категория", Объект.Категория);
		Оповещение = Новый ОписаниеОповещения("ЗаполнитьПоОтбору_ПодтверждениеПолучено", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(Оповещение, "Перед заполнением существующие данные в таблице будут удалены. Продолжить?", РежимДиалогаВопрос.ДаНет, 120);
	Иначе
		ЗаполнитьНоменклатуройПоКатегории(Объект.Категория);
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаполнитьПоОтбору_ПодтверждениеПолучено(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЗаполнитьНоменклатуройПоКатегории(Объект.Категория);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНоменклатуройПоКатегории(Категория)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Категория", Категория);
	Запрос.УстановитьПараметр("Склад", рарусОбщегоНазначенияСервер.СкладСудна());
	Запрос.УстановитьПараметр("Период", Объект.Дата);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ВсяНоменклатура.Ссылка КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Перечисление.рарусСтатусыИмуществаНаСудне.ПустаяСсылка) КАК Статус,
	|	&Склад КАК Склад,
	|	ИСТИНА КАК Активность
	|ИЗ
	|	Справочник.Номенклатура КАК ВсяНоменклатура
	|ГДЕ
	|	ВсяНоменклатура.Категория = &Категория
	|	И НЕ ВсяНоменклатура.ЭтоГруппа
	|	И НЕ ВсяНоменклатура.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВсяНоменклатура.Наименование";
	
	УстановитьПривилегированныйРежим(Истина);
	НоменклатураКатегории = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Объект.Движения.рарусИмуществоНаСудах.Загрузить(НоменклатураКатегории);
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСкладВДвижениях()
	
	Для Каждого Движение Из Объект.Движения.рарусИмуществоНаСудах Цикл
		Движение.Склад = Объект.Склад;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
