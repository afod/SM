#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	НастроитьФормуИОбновитьРеквизиты();
	
	УстановитьСвойстваЭлементов(ЭтотОбъект);
	
	НастроитьДоступностьРеквизитовФормы(ЭтотОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//СтандартныеПодсистемы.РаботаСФайлами
	ПараметрыГиперссылки = РаботаСФайлами.ГиперссылкаФайлов();
	ПараметрыГиперссылки.Размещение = "КоманднаяПанель";
	РаботаСФайлами.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыГиперссылки);
	//Конец СтандартныеПодсистемы.РаботаСФайлами
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
		
	ДополнительныеПараметры = рарусСУБСервер.ПараметрыПриСозданииНаСервере();
	ДополнительныеПараметры.Форма = ЭтотОбъект;
	ИспользоватьКоманду = рарусСУБСервер.ПолучитьПризнакОтображенияКомандыСменыСтатусов(Объект.Статус);
	ДополнительныеПараметры.ИспользоватьКоманду = ИспользоватьКоманду;	
	ДополнительныеПараметры.МестоРазмещенияКоманд =  Элементы.ПодменюСтатус;
	
	рарусСУБСервер.РазместитьКомандуОтменыСтатусаНаФорме(ДополнительныеПараметры);
	
	Если Объект.Статус = Перечисления.vftСтатусыДокументовСообщений.Отправлен
		Или Объект.Статус = Перечисления.vftСтатусыДокументовСообщений.Получен
		Или Объект.Статус = Перечисления.vftСтатусыДокументовСообщений.Закрыт Тогда  
		
		ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	СобытияФорм.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	
	Если Объект.Статус = Перечисления.vftСтатусыДокументовСообщений.Отправлен 
		Или Объект.Статус = Перечисления.vftСтатусыДокументовСообщений.Получен
		Или Объект.Статус = Перечисления.vftСтатусыДокументовСообщений.Закрыт Тогда  
		
		ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ОбновитьЖурналДокументов"); 
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.РаботаСФайлами
	РаботаСФайламиКлиент.ПриОткрытии(ЭтотОбъект, Отказ);
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.РаботаСФайлами
	РаботаСФайламиКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия);
	// Конец СтандартныеПодсистемы.РаботаСФайлами

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы


#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьПоказатели(Команда)
	
	Если ЗначениеЗаполнено(Объект.ПериодОбзораС) 
		И ЗначениеЗаполнено(Объект.ПериодОбзораПо) Тогда
		
		ПараметрыДляЗаполнения = ПолучитьПараметрыЗаполнения(Объект.Судно, Объект.ПериодОбзораС, Объект.ПериодОбзораПо);	
		
		Объект.КоличествоНесоответствий = ПараметрыДляЗаполнения.ОбщееКоличествоЗамечаний;
		Объект.СообщенийОПотенциальномИнциденте = ПараметрыДляЗаполнения.КоличествоСообщений; 
		
	Иначе
		                                                       
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Поле ""Месяц обзора"" не заполнен. Заполнение невозможно.';
		                                                             |en = 'The ""View Month"" field is empty. Filling is not possible.'"));
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоШаблону(Команда)
	
	СписокЗначенийРолей = ПолучитьСписокРолей();
	
	Если Объект.СоставСудовогоКомитета.Количество() > 0 Тогда
		
		ТекстВопроса = НСтр("ru = 'При изменении все данные будут потеряны, продолжить?';
		|en = 'During repopulation all information entered manually will be lost, continue?'");
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнениеПоШаблонуЗавершение", ЭтотОбъект, СписокЗначенийРолей), ТекстВопроса, РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
			
	Иначе
		
		ЗаполнитьСписокРолей(СписокЗначенийРолей);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуСменыСтатуса(Команда)

	рарусСУБКлиент.ПриИзмененииСменыСтатуса(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуВзаимодействияСБерегом(Команда)
	
	рарусСУБКлиент.ПриИзмененииСтатусаВзаимодействияСБерегом(ЭтотОбъект, Команда.Имя);
	   
КонецПроцедуры

// СтандартныеПодсистемы.РаботаСФайлами
&НаКлиенте
Процедура Подключаемый_КомандаПанелиПрисоединенныхФайлов(Команда)
	
	РаботаСФайламиКлиент.КомандаУправленияПрисоединеннымиФайлами(ЭтотОбъект, Команда);

КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраНажатие(Элемент, СтандартнаяОбработка)
	РаботаСФайламиКлиент.ПолеПредпросмотраНажатие(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	РаботаСФайламиКлиент.ПолеПредпросмотраПеретаскивание(ЭтотОбъект, Элемент,ПараметрыПеретаскивания, СтандартнаяОбработка);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	РаботаСФайламиКлиент.ПолеПредпросмотраПроверкаПеретаскивания(ЭтотОбъект, Элемент,ПараметрыПеретаскивания, СтандартнаяОбработка);
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда) Экспорт
	
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды() Экспорт
	
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
    ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьФормуИОбновитьРеквизиты()
			
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
КонецПроцедуры
	
&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСвойстваЭлементов(Форма)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	МассивЭлементов = Новый Массив();
		
	Элементы.ВиднесчастныхСлучаев.АвтоОтметкаНезаполненного = Объект.НесчастныеСлучаи;
	
	ОтметкаНезаполненного = Истина;
	
	Если Объект.Статус = ПредопределенноеЗначение("Перечисление.vftСтатусыДокументовСообщений.Черновик") Тогда
		
		ОтметкаНезаполненного = Ложь;
		
		МассивЭлементов.Добавить("ТехническоеСостояниеСудна");
		МассивЭлементов.Добавить("СостояниеПротивопожарногоОборудования");
		МассивЭлементов.Добавить("КорректирующиеДействия");
		МассивЭлементов.Добавить("КодУстраненияЗамечания");
		МассивЭлементов.Добавить("КодЗамечаний");
		МассивЭлементов.Добавить("СсылкаНаДокумент");
		МассивЭлементов.Добавить("МесяцОбзора");
		
		Для Каждого Элемент Из МассивЭлементов Цикл 
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, Элемент, "АвтоОтметкаНезаполненного", Ложь);
			
		КонецЦикла;
		
	КонецЕсли;
		
КонецПроцедуры
	
&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьДоступностьРеквизитовФормы(Форма)

	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	Элементы.ВиднесчастныхСлучаев.ТолькоПросмотр = Не Объект.НесчастныеСлучаи; 	
	Элементы.ФормаЗаполнитьПоказатели.Доступность = ?(Объект.Статус = ПредопределенноеЗначение("Перечисление.vftСтатусыДокументовСообщений.Черновик"), Истина, Ложь);
	
КонецПроцедуры
		
#КонецОбласти

#Область ПриИзмененииРеквизитов

&НаКлиенте
Процедура МесяцОбзораНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("ПредставлениеПериодаНачалоВыбораЗавершение", ЭтотОбъект);
	ПараметрыФормы = Новый Структура("НачалоПериода, КонецПериода, Периодичность", 
	Объект.ПериодОбзораС, Объект.ПериодОбзораПо, Объект.Периодичность);
	
	ОткрытьФорму("Документ.vftДокладОСостоянииБезопасности.Форма.ВыборПериода",
	ПараметрыФормы, ЭтаФорма,,,, Оповещение);

КонецПроцедуры

&НаКлиенте
Процедура НесчастныеСлучаиПриИзменении(Элемент)
	
	Если Не Объект.НесчастныеСлучаи Тогда	
		Объект.ВиднесчастныхСлучаев = " ";
	КонецЕсли;
	
	НастроитьДоступностьРеквизитовФормы(ЭтотОбъект);

	УстановитьСвойстваЭлементов(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаКлиенте
Процедура ПредставлениеПериодаНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		Объект.ПериодОбзораС = Результат.НачалоПериода;
		Объект.ПериодОбзораПо = Результат.КонецПериода;
		Объект.Периодичность = Результат.Периодичность;	
		Объект.МесяцОбзора = ПолучитьПредставлениеПериода(Объект.ПериодОбзораС, Объект.ПериодОбзораПо);	
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ПериодОбзораС) 
		И ЗначениеЗаполнено(Объект.ПериодОбзораПо) Тогда
		
		ПараметрыДляЗаполнения = ПолучитьПараметрыЗаполнения(Объект.Судно, Объект.ПериодОбзораС, Объект.ПериодОбзораПо);	
		
		Объект.КоличествоНесоответствий         = ПараметрыДляЗаполнения.ОбщееКоличествоЗамечаний;
		Объект.СообщенийОПотенциальномИнциденте = ПараметрыДляЗаполнения.КоличествоСообщений; 
		Объект.АудитПроверкиСУБ                 = ПараметрыДляЗаполнения.КоличествоЗамечанийАудитСУБ;
		Объект.АудитТехСостояния                = ПараметрыДляЗаполнения.КоличествоЗамечанийТехОсмотр;
		Объект.ОсвидетельствованийРС            = ПараметрыДляЗаполнения.КоличествоЗамечанийОсвидетельствованиеРМРС;
		Объект.ПроверокPSC                      = ПараметрыДляЗаполнения.КоличествоЗамечанийPSC;
		Объект.ПроверокFSC                      = ПараметрыДляЗаполнения.КоличествоЗамечанийFSC;
		Объект.ПроверокГПКнаВВП                 = ПараметрыДляЗаполнения.КоличествоЗамечанийГПК;

	КонецЕсли;
			
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПараметрыЗаполнения(Судно, НачалоПериода, КонецПериода)
	
	Возврат Документы.vftДокладОСостоянииБезопасности.ПодготовитьСтруктуруДанныхДляЗаполненияДокумента(Судно, НачалоПериода, КонецПериода);

КонецФункции

&НаКлиенте
Функция ПолучитьПредставлениеПериода(НачалоПериода, КонецПериода) Экспорт

	Если ЗначениеЗаполнено(НачалоПериода) И ЗначениеЗаполнено(КонецПериода) Тогда
		Возврат ПредставлениеПериода(НачалоПериода, КонецДня(КонецПериода), "ФП=Истина");
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСписокРолей()
	
	Возврат Документы.vftДокладОСостоянииБезопасности.СписокЗначенияРолей();
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьСписокРолей(СписокЗначенийРолей)
	
	Объект.СоставСудовогоКомитета.Очистить();
	
	Для Каждого Роль Из СписокЗначенийРолей Цикл
		
		НоваяСтрокаТаблицы = Объект.СоставСудовогоКомитета.Добавить();
		НоваяСтрокаТаблицы.Роль = Роль;
		НоваяСтрокаТаблицы.ФиоЧленаКомитета = " ";
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнениеПоШаблонуЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		ЗаполнитьСписокРолей(ДополнительныеПараметры);
			
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти











