
&НаКлиенте
Процедура ОбследованноеОборудованиеПриАктивизацииСтроки(Элемент)
	ТекущиеДанные = Элементы.ОбследованноеОборудование.ТекущиеДанные;
	Если Не ТекущиеДанные = Неопределено Тогда
		
		МассивСтрокРемонтныхРабот = Объект.РемонтныеРаботы.НайтиСтроки(Новый Структура("Предписание_ID",ТекущиеДанные.ID));
		
		СоответствиеID = Новый Соответствие;
		
		Для каждого СтрокаМассива Из МассивСтрокРемонтныхРабот Цикл
			
			ID_Родителя = СтрокаМассива.Родитель_ID;
			
			НайдСоответствие = СоответствиеID.Получить(ID_Родителя);
			
			Если НайдСоответствие = Неопределено Тогда
				МассивСтрокСоответствия = Новый Массив;
				МассивСтрокСоответствия.Добавить(СтрокаМассива);
				СоответствиеID.Вставить(ID_Родителя, МассивСтрокСоответствия);
			Иначе
				МассивСтрокСоответствия = НайдСоответствие;
				МассивСтрокСоответствия.Добавить(СтрокаМассива);
			КонецЕсли; 
			
		КонецЦикла; 
		
		ЭлементыДерева = ДеревоРемонтныхРабот.ПолучитьЭлементы();
		ЭлементыДерева.Очистить();

		ЭлементДерева = ЭлементыДерева.Добавить();
		
		ЭлементДерева.РемонтнаяРабота = "Ремонтные работы";	
		ЭлементДерева.Картинка        = 4; 
		
		ЗаполнитьДерево(ЭлементДерева,СоответствиеID,"");
		
		ЗаполнитьЕдиницыИзмерения(ДеревоРемонтныхРабот);
		
		УстановитьДоступностьДляРедактированияПоТекРемонту(Истина);
		
	КонецЕсли;
	
	Если ДеревоРемонтныхРабот.ПолучитьЭлементы().Количество() > 0 Тогда
		
		Элементы.ДеревоРемонтныхРабот.Развернуть(ДеревоРемонтныхРабот.ПолучитьЭлементы()[0].ПолучитьИдентификатор(),Истина);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьДляРедактированияПоТекРемонту(БлокироватьДляИзменения)
	
	Элементы.ДеревоРемонтныхРабот.ТолькоПросмотр = БлокироватьДляИзменения;	
	Элементы.ДеревоРемонтныхРаботДобавитьТехОперацию.Доступность	= Не БлокироватьДляИзменения;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДерево(ЭлементДерева, Соответствие, Родитель)
	
	МассивПодчиненныхСтрок = Соответствие.Получить(Родитель);
	
	Если Не МассивПодчиненныхСтрок = Неопределено
		И МассивПодчиненныхСтрок.Количество() > 0 Тогда
		ЭлементыДерева = ЭлементДерева.ПолучитьЭлементы();
		Если Не МассивПодчиненныхСтрок = Неопределено Тогда
			Для каждого Строка Из МассивПодчиненныхСтрок Цикл
				Элемент = ЭлементыДерева.Добавить();
				ЗаполнитьЗначенияСвойств(Элемент,Строка);
				Элемент.Картинка = 2;
				ЗаполнитьДерево(Элемент,Соответствие,Строка.ID);
			КонецЦикла; 
		КонецЕсли;
		
	КонецЕсли; 	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЕдиницыИзмерения(Дерево)
	Для Каждого РемРабота Из Дерево.ПолучитьЭлементы() Цикл
		Если ТипЗнч(РемРабота.РемонтнаяРабота) = Тип("СправочникСсылка.впТехнологическиеОперации") Тогда
			РемРабота.ТехОперация = РемРабота.РемонтнаяРабота;
		КонецЕсли;
		ЗаполнитьЕдиницыИзмерения(РемРабота);
	КонецЦикла;  		
КонецПроцедуры

&НаКлиенте
Процедура ДеревоРемонтныхРаботОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
		
	ТекРемонт = Элементы.ОбследованноеОборудование.ТекущиеДанные;
	
	Если ТекРемонт <> Неопределено Тогда
		РемонтыОборудования_ID = ТекРемонт.ID;
	Иначе
		РемонтыОборудования_ID = "";
	КонецЕсли;
	
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда 
		Для каждого ТОперация ИЗ ВыбранноеЗначение Цикл 
			НС = Объект.РемонтныеРаботы.Добавить();
			НС.Предписание_ID  = РемонтыОборудования_ID;
			НС.РемонтнаяРабота = ТОперация;
			НС.ID              = Новый УникальныйИдентификатор;
			НС.Количество      = 1;
		КонецЦикла;
	КонецЕсли;

	Модифицированность = Истина;

	ОбследованноеОборудованиеПриАктивизацииСтроки(ТекРемонт); 	
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоРемонтныхРаботПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоРемонтныхРабот.ТекущиеДанные;
	Если Не ТекущиеДанные = Неопределено Тогда
		МассивСтрок = Объект.РемонтныеРаботы.НайтиСтроки(Новый Структура("ID",ТекущиеДанные.ID));
		Если МассивСтрок.Количество() > 0 Тогда
			МассивСтрок[0].Количество = ТекущиеДанные.Количество;
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоРемонтныхРаботПередУдалением(Элемент, Отказ)
	
    ТекСтрокаДРР = Элементы.ДеревоРемонтныхРабот.ТекущиеДанные;
	ТекРемонт = Элементы.ОбследованноеОборудование.ТекущиеДанные;
	
	Если НЕ ЗначениеЗаполнено(ТекСтрокаДРР.Родитель_ID) И ТекСтрокаДРР.РемонтнаяРабота = "Ремонтные работы" Тогда
		
		ТекСтрокаДРР.ПолучитьЭлементы().Очистить();
		
		Если Не ТекРемонт = Неопределено Тогда 
			МассивСтрокРемонтныхРабот = Объект.РемонтныеРаботы.НайтиСтроки(Новый Структура("Предписание_ID", ТекРемонт.ID));
			Для Каждого Строка Из МассивСтрокРемонтныхРабот Цикл 
				Объект.РемонтныеРаботы.Удалить(Строка);
			КонецЦикла;
		Иначе
			Возврат;
		КонецЕсли;
		
		Модифицированность = Истина;
		Отказ = Истина;
		
	Иначе
		
		ВыделенныеСтроки = Элементы.ДеревоРемонтныхРабот.ВыделенныеСтроки;
		МассивСтрокДляУдаления = Новый Массив;
		
		Для каждого Стр Из ВыделенныеСтроки Цикл 
			Строка = ДеревоРемонтныхРабот.НайтиПоИдентификатору(Стр);
			Если Строка <> Неопределено И Строка.РемонтнаяРабота <> "Ремонтные работы" Тогда 
				МассивСтрокДляУдаления.Добавить(Строка);
			КонецЕсли;
		КонецЦикла;		
		
		Для каждого Элемент Из МассивСтрокДляУдаления Цикл
			СтруктурыДляПередачи = Новый Структура("ID, Предписание_ID, Родитель_ID, РемонтнаяРабота",
			Элемент.ID, Элемент.Предписание_ID, Элемент.Родитель_ID, Элемент.РемонтнаяРабота);
			УдалитьДанныеТабличныхЧастейПоIDСтрокиДерева(СтруктурыДляПередачи, ЭтотОбъект, Новый Структура("РемонтныеРаботы"));
			
			СтрокаРодителя = Элемент.ПолучитьРодителя();
			СтрокаРодителя.ПолучитьЭлементы().Удалить(Элемент); 
		КонецЦикла;
		
		
		Модифицированность = Истина;
		Отказ = Истина;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УдалитьДанныеТабличныхЧастейПоIDСтрокиДерева(ТекущиеЗначения, ДокументОбъект, СтруктураТабличныхЧастей)
	
	Для Каждого КлючЗначение Из СтруктураТабличныхЧастей Цикл
		
		ПараметрыПоиска = Новый Структура;
		ПараметрыПоиска.Вставить("ID", ТекущиеЗначения.ID);
		ПараметрыПоиска.Вставить("Предписание_ID", ТекущиеЗначения.Предписание_ID);
				
		СтрокиДляУдаления = Объект.РемонтныеРаботы.НайтиСтроки(ПараметрыПоиска);
		
		Для Каждого Элемент Из СтрокиДляУдаления Цикл
			
			Объект.РемонтныеРаботы.Удалить(Элемент);
			
		КонецЦикла;
				
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборОпераций(Команда)
	
	ФормаВыбора = ПолучитьФорму("Справочник.впТехнологическиеОперации.ФормаВыбора", Новый Структура("МножественныйВыбор", Истина), Элементы.ДеревоРемонтныхРабот);
	ФормаВыбора.ЗакрыватьПриВыборе = Ложь;
	ФормаВыбора.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьТехОперацию(Команда)
	
	ТекущиеДанные = Элементы.ДеревоРемонтныхРабот.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Укажите расположение ремонта!'"), 10); 
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ТекущиеДанные.РемонтнаяРабота) = Тип("СправочникСсылка.впТехнологическиеОперации") Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Ремонт нельзя включать в состав технологической операции!'"), 10); 
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("Справочник.впТехнологическиеОперации.ФормаВыбора", Новый Структура("МножественныйВыбор", Истина), Элементы.ДеревоРемонтныхРабот);		
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Объект.ОбследованноеОборудование.Количество()>0 Тогда
		Объект.Подразделение = впОбщиеПроцедурыДокументовТОИР.ЗаполнитьПодразделение(Объект.ОбследованноеОборудование[0].ОбъектРемонта);
	КонецЕсли;
	
	Объект.Комментарий = "";
	Для Каждого стр из Объект.ОбследованноеОборудование Цикл
		Объект.Комментарий = Объект.Комментарий + стр.ОбъектРемонта + ?(Объект.ОбследованноеОборудование.Индекс(стр) = Объект.ОбследованноеОборудование.Количество() - 1, "", "; ");
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбследованноеОборудованиеПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И Копирование Тогда
		ТекДанные = Элемент.ТекущиеДанные;
		ТекДанные.ID = Новый УникальныйИдентификатор();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ответственный) Тогда
		Объект.Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		Объект.Организация = Константы.впОсновнаяОрганизация.Получить();
	КонецЕсли;
	
	// ++ rarus makole 2021-02-09 
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	// -- rarus makole 2021-02-09 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбследованноеОборудованиеПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
		Если НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.ID) Тогда	
			Элемент.ТекущиеДанные.ID = Новый УникальныйИдентификатор();
		КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// ++ rarus makole 2021-02-09
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	// -- rarus makole 2021-02-09
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ++ rarus makole 2021-02-09
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	// -- rarus makole 2021-02-09
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда) Экспорт
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды() Экспорт
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

