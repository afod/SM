#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ФормаГлобальныеКоманды;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтаФорма, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды	

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	ОтобразитьЗаявкиНаСнабжение();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	ОбновитьОтображение();
	// ++ rarus makole 2021-03-31
	//ТолькоПросмотр = НЕ ДоступноРедактирование();
	// -- rarus makole 2021-03-31
	
	// ++ rarus makole 2021-01-25 [ФТ.ИМ.01.01]
	ЗаполнитьСписокВыбораВидаОперации();
	// -- rarus makole 2021-01-25 [ФТ.ИМ.01.01]
	
	// ++ rarus makole 2021-03-30
	УстановитьДоступностьРедактированияИСтатусОтправки()	
	// ++ rarus makole 2021-03-30
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НадписьРаспоряжениеНажатие(Элемент)
	
	ПараметрыФормы = Новый Структура("Ключ", Объект.Распоряжение);
	Если ТипЗнч(Объект.Распоряжение) = Тип("ДокументСсылка.впЗаказПоставщику") Тогда
		ОткрытьФорму("Документ.впЗаказПоставщику.ФормаОбъекта", ПараметрыФормы);
	ИначеЕсли ТипЗнч(Объект.Распоряжение) = Тип("ДокументСсылка.впПеремещениеТоваров") Тогда
		ОткрытьФорму("Документ.впПеремещениеТоваров.ФормаОбъекта", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьПоставщикНажатие(Элемент)
	
	СтруктураФормы = ПоставщикИзРаспоряжения(Объект.Распоряжение);
	ОткрытьФорму(СтруктураФормы.Форма, СтруктураФормы.ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОткрытьЗаявкуНаСнабжение(Элемент)
	
	Ссылка = ЗаявкаНаСнабжениеПоИмениДекорации(Элемент.Имя);
	Если ЗначениеЗаполнено(Ссылка) Тогда
		ПараметрыФормы = Новый Структура("Ключ", Ссылка);
		ОткрытьФорму("Документ.впЗаявкаНаСнабжение.Форма.ФормаДокумента", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	ЗаполнитьСписокВыбораВидаОперации();
КонецПроцедуры

// ++ rarus makole 2021-06-10 [РАIT-0023374]
// Учёт номенклатуры разного качества 
&НаКлиенте
Процедура ОприходованиеБывшегоВУпотребленииПриИзменении(Элемент)
	Если ЕстьНоменклатураНесоответствующегоКачества() Тогда
		ОповещениеОбОтвете = Новый ОписаниеОповещения("ОбработкаОтветаОбУдаленииНоменклатурыИзТЧ", ЭтаФорма);
		ПоказатьВопрос(ОповещениеОбОтвете, "Документ содержит номенклатуру, не соответствющего качества. Очистить таблицу товаров?", РежимДиалогаВопрос.ДаНет,,,"Очистка документа");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОтветаОбУдаленииНоменклатурыИзТЧ(Ответ, ДопПараметры) Экспорт
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Объект.ТМЦ.Очистить();
	КонецЕсли;
КонецПроцедуры
// -- rarus makole 2021-06-10 [РАIT-0023374]

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТМЦ

&НаКлиенте
Процедура МатериальныеЗатратыПриИзменении(Элемент)
	
	ОтобразитьЗаявкиНаСнабжение();
	
КонецПроцедуры

// ++ rarus makole 2021-03-19 [ФТ.ИМ]
// Не разрешать выбор номенклатуры, не соответствующей виду потребности
&НаКлиенте
Процедура МатериальныеЗатратыНоменклатураОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ПараметрыФО = Новый Структура("Период, Судно");
	ПараметрыФО.Период = Объект.Дата;
	ПараметрыФО.Судно = Объект.Подразделение;
	Если рарусИмущественныйУчетВызовСервера.ИспользоватьИмущественныйУчет(ПараметрыФО) Тогда
		// ++ rarus makole 2021-06-10 [РАIT-0023374]
		//РезультатПроверки = ПроверитьСоответствиеВидуПотребности(ВыбранноеЗначение, Объект.ВидОперации);
		РезультатПроверки = ПроверитьСоответствиеВидуПотребности(ВыбранноеЗначение, Объект.ВидОперации, Объект.ОприходованиеБывшегоВУпотреблении);
		// -- rarus makole 2021-06-10 [РАIT-0023374]
		Если РезультатПроверки <> "" Тогда
			СтандартнаяОбработка = Ложь;
			ОбщегоНазначенияКлиент.СообщитьПользователю(РезультатПроверки,,"Объект.ТМЦ[" + (Элемент.Родитель.ТекущиеДанные.НомерСтроки - 1) + "].Номенклатура");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
// -- rarus makole 2021-03-19 [ФТ.ИМ]

#КонецОбласти

#Область ОбработчикиКомандФормы


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИзменениеОтображенияФормы
&НаКлиенте
Процедура ОбновитьОтображение()
	
	ОтобразитьВидимостьВходящегоДокумента();
	// ++ rarus makole 2021-06-10 [РАIT-0023374]
	// Учёт номенклатуры разного качества
	//Элементы.ОприходованиеБывшегоВУпотреблении.Видимость = Объект.ОприходованиеБывшегоВУпотреблении;
	Если рарусИмущественныйУчетВызовСервера.ИспользуетсяКачествоТоваров() Тогда
		Элементы.ОприходованиеБывшегоВУпотреблении.Доступность = Истина;
	Иначе
		Элементы.ОприходованиеБывшегоВУпотреблении.Видимость = Объект.ОприходованиеБывшегоВУпотреблении;
	КонецЕсли;
	// -- rarus makole 2021-06-10 [РАIT-0023374]
	Элементы.ГруппаОрганизация.Видимость = рарусОбщегоНазначенияВызовСервера.ГлавныйУзел() = Неопределено;
	
	// ++ rarus makole 2021-06-10 [РАIT-0023374]
	// Учёт номенклатуры разного качества 
	Элементы.МатериальныеЗатратыНоменклатураКачество.Видимость = рарусИмущественныйУчетВызовСервера.ИспользуетсяКачествоТоваров();
	// -- rarus makole 2021-06-10 [РАIT-0023374]
	
	// ++ rarus makole 2021-03-31
	//Элементы.ДекорацияМестоФормирования.Заголовок = ?(Объект.СформированСМ, "Сформирован в Судовом модуле", "Сформирован в Береговом модуле");
	//
	//// ++ rarus atyutyakin 20.02.2021  [ФТ.ИМ.02.01]
	//ИспользоватьИмущУчет = рарусИмущественныйУчетВызовСервера.ИспользоватьИмущественныйУчетДляДокумента(Объект);
	//Элементы.ДекорацияПолученВБМ.Видимость = ИспользоватьИмущУчет;
	//Элементы.ДекорацияПолученВБМ.Заголовок = ?(Объект.ПолученВБМ, "Получен в Береговом модуле", "");
	//// -- rarus atyutyakin 20.02.2021
	// -- rarus makole 2021-03-31
		
КонецПроцедуры
&НаКлиенте
Процедура ОтобразитьВидимостьВходящегоДокумента()
	
	Элементы.ГруппаРаспоряжениеПоставщик.Видимость = ЗначениеЗаполнено(Объект.Распоряжение);
	Если ЗначениеЗаполнено(Объект.Распоряжение) Тогда
		Элементы.НадписьРаспоряжение.Заголовок = Объект.Распоряжение;
		Элементы.НадписьПоставщик.Заголовок = ПоставщикПредставление(Объект.Распоряжение);
	КонецЕсли;
	
КонецПроцедуры
&НаСервереБезКонтекста
Функция ПоставщикПредставление(Распоряжение)
	
	Если ТипЗнч(Распоряжение) = Тип("ДокументСсылка.впЗаказПоставщику") Тогда
		ПоставщикПредставление = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Распоряжение, "Контрагент.Наименование");
	ИначеЕсли ТипЗнч(Распоряжение) = Тип("ДокументСсылка.впПеремещениеТоваров") Тогда
		ПоставщикПредставление = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Распоряжение, "СкладОтправитель.Наименование");
	КонецЕсли;
	
	Возврат ПоставщикПредставление;
	
КонецФункции
&НаСервереБезКонтекста
Функция ПоставщикИзРаспоряжения(Распоряжение)

	Если ТипЗнч(Распоряжение) = Тип("ДокументСсылка.впЗаказПоставщику") Тогда
		Поставщик = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Распоряжение, "Контрагент");
		Форма = "Справочник.Контрагенты.ФормаОбъекта";
	ИначеЕсли ТипЗнч(Распоряжение) = Тип("ДокументСсылка.впПеремещениеТоваров") Тогда
		Поставщик = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Распоряжение, "СкладОтправитель");
		Форма = "Справочник.Склады.ФормаОбъекта";
	КонецЕсли;
	
	Возврат Новый Структура("Форма,ПараметрыФормы", Форма, Новый Структура("Ключ", Поставщик));
	
КонецФункции
&НаСервере
Процедура ОтобразитьЗаявкиНаСнабжение()
	
	ЗаявкиНаСнабжение = Новый Массив;
	Для Каждого Строка Из Объект.ТМЦ Цикл
		ЗаявкаНаСнабжение = Строка.Заявка;
		Если ЗначениеЗаполнено(ЗаявкаНаСнабжение) И ЗначениеЗаполнено(ЗаявкаНаСнабжение.НомерСудовойЗаявки) И ЗаявкиНаСнабжение.Найти(ЗаявкаНаСнабжение) = Неопределено Тогда
			ЗаявкиНаСнабжение.Добавить(ЗаявкаНаСнабжение);
		КонецЕсли;
	КонецЦикла;
	
	УказаныЗаявкиНаСнабжение = ЗаявкиНаСнабжение.Количество() > 0;
	ГруппаЗаявок = Элементы.ГруппаЗаявкиНаСнабжение;
	
	//Удалить текущие элементы//
	МассивЭлементов = Новый Массив;
	Для Каждого Элемент Из ГруппаЗаявок.ПодчиненныеЭлементы Цикл
		Если ТипЗнч(Элемент) = Тип("ДекорацияФормы") И Элемент.ГиперСсылка Тогда
			МассивЭлементов.Добавить(Элемент);
		КонецЕсли;
	КонецЦикла;
	Для Каждого Элемент Из МассивЭлементов Цикл
		Элементы.Удалить(Элемент);
	КонецЦикла;
	
	ГруппаЗаявок.Видимость = УказаныЗаявкиНаСнабжение;
	Индекс = 1;
	Для Каждого ЗаявкаНаСнабжение Из ЗаявкиНаСнабжение Цикл
		ИмяЭлемента = "ДекорацияЗаявкаНаСнабжение_" + СтрЗаменить(ЗаявкаНаСнабжение.УникальныйИдентификатор(), "-", "_");
		НовыйЭлемент = Элементы.Добавить(ИмяЭлемента, Тип("ДекорацияФормы"), ГруппаЗаявок);
		НовыйЭлемент.Заголовок = ЗаявкаНаСнабжение.НомерСудовойЗаявки;
		НовыйЭлемент.ГиперСсылка = Истина;
		НовыйЭлемент.УстановитьДействие("Нажатие", "Подключаемый_ОткрытьЗаявкуНаСнабжение");

		Индекс = Индекс + 1;
	КонецЦикла;
	
КонецПроцедуры
#КонецОбласти

#Область СтандартныеПодсистемы_ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда) Экспорт
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды() Экспорт
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

#КонецОбласти

// ++ rarus makole 2021-03-19 [ФТ.ИМ]
&НаСервереБезКонтекста
// ++ rarus makole 2021-06-10 [РАIT-0023374]
//Функция ПроверитьСоответствиеВидуПотребности(ВыбранноеЗначение, ВидОперации)
Функция ПроверитьСоответствиеВидуПотребности(ВыбранноеЗначение, ВидОперации, ПризнакОприходованияБУ)
// -- rarus makole 2021-06-10 [РАIT-0023374]
	
	// ++ rarus makole 2021-06-10 [РАIT-0023374]
	// Учёт номенклатуры разного качества 
	//РеквизитыНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВыбранноеЗначение, "Категория, ТипНоменклатуры");
	ТекстОшибки = "";
	РеквизитыНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВыбранноеЗначение, "Категория, ТипНоменклатуры, Качество");
	// -- rarus makole 2021-06-10 [РАIT-0023374]
	
	// ++ rarus makole 2021-04-21 [РАIT-0023257]
	// предусмотреть два варианта реализации количественного учета карт навигаций 
	// с типом номенклатуры ТМЦ по категории “Карты и публикации” в береговом и судовом модуле. 
	КартыКакУслуга = ПолучитьФункциональнуюОпцию("рарусУчетКартНавигацииКакУслуги");
	// -- rarus makole 2021-04-21 [РАIT-0023257]
	
	Если РеквизитыНоменклатуры.Категория = ПредопределенноеЗначение("Справочник.рарусКатегорииНоменклатуры.ПустаяСсылка")
		И РеквизитыНоменклатуры.ТипНоменклатуры <> ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга")
		И РеквизитыНоменклатуры.ТипНоменклатуры <> ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Работа")Тогда
		Возврат "Номенклатура с незаполненной категорией не может использоваться в документах"
	КонецЕсли;
	
	ЕстьОшибка = Ложь;
	Если ВидОперации = ПредопределенноеЗначение("Перечисление.рарусВидыОперацийПриходаТМЦ.ЗакупкаУПоставщика")
		ИЛИ ВидОперации = ПредопределенноеЗначение("Перечисление.рарусВидыОперацийПриходаТМЦ.ЗакупкаЧерезПодотчетноеЛицо") Тогда
		// ++ rarus makole 2021-04-21 [РАIT-0023257]
		//Если РеквизитыНоменклатуры.Категория = ПредопределенноеЗначение("Справочник.рарусКатегорииНоменклатуры.КартыИПубликации")
		Если (КартыКакУслуга И РеквизитыНоменклатуры.Категория = ПредопределенноеЗначение("Справочник.рарусКатегорииНоменклатуры.КартыИПубликации"))
		// -- rarus makole 2021-04-21 [РАIT-0023257]
			ИЛИ РеквизитыНоменклатуры.Категория = ПредопределенноеЗначение("Справочник.рарусКатегорииНоменклатуры.Колпит") Тогда
			ЕстьОшибка = Истина;
		КонецЕсли;
	ИначеЕсли ВидОперации = ПредопределенноеЗначение("Перечисление.рарусВидыОперацийПриходаТМЦ.ЗакупкаПродуктовПитания") Тогда
		Если РеквизитыНоменклатуры.Категория <> ПредопределенноеЗначение("Справочник.рарусКатегорииНоменклатуры.Колпит") Тогда
			ЕстьОшибка = Истина;
		КонецЕсли;
	ИначеЕсли ВидОперации = ПредопределенноеЗначение("Перечисление.рарусВидыОперацийПриходаТМЦ.ОприходованиеИзлишков") Тогда
		Если РеквизитыНоменклатуры.Категория <> ПредопределенноеЗначение("Справочник.рарусКатегорииНоменклатуры.СЗЧ") Тогда
			ЕстьОшибка = Истина;
		КонецЕсли;
	ИначеЕсли ВидОперации = ПредопределенноеЗначение("Перечисление.рарусВидыОперацийПриходаТМЦ.ЗакупкаНавигационныхКарт") Тогда
		Если РеквизитыНоменклатуры.Категория <> ПредопределенноеЗначение("Справочник.рарусКатегорииНоменклатуры.КартыИПубликации") Тогда
			ЕстьОшибка = Истина;
		КонецЕсли;
	КонецЕсли;
	
	// ++ rarus makole 2021-06-10 [РАIT-0023374]
	// Учёт номенклатуры разного качества
	//Если ЕстьОшибка Тогда
	//	Возврат СтрШаблон("С видом операции ""%1"" нельзя указывать номенклатуру категории ""%2""", Строка(ВидОперации), Строка(РеквизитыНоменклатуры.Категория));
	//Иначе
	//	Возврат ""
	//КонецЕсли;
	ЕстьОшибкаВыбораКачества = Ложь;
	Если ПолучитьФункциональнуюОпцию("ИспользоватьКачествоТоваров") Тогда
		ЭтоНовыйТовар = РеквизитыНоменклатуры.Качество = Перечисления.ГрадацииКачества.Новый;
		Если ПризнакОприходованияБУ И ЭтоНовыйТовар Тогда
			ЕстьОшибкаВыбораКачества = Истина;
			ТекстОшибки = "С установленным признаком ""Оприходование б/у"" нельзя выбирать номенклатуру с качеством ""Новый""";
		ИначеЕсли НЕ ПризнакОприходованияБУ И НЕ ЭтоНовыйТовар Тогда
			ЕстьОшибкаВыбораКачества = Истина;
			ТекстОшибки = "С отключенным признаком ""Оприходование б/у"" нельзя выбирать номенклатуру с качеством, отличным от ""Новый""";
		КонецЕсли;
	КонецЕсли;

	Если ЕстьОшибка Тогда
		ТекстОшибки = ТекстОшибки + ?(ЕстьОшибкаВыбораКачества, Символы.ПС, "") + СтрШаблон("С видом операции ""%1"" нельзя указывать номенклатуру категории ""%2""", Строка(ВидОперации), Строка(РеквизитыНоменклатуры.Категория));
	КонецЕсли;
	
	Возврат ТекстОшибки;
	// -- rarus makole 2021-06-10 [РАIT-0023374]
	
	
КонецФункции
// -- rarus makole 2021-03-19 [ФТ.ИМ]

&НаСервереБезКонтекста
Функция ЗаявкаНаСнабжениеПоИмениДекорации(Имя)
	
	Строка = СтрЗаменить(Имя, "ДекорацияЗаявкаНаСнабжение_", "");
	Строка = СтрЗаменить(Строка, "_", "-");
	Попытка
		UID = Новый УникальныйИдентификатор(Строка);
		Заявка = Документы.впЗаявкаНаСнабжение.ПолучитьСсылку(UID);
	Исключение
		Заявка = Документы.впЗаявкаНаСнабжение.ПустаяСсылка();
	КонецПопытки;
	
	Возврат Заявка;
	
КонецФункции

// ++ rarus makole 2021-03-31
// DEL
//&НаКлиенте
//Функция ДоступноРедактирование()
//	
//	ДоступноРедактирование = Истина;
//	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
//		Если НЕ Объект.СформированСМ Тогда
//			ДоступноРедактирование = Ложь;
//		КонецЕсли;
//		// ++ rarus atyutyakin 20.02.2021  [ФТ.ИМ.02.01]
//		Если рарусИмущественныйУчетВызовСервера.ИспользоватьИмущественныйУчетДляДокумента(Объект) Тогда
//			Если Объект.ПолученВБМ Тогда
//				ДоступноРедактирование = Ложь;
//			КонецЕсли;
//		КонецЕсли;
//		// -- rarus atyutyakin 20.02.2021
//	КонецЕсли;
//	
//	Возврат ДоступноРедактирование;
//	
//КонецФункции
// -- rarus makole 2021-03-31

// ++ rarus makole 2021-01-25 [ФТ.ИМ.01.01]
&НаСервере
Процедура ЗаполнитьСписокВыбораВидаОперации()
	
	Элементы.ВидОперации.СписокВыбора.Очистить();
	ПараметрыФункциональнойОпции = Новый Структура("Период, Судно", НачалоДня(Объект.Дата), Объект.Подразделение);
	ИспользоватьИмущественныйУчет = рарусИмущественныйУчетСервер.ИспользоватьИмущественныйУчет(ПараметрыФункциональнойОпции);
	// ++ rarus makole 2021-04-21 [РАIT-0023257]
	КартыКакУслуга = ПолучитьФункциональнуюОпцию("рарусУчетКартНавигацииКакУслуги");
	// -- rarus makole 2021-04-21 [РАIT-0023257]
	ВидыОпераций = Перечисления.рарусВидыОперацийПриходаТМЦ;
	Для каждого ВидОперации из ВидыОпераций Цикл
		Если НЕ ИспользоватьИмущественныйУчет
			И (ВидОперации = ПредопределенноеЗначение("Перечисление.рарусВидыОперацийПриходаТМЦ.ОприходованиеИзлишков") 
				ИЛИ ВидОперации = ПредопределенноеЗначение("Перечисление.рарусВидыОперацийПриходаТМЦ.ЗакупкаПродуктовПитания")
				ИЛИ ВидОперации = ПредопределенноеЗначение("Перечисление.рарусВидыОперацийПриходаТМЦ.ЗакупкаНавигационныхКарт"))  Тогда
			Продолжить;
		// ++ rarus makole 2021-04-21 [РАIT-0023257]
		ИначеЕсли НЕ КартыКакУслуга 
			И ВидОперации = ПредопределенноеЗначение("Перечисление.рарусВидыОперацийПриходаТМЦ.ЗакупкаНавигационныхКарт") Тогда
		    Продолжить;
		// -- rarus makole 2021-04-21 [РАIT-0023257]
		КонецЕсли;
		Элементы.ВидОперации.СписокВыбора.Добавить(ВидОперации);
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьСписокВыбораВидаОперации()
// -- rarus makole 2021-01-25 [ФТ.ИМ.01.01]

// ++ rarus makole 2021-03-30
&НаКлиенте
Процедура УстановитьДоступностьРедактированияИСтатусОтправки()
	
	Если НЕ vftОбщегоНазначенияВызовСервера.ЭтоГлавныйУзел() Тогда
		ТолькоПросмотр = Не ДоступноРедактирование(Объект.Ссылка) ИЛИ НЕ Объект.СформированСМ;
		Элементы.НадписьСтатус.Видимость = Истина;
		НадписьСтатус = ТекущийСтатусОтправки(Объект.Ссылка);
		Если НадписьСтатус = ПредопределенноеЗначение("Перечисление.рарусСостояниеОтправкиОбъекта.ЗарегистрированКОтправке") Тогда
			ПодключитьОбработчикОжидания("ПроверитьМодифицированность", 2, Ложь)
		КонецЕсли;
			
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДоступноРедактирование(Ссылка)
	Возврат рарусСинхронизацияССудном.ОбъектМожноРедактироватьПоСтатусуОтправки(Ссылка);
КонецФункции

&НаСервереБезКонтекста
Функция ТекущийСтатусОтправки(Ссылка)
	Возврат РегистрыСведений.рарусСостоянияОтправкиОбъектов.ТекущийСтатусОбъекта(Ссылка);
КонецФункции

&НаКлиенте
Процедура ПроверитьМодифицированность() Экспорт
	// Пользователь может начать редактировать зарегистрированный документ, вернём его в статус "Черновик"
	// и удалим регистрацию
	Если Модифицированность Тогда
		рарусИмущественныйУчетВызовСервера.УстановитьСтатусЧерновик(Объект.Ссылка);
		НадписьСтатус = ПредопределенноеЗначение("Перечисление.рарусСостояниеОтправкиОбъекта.Черновик");
		// ++ rarus makole 2021-04-21 [Задача № 28685]
		ОповеститьОбИзменении(Объект.Ссылка);
		// -- rarus makole 2021-04-21 [Задача № 28685]
	КонецЕсли;
КонецПроцедуры
// -- rarus makole 2021-03-30

// ++ rarus makole 2021-06-10 [РАIT-0023374]
// Учёт номенклатуры разного качества 
&НаСервере
Функция ЕстьНоменклатураНесоответствующегоКачества()
	
	МассивНоменклатурыДокумента = Объект.ТМЦ.Выгрузить(, "Номенклатура").ВыгрузитьКолонку("Номенклатура");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Ссылка В(&НоменклатураДокумента)
		|	И ВЫБОР
		|			КОГДА &ОприходованиеБУ = ИСТИНА
		|					И Номенклатура.Качество <> ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.Новый)
		|				ТОГДА ЛОЖЬ
		|			КОГДА &ОприходованиеБУ = ЛОЖЬ
		|					И Номенклатура.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.Новый)
		|				ТОГДА ЛОЖЬ
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ";
	
	Запрос.УстановитьПараметр("НоменклатураДокумента", МассивНоменклатурыДокумента);
	Запрос.УстановитьПараметр("ОприходованиеБУ", Объект.ОприходованиеБывшегоВУпотреблении);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции
// -- rarus makole 2021-06-10 [РАIT-0023374]

#КонецОбласти

#Область Штрихкодирование
// ++ rarus yukuzi 09.02.2021   // ФТ.СНБ.02. Задача_Штрихкодирование
&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
 рарусШтрихкодированиеКлиент.ВыполнитьКомандуШтрихкодирование(ЭтаФорма, ПолучитьИмяРеквизита(Команда.ИспользуемаяТаблица.Имя), Команда);
	
КонецПроцедуры
&НаСервере
Функция ПолучитьИмяРеквизита(ТаблицаФормыИмя)
Возврат рарусШтрихкодирование.ПолучитьИмяРеквизита(Элементы[ТаблицаФормыИмя].ПутьКДанным);
КонецФункции 
// -- rarus yukuzi 09.02.2021
#КонецОбласти






