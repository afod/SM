#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	// ++ rarus atyutyakin 28.02.2021  [ФТ.ИМ.02.01]
	// Исключены движения по РН впТоварыНаСкладах
	//МеханизмыДокумента.Добавить("ТоварыНаСкладах");
	// -- rarus atyutyakin 28.02.2021
	МеханизмыДокумента.Добавить("ТоварыУслугиКПоступлению");
	
	// ++ rarus yukuzi 30.12.2020   // Снабжение ТОИР 2 Приоритет
	МеханизмыДокумента.Добавить("рарусТоварыЗаявокНаСнабжение");
	// -- rarus yukuzi 30.12.2020
	
	// ++ rarus makole 2021-01-21 [ФТ.ИМ.01.01]
	МеханизмыДокумента.Добавить("рарусИмущественныйУчет");
	// -- rarus makole 2021-01-21 

КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка - ссылка на документ, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура - коллекция элементов:
//     * Таблица<ИмяРегистра> - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	// ++ rarus atyutyakin 02.03.2021  [ФТ.ИМ.02.01]
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ, 
		"Подразделение, Дата, ВидОперации, Распоряжение, ДокументОснование, ОприходованиеБывшегоВУпотреблении");
	//Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ, "Подразделение, Дата, Распоряжение, ДокументОснование, ОприходованиеБывшегоВУпотреблении");
	// -- rarus atyutyakin 02.03.2021
	Запрос.УстановитьПараметр("Ссылка", Документ);
	Запрос.УстановитьПараметр("Подразделение", Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("Распоряжение", Реквизиты.Распоряжение);
	//Запрос.УстановитьПараметр("РаспоряжениеЗаполнено", ЗначениеЗаполнено(Реквизиты.Распоряжение));
	Запрос.УстановитьПараметр("ДокументОснование", Реквизиты.ДокументОснование);
	Запрос.УстановитьПараметр("Период", Реквизиты.Дата);
	// ++ rarus atyutyakin 02.03.2021  [ФТ.ИМ.02.01]
	ЭтоВидОперацииБезОбязательнойЗаявки = (Реквизиты.ВидОперации = рарусПриходТМЦ.ВидОперацииЗакупкаЧерезПодотчетноеЛицо()
		ИЛИ Реквизиты.ВидОперации = рарусПриходТМЦ.ВидОперацииЗакупкаПродуктовПитания()
		ИЛИ Реквизиты.ВидОперации = рарусПриходТМЦ.ВидОперацииЗакупкаНавигационныхКарт()
		ИЛИ Реквизиты.ВидОперации = рарусПриходТМЦ.ВидОперацииОприходованиеИзлишков());
	Запрос.УстановитьПараметр("ЭтоВидОперацииБезОбязательнойЗаявки", ЭтоВидОперацииБезОбязательнойЗаявки);
	//Запрос.УстановитьПараметр("ВидОперацииЗакупкаЧерезПодотчетноеЛицо", Перечисления.рарусВидыОперацийПриходаТМЦ.ЗакупкаЧерезПодотчетноеЛицо);
	// -- rarus atyutyakin 02.03.2021
	Запрос.УстановитьПараметр("РаспоряжениеНеЗаполнено", Не ЗначениеЗаполнено(Реквизиты.Распоряжение));
	Запрос.УстановитьПараметр("ОснованиеЗаполнено", ЗначениеЗаполнено(Реквизиты.ДокументОснование));
	Запрос.УстановитьПараметр("ОприходованиеБУ", Реквизиты.ОприходованиеБывшегоВУпотреблении);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	// ++ rarus atyutyakin 28.02.2021  [ФТ.ИМ.02.01]
	// Исключены движения по РН впТоварыНаСкладах
	//ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры);
	// -- rarus atyutyakin 28.02.2021
	ТекстЗапросаТаблицаТоварыКПоступлению(Запрос, ТекстыЗапроса, Регистры);
	
	// ++ rarus yukuzi 30.12.2020   // Снабжение ТОИР 2 Приоритет
	ТекстЗапросаТаблицарарусТоварыЗаявокНаСнабжение(Запрос, ТекстыЗапроса, Регистры);
	// -- rarus yukuzi 30.12.2020
	
	// ++ rarus makole 2021-01-21 [ФТ.ИМ.01.01]
	ПараметрыФОИмущественныйУчет = Новый Структура("Период, Судно", НачалоДня(Реквизиты.Дата), Реквизиты.Подразделение);
	Если рарусИмущественныйУчетСервер.ИспользоватьИмущественныйУчет(ПараметрыФОИмущественныйУчет) Тогда
		Запрос.УстановитьПараметр("Склад", рарусОбщегоНазначенияСервер.СкладСудна(Реквизиты.Подразделение));
		ТекстЗапросаТаблицаОтражениеДанныхИмущественногоУчета(Запрос, ТекстыЗапроса, Регистры);
	КонецЕсли;
	// -- rarus makole 2021-01-21
	
	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	
	Возврат ПроведениеДокументов.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса);
	
КонецФункции

#КонецОбласти

Функция ПолучитьЗаявкиНаСнабжение(Ссылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таблица.Заявка КАК Заявка
	|ИЗ
	|	Документ.впПриходТМЦ.ТМЦ КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка";
	
	МассивЗаявок = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Заявка");
	
	рарусОбщегоНазначенияСМСервер.УдалитьНеЗаполненныеЭлементыМассива(МассивЗаявок);
	
	Возврат МассивЗаявок;
	
КонецФункции

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	рарусИмущественныйУчетСервер.ДобавитьКомандуСоздатьИзменениеСтатусаТМЦНаОснованииПриходТМЦ(КомандыСозданияНаОсновании);
	
	рарусИмущественныйУчетСервер.ДобавитьКомандуСоздатьРасходТМЦНаОснованииПриходТМЦ(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	//ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
КонецПроцедуры

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

// ++ rarus atyutyakin 28.02.2021  [ФТ.ИМ.02.01]
// Исключены движения по РН впТоварыНаСкладах
//Функция ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры)
//	
//	ИмяРегистра = "впТоварыНаСкладах";
//	
//	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
//		Возврат "";
//	КонецЕсли;
//	
//	ТекстЗапроса = 
//	"ВЫБРАТЬ
//	|	&Период КАК Период,
//	|	впПриходТМЦТМЦ.Ссылка.Подразделение КАК Судно,
//	|	впПриходТМЦТМЦ.Номенклатура КАК Номенклатура,
//	|	впПриходТМЦТМЦ.Количество КАК ВНаличии
//	|ИЗ
//	|	Документ.впПриходТМЦ.ТМЦ КАК впПриходТМЦТМЦ
//	|ГДЕ
//	|	впПриходТМЦТМЦ.Ссылка = &Ссылка";
//	
//	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
//	
//	Возврат ТекстЗапроса;
//	
//КонецФункции
// -- rarus atyutyakin 28.02.2021

Функция ТекстЗапросаТаблицаТоварыКПоступлению(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "впТоварыКПоступлению";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) 
		
		// ++ rarus PleA 22.12.2020 [26189]
		//ИЛИ НЕ Запрос.Параметры.РаспоряжениеЗаполнено 
		// -- rarus PleA
		
		Тогда
		
		Возврат "";
		
	КонецЕсли;
	
	// ++ rarus PleA 28.12.2020 [26189]
	//ВидОперации = Запрос.Параметры.Ссылка.ВидОперации;
	//Если ВидОперации = Перечисления.рарусВидыОперацийПриходаТМЦ.ЗакупкаЧерезПодотчетноеЛицо Тогда
	//	Возврат "";
	//КонецЕсли;
	// -- rarus PleA
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Распоряжение КАК Распоряжение,
	|	впПриходТМЦТМЦ.КодСтроки КАК КодСтроки,
	|	впПриходТМЦТМЦ.Ссылка.Подразделение КАК Судно,
	|	впПриходТМЦТМЦ.Номенклатура КАК Номенклатура,
	|	впПриходТМЦТМЦ.Заявка КАК Заявка,
	|	впПриходТМЦТМЦ.Количество КАК Количество
	|ИЗ
	|	Документ.впПриходТМЦ.ТМЦ КАК впПриходТМЦТМЦ
	|ГДЕ
	|	впПриходТМЦТМЦ.Ссылка = &Ссылка
	// ++ rarus atyutyakin 02.03.2021  [ФТ.ИМ.02.01]
	|	И НЕ &ЭтоВидОперацииБезОбязательнойЗаявки
	// -- rarus atyutyakin 02.03.2021
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Распоряжение КАК Распоряжение,
	|	впПриходТМЦТМЦ.КодСтроки,
	|	впПриходТМЦТМЦ.Ссылка.Подразделение,
	|	впПриходТМЦТМЦ.Номенклатура,
	|	впПриходТМЦТМЦ.Заявка,
	|	впПриходТМЦТМЦ.Количество
	|ИЗ
	|	Документ.впПриходТМЦ.ТМЦ КАК впПриходТМЦТМЦ
	|ГДЕ
	|	впПриходТМЦТМЦ.Ссылка = &Ссылка
	// ++ rarus atyutyakin 02.03.2021  [ФТ.ИМ.02.01]
	|	И НЕ &ЭтоВидОперацииБезОбязательнойЗаявки
	//|	И НЕ впПриходТМЦТМЦ.Ссылка.ВидОперации = &ВидОперацииЗакупкаЧерезПодотчетноеЛицо
	// -- rarus atyutyakin 02.03.2021
	|	И &РаспоряжениеНеЗаполнено";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

// ++ rarus yukuzi 30.12.2020   // Снабжение ТОИР 2 Приоритет
Функция ТекстЗапросаТаблицарарусТоварыЗаявокНаСнабжение(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "рарусТоварыЗаявокНаСнабжение";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	// ++ rarus yukuzi 12.01.2021   // Снабжение ТОИР 2 Приоритет 
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	впПриходТМЦТМЦ.Номенклатура КАК Номенклатура,
	|	впПриходТМЦТМЦ.Заявка КАК Заявка,
	|	впПриходТМЦТМЦ.Количество КАК Заказано
	|ИЗ
	|	Документ.впПриходТМЦ.ТМЦ КАК впПриходТМЦТМЦ
	|ГДЕ
	// ++ rarus atyutyakin 02.03.2021  [ФТ.ИМ.02.01]
	|	впПриходТМЦТМЦ.Ссылка = &Ссылка
	|	И НЕ &ЭтоВидОперацииБезОбязательнойЗаявки";
	//|	впПриходТМЦТМЦ.Ссылка = &Ссылка";
	// -- rarus atyutyakin 02.03.2021
	// -- rarus yukuzi 12.01.2021

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции
// -- rarus yukuzi 30.12.2020

// ++ rarus makole 2021-01-21 [ФТ.ИМ.01.01]
// Добавить движение прихода по регистру накопления «Имущество на судах»
Функция ТекстЗапросаТаблицаОтражениеДанныхИмущественногоУчета(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "рарусИмуществоНаСудах";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	&Период КАК Период,
		|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
		|	ВЫБОР
		|		КОГДА &ОприходованиеБУ
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.рарусСтатусыИмуществаНаСудне.ОприходованоБУ)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.рарусСтатусыИмуществаНаСудне.НаСкладе)
		|	КОНЕЦ КАК Статус,
		|	&Склад КАК Склад,
		|	ТаблицаТоваров.Количество КАК Количество,
		|	ВЫБОР
		|		КОГДА ТаблицаТоваров.Заявка <> ЗНАЧЕНИЕ(Документ.впЗаявкаНаСнабжение.ПустаяСсылка)
		|			ТОГДА ТаблицаТоваров.Заявка
		|		КОГДА НЕ &РаспоряжениеНеЗаполнено
		|			ТОГДА &Распоряжение
		|		КОГДА &ОснованиеЗаполнено
		|			ТОГДА &ДокументОснование
		|	КОНЕЦ КАК Распоряжение,
		|	ТаблицаТоваров.Ссылка.рарусКодСинхронизации КАК КодСинхронизации
		|ИЗ
		|	Документ.впПриходТМЦ.ТМЦ КАК ТаблицаТоваров
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК спрНоменклатура
		|		ПО (ТаблицаТоваров.Ссылка = &Ссылка)
		|			И ТаблицаТоваров.Номенклатура = спрНоменклатура.Ссылка
		|			И (спрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар))
		// ++ rarus makole 2021-07-26 [Задача № 29841]
		//|			И (спрНоменклатура.ЭтоТопливо = ЛОЖЬ)";
		|			И (спрНоменклатура.ЭтоТопливо = ЛОЖЬ
		|				И спрНоменклатура.ВидНоменклатуры.ЭтоТопливо = ЛОЖЬ)";
		// -- rarus makole 2021-07-26
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаОтражениеДанныхИмущественногоУчета
// -- rarus makole 2021-01-21

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	// ++ rarus yukuzi 15.02.2021   //ФТ.СНБ.02. Задача_Штрихкодирование
	Судно=vftОбщегоНазначения.ПолучитьЗначениеПоУмолчанию("ОсновноеСудно");
	Если ЗначениеЗаполнено(Судно) тогда
		ПараметрыФО= Новый Структура("Период, Судно", ТекущаяДата(), Судно);
	иначе
		ПараметрыФО= Новый Структура("Период", ТекущаяДата());
	КонецЕсли;
	Если ПолучитьФункциональнуюОпцию("рарусИспользоватьШтрихкодирование",  ПараметрыФО) Тогда

	
		// Этикетки
		КомандаПечати = КомандыПечати.Добавить();	
		КомандаПечати.Идентификатор = "ЭтикеткиОбщие";
		КомандаПечати.Представление = НСтр("ru = 'Этикетки (общие этикетки  на позиции номенклатуры)';
		|en = 'Labels'");
		
		// Этикетки
		КомандаПечати = КомандыПечати.Добавить();	
		КомандаПечати.Идентификатор = "ЭтикеткиОтдельные";
		КомандаПечати.Представление = НСтр("ru = 'Этикетки (отдельные этикетки на каждую единицу номенклатуры)';
		|en = 'Labels'");

		
		КомандаПечати = КомандыПечати.Добавить();	
		КомандаПечати.Идентификатор = "ЭтикеткиА4";
		КомандаПечати.Представление = НСтр("ru = 'Этикетки (формат А4)';
		|en = 'Labels A4'");	
		
		// ++ rarus yukuzi 17.02.2021    // маленькие этикетки
		КомандаПечати = КомандыПечати.Добавить();	
		КомандаПечати.Идентификатор = "Этикетки58х40";
		КомандаПечати.Представление = НСтр("ru = 'Этикетки 58х40';
		|en = 'Labels 58х40'");
		
		КомандаПечати = КомандыПечати.Добавить();	
		КомандаПечати.Идентификатор = "Этикетки58х40_А4";
		КомандаПечати.Представление = НСтр("ru = 'Этикетки 58х40(формат А4)';
		|en = 'Labels 58х40 A4'");

		
		// -- rarus yukuzi 17.02.2021
		
		
	КонецЕсли;
	
	// -- rarus yukuzi 15.02.2021

КонецПроцедуры
// ++ rarus yukuzi 17.02.2021   // ФТ.СНБ.02. Задача_Штрихкодирование
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЭтикеткиОбщие") Тогда
		ОтображатьКоличество=Истина;
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ЭтикеткиОбщие",
		НСтр("ru = 'Этикетки (общие этикетки  на позиции номенклатуры)';
		|en = 'Labels'"),
		рарусШтрихкодирование.СформироватьПечатнуюФормуЭтикетка(  ДанныеДляПечатиЭтикетки(МассивОбъектов, ОтображатьКоличество), "ОбщиеМакеты.ПФ_MXL_Этикетки", Истина, ОтображатьКоличество)
		//СформироватьПечатнуюФормуЭтикетка(МассивОбъектов, ОбъектыПечати, "Документ.впПриходТМЦ.ПФ_MXL_Этикетки128", Истина)
		,
		,
		"ОбщиеМакеты.ПФ_MXL_Этикетки"
		);
		
	КонецЕсли;	

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЭтикеткиОтдельные") Тогда
		ОтображатьКоличество=Ложь;

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ЭтикеткиОтдельные",
		НСтр("ru = 'Этикетки (отдельные этикетки на каждую единицу номенклатуры)';
		|en = 'Labels'"),
		рарусШтрихкодирование.СформироватьПечатнуюФормуЭтикетка(  ДанныеДляПечатиЭтикетки(МассивОбъектов, ОтображатьКоличество), "ОбщиеМакеты.ПФ_MXL_Этикетки", Истина, ОтображатьКоличество)
		//СформироватьПечатнуюФормуЭтикетка(МассивОбъектов, ОбъектыПечати, "Документ.впПриходТМЦ.ПФ_MXL_Этикетки128", Истина)
		,
		,
		"ОбщиеМакеты.ПФ_MXL_Этикетки"
		);
		
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЭтикеткиА4") Тогда
		 ОтображатьКоличество=Ложь;

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ЭтикеткиА4",
		НСтр("ru = 'Этикетки';
		|en = 'Labels'"),
		рарусШтрихкодирование.СформироватьПечатнуюФормуЭтикетка(   ДанныеДляПечатиЭтикетки(МассивОбъектов, ОтображатьКоличество), "Документ.впПриходТМЦ.ПФ_MXL_Этикетки")
		,
		,
		"Документ.впПриходТМЦ.ПФ_MXL_Этикетки"
		);
		
	КонецЕсли;		    		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Этикетки58х40_А4") Тогда
		 ОтображатьКоличество=Ложь;

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"Этикетки58х40_А4",
		НСтр("ru = 'Этикетки (58х40)';
		|en = 'Labels 58х40'"),
		рарусШтрихкодирование.СформироватьПечатнуюФормуЭтикетка(   ДанныеДляПечатиЭтикетки(МассивОбъектов, ОтображатьКоличество), "Документ.впПриходТМЦ.ПФ_MXL_Этикетки58х40")
		,
		,
		"Документ.впПриходТМЦ.ПФ_MXL_Этикетки58х40"
		);
		
	КонецЕсли;		
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Этикетки58х40") Тогда
		ОтображатьКоличество=Ложь;

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"Этикетки58х40",
		НСтр("ru = 'Этикетки (58х40)';
		|en = 'Labels 58х40'"),
		рарусШтрихкодирование.СформироватьПечатнуюФормуЭтикетка(   ДанныеДляПечатиЭтикетки(МассивОбъектов, ОтображатьКоличество), "Документ.впПриходТМЦ.ПФ_MXL_Этикетки58х40", Истина)
		,
		,
		"Документ.впПриходТМЦ.ПФ_MXL_Этикетки58х40"
		);
		
	КонецЕсли;		    	

КонецПроцедуры

Функция ДанныеДляПечатиЭтикетки(Ссылки, ОтображатьКоличество=Истина) Экспорт
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	впПриходТМЦТМЦ.Ссылка КАК Ссылка,
	|	впПриходТМЦТМЦ.Номенклатура КАК Номенклатура,
	|	впПриходТМЦТМЦ.Заявка КАК Заявка,
	|	впПриходТМЦТМЦ.Ссылка.Подразделение КАК Судно,
	|	впПриходТМЦТМЦ.Заявка.НомерСудовойЗаявки КАК ЗаявкаНомерСудовойЗаявки,
	|	впПриходТМЦТМЦ.Ссылка.Распоряжение КАК Распоряжение,
	|	впПриходТМЦТМЦ.Количество КАК Количество,
	|	впПриходТМЦТМЦ.Ссылка.Номер КАК Номер,
	|	впПриходТМЦТМЦ.Ссылка.Дата КАК Дата,
	|	впПриходТМЦТМЦ.Номенклатура.рспбКодMDG КАК КодMDG
	|ПОМЕСТИТЬ втДок
	|ИЗ
	|	Документ.впПриходТМЦ.ТМЦ КАК впПриходТМЦТМЦ
	|ГДЕ
	|	впПриходТМЦТМЦ.Ссылка В(&Ссылки)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураДополнительныеРеквизиты.Ссылка КАК Номенклатура,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НоменклатураДополнительныеРеквизиты.Свойство В (&СвойствоКаталожныйНомер)
	|				ТОГДА НоменклатураДополнительныеРеквизиты.Значение
	|		КОНЕЦ) КАК ДопРекв_КаталожныйНомер,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НоменклатураДополнительныеРеквизиты.Свойство В (&СвойствоМодель)
	|				ТОГДА НоменклатураДополнительныеРеквизиты.Значение
	|		КОНЕЦ) КАК ДопРекв_Модель,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НоменклатураДополнительныеРеквизиты.Свойство В (&СвойствоПроизводитель)
	|				ТОГДА НоменклатураДополнительныеРеквизиты.Значение
	|		КОНЕЦ) КАК ДопРекв_Производитель,
	|	НоменклатураДополнительныеРеквизиты.Ссылка.ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ втДопРеквизиты
	|ИЗ
	|	Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	|ГДЕ
	|	НоменклатураДополнительныеРеквизиты.Ссылка В
	|			(ВЫБРАТЬ
	|				втДок.Номенклатура КАК Номенклатура
	|			ИЗ
	|				втДок КАК втДок)
	|	И (НоменклатураДополнительныеРеквизиты.Свойство В (&СвойствоКаталожныйНомер)
	|			ИЛИ НоменклатураДополнительныеРеквизиты.Свойство В (&СвойствоМодель)
	|			ИЛИ НоменклатураДополнительныеРеквизиты.Свойство В (&СвойствоПроизводитель))
	|
	|СГРУППИРОВАТЬ ПО
	|	НоменклатураДополнительныеРеквизиты.Ссылка,
	|	НоменклатураДополнительныеРеквизиты.Ссылка.ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(рарусШтрихкодыНоменклатуры.Штрихкод) КАК Штрихкод,
	|	рарусШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ втШК
	|ИЗ
	|	втДок КАК втДок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.рарусШтрихкодыНоменклатуры КАК рарусШтрихкодыНоменклатуры
	|		ПО втДок.Номенклатура = рарусШтрихкодыНоменклатуры.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	рарусШтрихкодыНоменклатуры.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДок.Ссылка КАК Ссылка,
	|	втДок.Номенклатура КАК Номенклатура,
	|	втДок.Заявка КАК Заявка,
	|	втДок.Судно КАК Судно,
	|	ВЫРАЗИТЬ(втДок.Заявка КАК Документ.впЗаявкаНаСнабжение).Номер КАК НомерЗаявкиНаВнутреннееПотребление,
	|	ВЫРАЗИТЬ(втДок.Заявка КАК Документ.впЗаявкаНаСнабжение).НомерСудовойЗаявки КАК НомерСудовойЗаявки,
	|	ВЫРАЗИТЬ(втДок.Распоряжение КАК Документ.впЗаказПоставщику).Номер КАК НомерЗаказаПоставщику,
	|	ВЫБОР
	|		КОГДА &ОтображатьКоличество
	|			ТОГДА втДок.Количество
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ОтображатьКоличество
	|			ТОГДА втДок.Количество
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК КоличествоПечати,
	|	втДок.Номер КАК Номер,
	|	втДок.Дата КАК Дата,
	|	втДок.КодMDG КАК КодMDG,
	|	ПРЕДСТАВЛЕНИЕ(втДок.Номенклатура) КАК НоменклатураПредставление,
	|	ПРЕДСТАВЛЕНИЕ(втДок.Судно) КАК СудноПредставление,
	|	ЕСТЬNULL(втШК.Штрихкод, """") КАК Штрихкод,
	|	втДопРеквизиты.ДопРекв_КаталожныйНомер КАК НомерКаталога,
	|	втДопРеквизиты.ДопРекв_Модель КАК ОборудованиеПредставление,
	|	втДопРеквизиты.ДопРекв_Производитель КАК ПроизводительПредставление,
	|	ПРЕДСТАВЛЕНИЕ(втДопРеквизиты.ВидНоменклатуры) КАК ТипОборудованияПредставление
	|ИЗ
	|	втДок КАК втДок
	|		ЛЕВОЕ СОЕДИНЕНИЕ втШК КАК втШК
	|		ПО втДок.Номенклатура = втШК.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ втДопРеквизиты КАК втДопРеквизиты
	|		ПО втДок.Номенклатура = втДопРеквизиты.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Заявка");
	
	Запрос.УстановитьПараметр("Ссылки", Ссылки);
	Запрос.УстановитьПараметр("ОтображатьКоличество", ОтображатьКоличество);

	рарусШтрихкодирование.ПараметрыЗапросаПоДопреквизитам(Запрос);
	
	УстановитьПривилегированныйРежим(Истина);
	//Возврат Запрос.Выполнить().Выбрать();
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// -- rarus yukuzi 17.02.2021

#КонецОбласти

// Добавляет команду создания документа "Изменение ассортимента".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
		
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#КонецЕсли