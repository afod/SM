
#Область События_Формы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	ИспользоватьСУБ =  ПолучитьФункциональнуюОпцию("рарусИспользоватьФункционалСУБ");
	
	// ++ rarus ilshill 19.01.2020
	Если Не ИспользоватьСУБ Тогда 
		vftОбщиеПроцедурыДокументовСервер.ПриСозданииНаСервере(Отказ,Объект);
		Элементы.Примечание.Заголовок = "Примечание";
	КонецЕсли;
	
	Элементы.ФормаРазрешитьРедактированиеВсехРеквизитов.Видимость = Не ИспользоватьСУБ; 
	
	// -- rarus ilshill 19.01.2020
	
	УстановитьУсловноеОформление();
	
	vftОбщиеПроцедурыДокументовСервер.УстановитьДоступностьЭлементовФормы(ЭтаФорма);
	
	ГлавныйУзел = ПланыОбмена.ГлавныйУзел() = Неопределено;
	
	//  ++ rarus ilshill 19.01.2020
	Если Не ИспользоватьСУБ Тогда 
		ЭтаФорма.ТолькоПросмотр =  НЕ vftОбщиеПроцедурыДокументовСервер.ПолучитьВозможностьРедактироватьФормуПоСтатусу(Объект.Статус);
	КонецЕсли;
	//
	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	
	//УстановитьСвойстваЭлементов();

	Если Не ИспользоватьСУБ Тогда  
		УстановитьДоступностьРеквизитов();
	КонецЕсли;
	// -- rarus ilshill 19.01.2020
		
	//++ rarus ilshill 19.01.2020
	//СтандартныеПодсистемы.РаботаСФайлами
	ПараметрыГиперссылки = РаботаСФайлами.ГиперссылкаФайлов();
	ПараметрыГиперссылки.Размещение = "КоманднаяПанель";
	РаботаСФайлами.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыГиперссылки);
	//Конец СтандартныеПодсистемы.РаботаСФайлами
		
	Если ИспользоватьСУБ Тогда
		
		НастроитьДоступностьРеквизитовФормы(ЭтотОбъект);
		
		ДополнительныеПараметры = рарусСУБСервер.ПараметрыПриСозданииНаСервере();
		ДополнительныеПараметры.Форма = ЭтотОбъект;
		ИспользоватьКоманду = рарусСУБСервер.ПолучитьПризнакОтображенияКомандыСменыСтатусов(Объект.Статус);
		ДополнительныеПараметры.ИспользоватьКоманду = ИспользоватьКоманду;	
		ДополнительныеПараметры.МестоРазмещенияКоманд =  Элементы.ПодменюСтатус;
		
		рарусСУБСервер.РазместитьКомандуОтменыСтатусаНаФорме(ДополнительныеПараметры);
		
		Если Объект.Статус = Перечисления.vftСтатусыДокументовСообщений.Отправлен 
			Или Объект.Статус = Перечисления.vftСтатусыДокументовСообщений.Закрыт  
			Или Объект.Статус = Перечисления.vftСтатусыДокументовСообщений.Получен Тогда
			
			ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
			
		КонецЕсли;
		
	Иначе
		
		vftОбщиеПроцедурыДокументовСервер.УстановитьКнопкиИзмененияСтатуса(ЭтаФорма,Элементы.ПодменюСтатус,Объект.Статус);	
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);	
	// ++ rarus ilshill 19.01.2020
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.РаботаСФайлами
	РаботаСФайламиКлиент.ПриОткрытии(ЭтотОбъект, Отказ);
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
		
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	СобытияФорм.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	
	Если ПолучитьФункциональнуюОпцию("рарусИспользоватьФункционалСУБ") Тогда
		Если Объект.Статус = Перечисления.vftСтатусыДокументовСообщений.Отправлен 
			Или Объект.Статус = Перечисления.vftСтатусыДокументовСообщений.Закрыт
			Или Объект.Статус = Перечисления.vftСтатусыДокументовСообщений.Получен Тогда  
			
			ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветКомпанииПриИзменении(Элемент)
	
	Объект.Ответственный = ТекущийПользователь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ОбновитьСписокЖурналДокументов",,ПолучитьФорму("ОбщаяФорма.vftЖурналДокументов")); 
	
	Оповестить("ОбновитьЖурналДокументов");
	
КонецПроцедуры

#КонецОбласти 

#Область Управление_Доступностью

&НаСервере
Процедура УстановитьДоступностьРеквизитов();
	
	МассивНедоступныхДляРедатированияРеквизитов = ПолучитьЗапрещенныеРеквизиты();
	
	vftОбщиеПроцедурыДокументовСервер.УстановитьДоступностьРеквизитов(ЭтаФорма,МассивНедоступныхДляРедатированияРеквизитов,Истина);
	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьЗапрещенныеРеквизиты()
	
	Возврат	ПолучитьСоответствиеСтатусаИЗапрещенныхРеквизитов().Получить(Объект.Статус);
	
КонецФункции

&НаСервере
Функция ПолучитьСоответствиеСтатусаИЗапрещенныхРеквизитов() Экспорт
	
	Соответствие = Новый Соответствие;  

	МассивВсеРеквизиты = vftОбщиеПроцедурыДокументовСервер.ПолучитьВсеЭлементыФормыДокумента(Объект,Ложь);
	
	Если ГлавныйУзел тогда
		
		Соответствие.Вставить(Перечисления.vftСтатусыДокументовСообщений.Черновик,МассивВсеРеквизиты);	
		
		МассивОтправлен = vftОбщиеПроцедурыДокументовСервер.СкопироватьМассивСтрок(МассивВсеРеквизиты,"#ОтветКомпании#Ответственный#");		
		Соответствие.Вставить(Перечисления.vftСтатусыДокументовСообщений.Отправлен	,МассивОтправлен);
		
		Соответствие.Вставить(Перечисления.vftСтатусыДокументовСообщений.Получен	,МассивВсеРеквизиты);
		Соответствие.Вставить(Перечисления.vftСтатусыДокументовСообщений.Закрыт		,МассивВсеРеквизиты);

	Иначе
		
		МассивЧерновик = Новый Массив;
		МассивЧерновик.Добавить("ОтветКомпании");
		МассивЧерновик.Добавить("Ответственный");
		Соответствие.Вставить(Перечисления.vftСтатусыДокументовСообщений.Черновик	,МассивЧерновик);
		
		Соответствие.Вставить(Перечисления.vftСтатусыДокументовСообщений.Отправлен	,МассивВсеРеквизиты);
		Соответствие.Вставить(Перечисления.vftСтатусыДокументовСообщений.Получен	,МассивВсеРеквизиты);
		Соответствие.Вставить(Перечисления.vftСтатусыДокументовСообщений.Закрыт		,МассивВсеРеквизиты);
		
	КонецЕсли;
	
	Возврат  Соответствие;
	
КонецФункции

&НаКлиенте
Процедура РазрешитьРедактированиеВсехРеквизитов(Команда)
	
РазрешитьРедактированиеВсехРеквизитовСервер();	

КонецПроцедуры

&НаСервере
Процедура РазрешитьРедактированиеВсехРеквизитовСервер()
	
vftОбщиеПроцедурыДокументовСервер.РазрешитьРедактированиеВсехРеквизитов(ЭтаФорма);	

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьДоступностьРеквизитовФормы(Форма)

	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	Элементы.ФИОЛицоСообщившееОбИнциденте.Заголовок = "ФИО лица, сообщившего об инциденте";
	Элементы.Ответственный.Заголовок = "Ответственный береговой службы";
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСвойстваЭлементов()

	МассивЭлементов = Новый Массив();
	
	Если Объект.Статус = Перечисления.vftСтатусыДокументовСообщений.Черновик Тогда
		
		МассивЭлементов.Добавить("ДатаВремя");
		МассивЭлементов.Добавить("ОписаниеПотенциальногоИнцидента");
		МассивЭлементов.Добавить("ПричинаВозникновения");
		МассивЭлементов.Добавить("ВозможныеПоследствия");
		МассивЭлементов.Добавить("ПредпринятыеДействия");
		МассивЭлементов.Добавить("ЛицоСообщившееОбИнциденте");
		МассивЭлементов.Добавить("ФИОЛицоСообщившееОбИнциденте");
		МассивЭлементов.Добавить("ФИОКапитана");

		Для Каждого Элемент Из МассивЭлементов Цикл 
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, Элемент, "АвтоОтметкаНезаполненного", Ложь);
			
		КонецЦикла;
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область Кнопки_Изменения_Статуса

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИзмененияСтатуса(Команда)
	
	Объект.Статус = vftОбщиеПроцедурыДокументовКлиент.ПолучитьСтатусПоИмениКоманды(Команда.Имя);
	
	/////rarus_rasuli_26.02.18 ++
	ИзменениеДатыПриСтатусеОтправлен();
	/////rarus_rasuli_26.02.18 --
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуСменыСтатуса(Команда)

	Стастус = ПредопределенноеЗначение("Перечисление.vftСтатусыДокументовСообщений.Черновик");
	Объект.Статус = Стастус;
	Записать(Неопределено);	
	Закрыть();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьВозможныеСтатусы() Экспорт
		
		Возврат vftОбщиеПроцедурыДокументовСервер.ПолучитьВозможныеСтатусы();
		
КонецФункции

/////rarus_rasuli_26.02.18 ++
 &НаСервере
Функция ИзменениеДатыПриСтатусеОтправлен() 
	
	Если Объект.Статус = Перечисления.vftСтатусыДокументовСообщений.Отправлен Тогда
		Объект.Дата = ТекущаяДата();
	КонецЕсли;	
	
КонецФункции
/////rarus_rasuli_26.02.18 --

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
    ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВБереговоеПодразделение(Команда)
	
	Статус = ПредопределенноеЗначение("Перечисление.vftСтатусыДокументовСообщений.Отправлен");
	
	ТекстВопроса = "Сообщение будет зарегистрировано к отправке в береговую систему. Продолжить?";
	
	ОписаниеОповещения = Новый ОписаниеОповещения("УстановитьСтатусСогласованияЗавершение", ЭтотОбъект, Статус);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьДокумент(Команда)
	
	Если Не Объект.Статус = ПредопределенноеЗначение("Перечисление.vftСтатусыДокументовСообщений.Получен") Тогда
		Возврат;
	КонецЕсли;
	
	
	Статус = ПредопределенноеЗначение("Перечисление.vftСтатусыДокументовСообщений.Закрыт");
	ТекстВопроса = "Сообщение будет закрыто. Продолжить?";
	
	ОписаниеОповещения = Новый ОписаниеОповещения("УстановитьСтатусСогласованияЗавершение", ЭтотОбъект, Статус);
	
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);

	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатусСогласованияЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		УстановитьСтатусСогласованияЗаписатьИЗакрыть(ДополнительныеПараметры);
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатусСогласованияЗаписатьИЗакрыть(СтатусСогласования)
		
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("РежимЗаписи", РежимЗаписиДокумента.Запись);
	
	Объект.Статус = СтатусСогласования;
	
	Если Записать(ПараметрыЗаписи) тогда
		Закрыть();
	КонецЕсли;	

КонецПроцедуры

// СтандартныеПодсистемы.РаботаСФайлами
&НаКлиенте
Процедура Подключаемый_КомандаПанелиПрисоединенныхФайлов(Команда)
	
	РаботаСФайламиКлиент.КомандаУправленияПрисоединеннымиФайлами(ЭтотОбъект, Команда);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.РаботаСФайлами

#Область ОбработчикиСобытийЭлементовШапкиФормы
// СтандартныеПодсистемы.РаботаСФайлами
&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраНажатие(Элемент, СтандартнаяОбработка)
	РаботаСФайламиКлиент.ПолеПредпросмотраНажатие(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	РаботаСФайламиКлиент.ПолеПредпросмотраПеретаскивание(ЭтотОбъект, Элемент,ПараметрыПеретаскивания, СтандартнаяОбработка);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	РаботаСФайламиКлиент.ПолеПредпросмотраПроверкаПеретаскивания(ЭтотОбъект, Элемент,ПараметрыПеретаскивания, СтандартнаяОбработка);
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда) Экспорт
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды() Экспорт
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуВзаимодействияСБерегом(Команда)
	
	рарусСУБКлиент.ПриИзмененииСтатусаВзаимодействияСБерегом(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
		
	СтатусСогласованияУстановить = Неопределено;
	ПараметрыЗаписи.Свойство("СтатусСогласованияУстановить", СтатусСогласованияУстановить);
	
	Если ЗначениеЗаполнено(СтатусСогласованияУстановить) тогда
		ТекущийОбъект.ДополнительныеСвойства.Вставить("СтатусСогласованияУстановить", СтатусСогласованияУстановить);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	                                                            	 
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОтветКомпании.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Статус");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.vftСтатусыДокументовСообщений.Черновик;

	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);

КонецПроцедуры


#КонецОбласти

#КонецОбласти


