
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс



#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
		
	Если ВидФормы = "ФормаСписка" Тогда
		
		Если ПолучитьФункциональнуюОпцию("рарусИспользоватьФункционалСУБ") Тогда 
			
			СтандартнаяОбработка = Ложь;
			ВыбраннаяФорма = "ФормаСпискаСУБ";
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

// См. ЗапретРедактированияРеквизитовОбъектовПереопределяемый.ПриОпределенииОбъектовСЗаблокированнымиРеквизитами.
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("Судно");
	Результат.Добавить("ДатаВремя");
	Результат.Добавить("ОписаниеПотенциальногоИнцидента");
	Результат.Добавить("ПричинаВозникновения");
	Результат.Добавить("ВозможныеПоследствия");
	Результат.Добавить("ПредпринятыеДействия");
	Результат.Добавить("Примечание");
	Результат.Добавить("ЛицоСообщившееОбИнциденте");
	Результат.Добавить("ФИОЛицоСообщившееОбИнциденте");
	Результат.Добавить("ФИОКапитана");
	Результат.Добавить("ОтветКомпании");
	Результат.Добавить("Ответственный");
	Результат.Добавить("КоманднаяПанель");
	Возврат Результат;
	
КонецФункции

#Область Печать
// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
		КомандаПечати = КомандыПечати.Добавить();	
		КомандаПечати.Идентификатор = "СообщениеОПотенциальномИнциденте";
		КомандаПечати.Представление = НСтр("ru = 'СообщениеОПотенциальномИнциденте';
		|en = 'Safety management system analysis'");	
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		
		// АнализСУБ (Microsoft Word)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "рарусСУБКлиент.ПечатьАнализаСУБWord";
		КомандаПечати.МенеджерПечати = "";                                            
		КомандаПечати.Идентификатор = "АнализСУБMicrosoftWord";
		КомандаПечати.Представление = НСтр("ru = 'АнализСУБ (Microsoft Word)';
		|en = 'Safety management system analysis (Microsoft Word)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ТребуетсяРасширениеРаботыСФайлами = Истина;
		
КонецПроцедуры

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ОшибкиПечати          - Список значений  - Ошибки печати  (значение - ссылка на объект, представление - текст ошибки)
//   ОбъектыПечати         - Список значений  - Объекты печати (значение - ссылка на объект, 
//												представление - имя области в которой был выведен объект)
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СообщениеОПотенциальномИнциденте") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"СообщениеОПотенциальномИнциденте", НСтр("ru = 'Сообщение о потенциальном инциденте'"),
		ПечатьСообщения(МассивОбъектов, ОбъектыПечати), ,
		"ПФ_MXL_СообщениеОПотенциальномИнциденте");
	КонецЕсли;
	

КонецПроцедуры

Функция ПечатьСообщения(МассивОбъектов, ОбъектыПечати,ВставлятьРазрывВКонцеМакета = Истина) Экспорт
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.VftСообщениеОПотенциальномИнциденте.ПФ_MXL_СообщениеОПотенциальномИнциденте");
	Область = Макет.ПолучитьОбласть("Шапка");
	
	ДокументыСообщения = vftОбщиеПроцедурыДокументовСервер.ПолучитьРеквизитыСообщенийОПотенциальномИнциденте(МассивОбъектов);
	
	ТабличныйДокумент = новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Для каждого Документ из ДокументыСообщения Цикл
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Область.Параметры.Заполнить(Документ);
		
		Если ПолучитьФункциональнуюОпцию("рарусИспользоватьФункционалСУБ") Тогда
			Область.Параметры.ПримечаниеЗаголовок = "Предложения по улучшению";
			Область.Параметры.КорДействия = "Предпринятые корректирующие действия";
		Иначе
			Область.Параметры.ПримечаниеЗаголовок = "Примечание";	
			Область.Параметры.КорДействия = "Предпринятые корректирующие действия во избежание повторения";
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(Область);
		Если ВставлятьРазрывВКонцеМакета Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Документ.Ссылка);	
		
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

#Область РегистрацияОбмена

Процедура ПередОбработкой(ИмяПланаОбмена, Отказ, Объект, Объектметаданных, Выгрузка, ПРО) Экспорт
	
	рарусОбменСУБСервер.ПередОбработкой(ИмяПланаОбмена, Отказ, Объект, Объектметаданных, Выгрузка, ПРО);
	
КонецПроцедуры	

Процедура ПослеОбработки(ИмяПланаОбмена, Отказ, Объект, Объектметаданных, Выгрузка, Получатели) Экспорт

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли