
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ТаблицаЗаписейРегистра = впОбщиеПроцедурыДокументовТОИР.ПолучитьТаблицуРемонтов(РемонтыОборудования, Ссылка, Ложь);

	МассивНовых = ТаблицаЗаписейРегистра.НайтиСтроки(Новый Структура("ПрежняяЗаявка", Ложь));
	
	Для Каждого СтрМассива из МассивНовых Цикл
		Запись = РегистрыСведений.впПланГрафикППР.СоздатьМенеджерЗаписи();
		Запись.УникальныйИдентификатор = СтрМассива.УникальныйИдентификатор;
		Запись.Прочитать();
		Если Запись.Выбран() Тогда
			ЗаполнитьЗначенияСвойств(Запись, СтрМассива);
			
			// ++ rarus selmik 03.03.2021
			Если Не ЗначениеЗаполнено(Запись.ДатаНачалаПлан) Тогда
				Если ЗначениеЗаполнено(рарусПлановаяДатаНачалаРабот) Тогда
					Запись.ДатаНачалаПлан	= рарусПлановаяДатаНачалаРабот;
				Иначе
					Запись.ДатаНачалаПлан	= Дата;
				КонецЕсли;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(Запись.ДатаОкончанияПлан) Тогда
				Если ЗначениеЗаполнено(рарусПлановаяДатаОкончанияРабот) Тогда
					Запись.ДатаОкончанияПлан = рарусПлановаяДатаОкончанияРабот;
				Иначе
					Запись.ДатаОкончанияПлан = Дата;
				КонецЕсли;			
			КонецЕсли;
			// -- rarus selmik 03.03.2021
			
			Запись.ЕстьЗаявка = Истина;
			Запись.Записать(Истина);
		КонецЕсли;
	КонецЦикла;
	
	Движения.впЗаявкиПоРемонтам.Записывать = Истина;
	Для Каждого СтрРемонта Из РемонтыОборудования Цикл
		
		Движение = Движения.впЗаявкиПоРемонтам.Добавить();
		Движение.Период 			= МоментВремени().Дата;
		Движение.IDРемонта			= СтрРемонта.ID;
		Движение.ДатаНачала			= СтрРемонта.ДатаНачала;
		Движение.ДатаОкончания		= СтрРемонта.ДатаОкончания;
		
		// ++ rarus selmik 03.03.2021
		Если Не ЗначениеЗаполнено(СтрРемонта.ДатаНачала) Тогда
			Если ЗначениеЗаполнено(рарусПлановаяДатаНачалаРабот) Тогда
				Движение.ДатаНачала		= рарусПлановаяДатаНачалаРабот;
			Иначе
				Движение.ДатаНачала		= Дата;
			КонецЕсли;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрРемонта.ДатаОкончания) Тогда
			Если ЗначениеЗаполнено(рарусПлановаяДатаОкончанияРабот) Тогда
				Движение.ДатаОкончания	= рарусПлановаяДатаОкончанияРабот;
			Иначе
				Движение.ДатаОкончания	= Дата;
			КонецЕсли;			
		КонецЕсли;
		// -- rarus selmik 03.03.2021


	КонецЦикла;		
	
	
	// rarus evgenu 2020_12_09 ++ 
	Движения.впРемонты.Записывать = Истина;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.впВидДокумента.ЗаявкаНаРемонт) КАК ВидДокумента,
	|	РемонтыОборудования.ОбъектРемонта КАК ОбъектРемонта,
	|	РемонтныеРаботы.РемонтнаяРабота КАК Операция,
	|	РемонтныеРаботы.Родитель_ID КАК IDРодителя,
	|	РемонтныеРаботы.ID КАК ID,
	|	РемонтныеРаботы.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
	|	100 КАК Процент
	|ИЗ
	|	Документ.впЗаявкаНаРемонт.РемонтныеРаботы КАК РемонтныеРаботы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.впЗаявкаНаРемонт.РемонтыОборудования КАК РемонтыОборудования
	|		ПО РемонтныеРаботы.Ссылка = РемонтыОборудования.Ссылка
	|			И РемонтныеРаботы.РемонтыОборудования_ID = РемонтыОборудования.ID
	|ГДЕ
	|	РемонтныеРаботы.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Движения.впРемонты.Загрузить(Запрос.Выполнить().Выгрузить());
	// rarus evgenu 2020_12_09 --
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ТаблицаЗаписейРегистра = впОбщиеПроцедурыДокументовТОИР.ПолучитьТаблицуРемонтов(РемонтыОборудования, Ссылка, Ложь);
	
	САктами = ТаблицаЗаписейРегистра.НайтиСтроки(Новый Структура("ЕстьАкт", Истина));
	ТекстОшибки = ""; 
	Для Каждого СтрСАктами из САктами Цикл
		ТекстОшибки = ТекстОшибки + Строка(СтрСАктами.НомерСтроки) + "; ";
	КонецЦикла;
	Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр("ru='Для ремонтов документа заведены акты! Строки: %1'"), ТекстОшибки));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрРемРег из ТаблицаЗаписейРегистра Цикл
		Запись = РегистрыСведений.впПланГрафикППР.СоздатьМенеджерЗаписи();
		Запись.УникальныйИдентификатор = СтрРемРег.УникальныйИдентификатор;
		Запись.Прочитать();
		Если Запись.Выбран() Тогда 
			Запись.ЕстьЗаявка = Ложь;
			Запись.Завершен = Ложь;
			//Запись.ДатаНачалаПлан = Неопределено;
			//Запись.ДатаОкончанияПлан = Неопределено;
			Запись.Записать(Истина);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.впВыявленныеДефекты") Тогда
		
	Дата = ДанныеЗаполнения.Дата+1;
		Подразделение = ДанныеЗаполнения.Подразделение;
		Организация = ДанныеЗаполнения.Организация;
		Ответственный = Пользователи.ТекущийПользователь();
		
		ДокументыОснования.Добавить().ДокументОснование = ДанныеЗаполнения;
		Для Каждого СтрокаТаблицы из ДанныеЗаполнения.СписокДефектов Цикл
			СтрокаДобавл = РемонтыОборудования.Добавить();
			СтрокаДобавл.ID = СтрокаТаблицы.ID;
			СтрокаДобавл.ДатаНачала = ТекущаяДатаСеанса();
			СтрокаДобавл.ДатаОкончания = ТекущаяДатаСеанса();
			СтрокаДобавл.ОбъектРемонта = СтрокаТаблицы.ОтказавшийЭлемент;
			СтрокаДобавл.КритичностьДефекта = СтрокаТаблицы.КритичностьДефекта;
			СтрокаДобавл.ДокументИсточник = ДанныеЗаполнения;
			СтрокаДобавл.ОписаниеРемонта = СтрокаТаблицы.ДефектОписание;
			СтрокаДобавл.ЗакрываетПредписание = СтрокаТаблицы.ЗакрываетПредписание;
			СтрокаДобавл.ВидРемонтныхРабот = Константы.впВидРемонтаПриВводеНаОснованииВыявленныхДефектов.Получить();
			СтрокаИсп = ИсполнителиПоРемонтам.Добавить();
			СтрокаИсп.РемонтыОборудования_ID = СтрокаТаблицы.ID;
			
			// ++ rarus selmik 18.12.2020 25003			
			СтрокаИсп.Исполнитель = СтрокаТаблицы.ОтказавшийЭлемент.ПодразделениеИсполнитель;
			// -- rarus selmik 18.12.2020 25003
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.впВнешнееОснованиеДляРабот") Тогда
		Дата = ДанныеЗаполнения.Дата+1;
		Подразделение = ДанныеЗаполнения.Подразделение;
		Организация = ДанныеЗаполнения.Организация;
		Ответственный = Пользователи.ТекущийПользователь();
		
		ДокументыОснования.Добавить().ДокументОснование = ДанныеЗаполнения;
	
		Для Каждого СтрокаТаблицы из ДанныеЗаполнения.ОбследованноеОборудование Цикл
			СтрокаДобавл = РемонтыОборудования.Добавить();
			СтрокаДобавл.ID = СтрокаТаблицы.ID;
			СтрокаДобавл.ДатаНачала = ТекущаяДатаСеанса();
			СтрокаДобавл.ДатаОкончания = ТекущаяДатаСеанса();
			СтрокаДобавл.ОбъектРемонта = СтрокаТаблицы.ОбъектРемонта;
			СтрокаДобавл.ДокументИсточник = ДанныеЗаполнения;
			СтрокаДобавл.ОписаниеРемонта = СтрокаТаблицы.Описание;
			СтрокаДобавл.ЗакрываетПредписание = Истина;
			СтрокаДобавл.ВидРемонтныхРабот = Константы.впВидРемонтаПриВводеНаОснованииВнешнихОснований.Получить();
			СтрокаИсп = ИсполнителиПоРемонтам.Добавить();
			СтрокаИсп.РемонтыОборудования_ID = СтрокаТаблицы.ID;
			СтрокаИсп.Исполнитель = СтрокаТаблицы.Исполнитель;
		КонецЦикла;
	КонецЕсли;
	// ++ rarus selmik 25.03.2021
	Если Не ЗначениеЗаполнено(Подразделение) И ЭтоНовый() Тогда
		Подразделение = vftОбщегоНазначения.ПолучитьЗначениеПоУмолчанию("ОсновноеСудно");
	КонецЕсли;
	// -- rarus selmik 25.03.2021
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	// ++ rarus selmik 29.03.2021
	Если Не Отказ Тогда
		ОбъектыРемонтаСтрокой_ДоИзменения = ОбъектыРемонтаСтрокой;
		ОбъектыРемонтаСтрокой_НовоеЗначение = "";
		
		РемонтыОборудованияТЗ = РемонтыОборудования.Выгрузить(,"ОбъектРемонта");
		РемонтыОборудованияТЗ.Свернуть("ОбъектРемонта");
		
		Для Каждого	ЭлементОбъектРемонта Из РемонтыОборудованияТЗ Цикл
			Если ЗначениеЗаполнено(ЭлементОбъектРемонта.ОбъектРемонта) Тогда
				
				Если Не ЗначениеЗаполнено(ОбъектыРемонтаСтрокой_НовоеЗначение) Тогда
					ОбъектыРемонтаСтрокой_НовоеЗначение = ЭлементОбъектРемонта.ОбъектРемонта.Наименование;
				Иначе
					ОбъектыРемонтаСтрокой_НовоеЗначение = ОбъектыРемонтаСтрокой_НовоеЗначение + "; " + ЭлементОбъектРемонта.ОбъектРемонта.Наименование;
				КонецЕсли;
				
			КонецЕсли;			
		КонецЦикла;
		
		Если ОбъектыРемонтаСтрокой_ДоИзменения <> ОбъектыРемонтаСтрокой_НовоеЗначение Тогда
			ОбъектыРемонтаСтрокой = ОбъектыРемонтаСтрокой_НовоеЗначение;	
		КонецЕсли;
	КонецЕсли;
	// -- rarus selmik 29.03.2021
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	// ++ rarus selmik 04.10.2021 РАIT-0023502
	Если Не Отказ Тогда
		рарусОбщегоНазначенияВызовСервера.ПолучитьСтатусЗаявкиНаРемонт(Ссылка);
	КонецЕсли;
	// -- rarus selmik 04.10.2021 РАIT-0023502
КонецПроцедуры


