#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	//ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
// КомандыПечати – ТаблицаЗначений – состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Заявка на ремонт
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.впЗаявкаНаРемонт";
	КомандаПечати.Идентификатор = "Заявка";
	КомандаПечати.Представление = НСтр("ru = 'Смета ремонта (Заявка на ремонт)'");
	КомандаПечати.Обработчик = "впПечать.ЗапроситьУПользователяДополнительныеПараметрыПередПечатью";
	КомандаПечати.СразуНаПринтер = Ложь;
	
КонецПроцедуры

#КонецОбласти

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую.
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	НужноПечататьМакет = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Заявка");
	Если НужноПечататьМакет Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"Заявка",
		НСтр("ru = 'Смета ремонта (Заявка на ремонт)'"),
		ПечатьЗаявки(МассивОбъектов, ПараметрыПечати),
		, 
		"Документ.впЗаявкаНаРемонт.ПФ_MXL_Заявка");

	КонецЕсли;
	
КонецПроцедуры

// Процедура вывода на экран печатной формы документа
// впЗаявкаНаРемонт.
//
//  Параметры:
//   Заявка - ссылка на текущий документ впЗаявкаНаРемонт.  
Функция ПечатьЗаявки(МассивОбъектов, ПараметрыПечати) 
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.АвтоМасштаб = Истина;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.впЗаявкаНаРемонт.ПФ_MXL_Заявка");
	ШапкаДокумента                = Макет.ПолучитьОбласть("ШапкаДокумента");
	ШапкаСоставРабот              = Макет.ПолучитьОбласть("ШапкаСоставРаботКомментарий");
	
	ШапкаНоменклатуры         = Макет.ПолучитьОбласть("ШапкаНоменклатура");
	СтрокаТаблицыНоменклатуры = Макет.ПолучитьОбласть("СтрокаТаблицыНоменклатуры");
	ШапкаЗапчасти             = Макет.ПолучитьОбласть("ШапкаЗапчасти");
	СтрокаТаблицыЗапчастей    = Макет.ПолучитьОбласть("СтрокаТаблицыЗапчастей");
	ШапкаТрудозатраты             = Макет.ПолучитьОбласть("ШапкаТрудозатраты");
	ШапкаИнструменты              = Макет.ПолучитьОбласть("ШапкаИнструменты");
	СтрокаТаблицыРабот            = Макет.ПолучитьОбласть("СтрокаТаблицыРаботКомментарий");
	СтрокаТаблицыТрудозатрат      = Макет.ПолучитьОбласть("СтрокаТаблицыТрудозатрат");
	СтрокаТаблицыИнструментов     = Макет.ПолучитьОбласть("СтрокаТаблицыИнструментов");
	Подвал                        = Макет.ПолучитьОбласть("Подвал");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 	"ВЫБРАТЬ
	               	|	впЗаявкаНаРемонтРемонтыОборудования.Ссылка КАК Ссылка,
	               	|	впЗаявкаНаРемонтРемонтыОборудования.Ссылка.Номер КАК Номер,
	               	|	впЗаявкаНаРемонтРемонтыОборудования.Ссылка.Дата КАК Дата,
	               	|	впЗаявкаНаРемонтРемонтыОборудования.Ссылка.Подразделение КАК Подразделение,
	               	|	впЗаявкаНаРемонтРемонтыОборудования.Ссылка.Ответственный КАК Ответственный,
	               	|	впЗаявкаНаРемонтРемонтыОборудования.ОбъектРемонта КАК ОбъектРемонта,
	               	|	впЗаявкаНаРемонтРемонтыОборудования.ID КАК ID,
	               	|	впЗаявкаНаРемонтРемонтыОборудования.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	               	|	впЗаявкаНаРемонтРемонтыОборудования.ДатаНачала КАК ДатаНачала,
	               	|	впЗаявкаНаРемонтРемонтыОборудования.ДатаОкончания КАК ДатаОкончания,
	               	|	впЗаявкаНаРемонтРемонтыОборудования.ОписаниеРемонта КАК ОписаниеРемонта,
	               	|	впЗаявкаНаРемонтРемонтыОборудования.ОбъектРемонта.ИнвентарныйНомер КАК ИнвентарныйНомер
	               	|ИЗ
	               	|	Документ.впЗаявкаНаРемонт.РемонтыОборудования КАК впЗаявкаНаРемонтРемонтыОборудования
	               	|ГДЕ
	               	|	впЗаявкаНаРемонтРемонтыОборудования.Ссылка В(&Ссылка)
	               	|	И впЗаявкаНаРемонтРемонтыОборудования.ID В(&ID)
	               	|ИТОГИ
	               	|	МАКСИМУМ(Номер),
	               	|	МАКСИМУМ(Дата),
	               	|	МАКСИМУМ(Подразделение),
	               	|	МАКСИМУМ(Ответственный)
	               	|ПО
	               	|	Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);
	Если ПараметрыПечати.Свойство("МассивID") Тогда
		Запрос.УстановитьПараметр("ID", ПараметрыПечати.МассивID);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И впЗаявкаНаРемонтРемонтыОборудования.ID В(&ID)", "");
	КонецЕсли;
	
	ВыборкаШапки = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
	ЭтоПервый = Истина;
	
	Пока ВыборкаШапки.Следующий() Цикл
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
						|	впЗаявкаНаРемонтРемонтныеРаботы.РемонтнаяРабота.Наименование КАК Работа,
						|	впЗаявкаНаРемонтРемонтныеРаботы.ID КАК ID,
						|	впЗаявкаНаРемонтРемонтныеРаботы.Родитель_ID КАК Родитель_ID,
						|	впЗаявкаНаРемонтРемонтныеРаботы.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
						|	впЗаявкаНаРемонтРемонтныеРаботы.Количество КАК Количество,
						|	ТехнологическиеОперации.СодержаниеРабот КАК Комментарий
						|ИЗ
						|	Документ.впЗаявкаНаРемонт.РемонтныеРаботы КАК впЗаявкаНаРемонтРемонтныеРаботы
						|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.впТехнологическиеОперации КАК ТехнологическиеОперации
						|		ПО впЗаявкаНаРемонтРемонтныеРаботы.РемонтнаяРабота = ТехнологическиеОперации.Ссылка
						|ГДЕ
						|	впЗаявкаНаРемонтРемонтныеРаботы.Ссылка = &Заявка";
		
		Запрос.УстановитьПараметр("Заявка", ВыборкаШапки.Ссылка);	
		тзСписокРаботИсх = Запрос.Выполнить().Выгрузить();
		
		ВыборкаРемонтов = ВыборкаШапки.Выбрать(ОбходРезультатаЗапроса.Прямой);
		
		Пока ВыборкаРемонтов.Следующий() Цикл
			
			ОбщийИтог = 0;
			
			Если НЕ ЭтоПервый Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ЭтоПервый = Ложь;
			
			ШапкаДокумента.Параметры.Подразделение               = ВыборкаШапки.Подразделение;
			ШапкаДокумента.Параметры.ДатаНачалаРемонтныхРабот    = ВыборкаРемонтов.ДатаНачала;
			ШапкаДокумента.Параметры.ДатаОкончанияРемонтныхРабот = ВыборкаРемонтов.ДатаОкончания;
			ШапкаДокумента.Параметры.ИнвНомер                    = ВыборкаРемонтов.ИнвентарныйНомер;
			ШапкаДокумента.Параметры.ВидРемонтныхРабот           = ВыборкаРемонтов.ВидРемонтныхРабот;
			ШапкаДокумента.Параметры.Номер                       = ВыборкаШапки.Номер;
			ШапкаДокумента.Параметры.ДатаНомерЗаявки             = Формат(ВыборкаШапки.Дата,"ДФ=dd.MM.yyyy");
			
			ОбъектРемонта = ВыборкаРемонтов.ОбъектРемонта; 
			ШапкаДокумента.Параметры.ОбъектРемонта = ОбъектРемонта;
			// Заполнить поле Ответственный
			Если НЕ ЗначениеЗаполнено(ВыборкаШапки.Ответственный) Тогда
				Подвал.Параметры.Ответственный = "                                           ";
			Иначе
				Подвал.Параметры.Ответственный = ВыборкаШапки.Ответственный;
			КонецЕсли;
			
			ТабДок.Вывести(ШапкаДокумента);
			ТабДок.Вывести(ШапкаСоставРабот);
			
			// Накладываем отбор по РемонтуОборудования. Если делать это в запросе - теряется последовательность ремонтов.
			ПараметрыОтбора = Новый Структура("РемонтыОборудования_ID",ВыборкаРемонтов.ID);
			тзСписокРабот = тзСписокРаботИсх.Скопировать(ПараметрыОтбора);	
			Ном = "1";
			МассивID = Новый Массив;
			
			МассивСтрок = тзСписокРабот.НайтиСтроки(Новый Структура("Родитель_ID",""));
			
			// Определяем используются ли комментарии или нет
			ВывестиРаботы(МассивСтрок,тзСписокРабот,СтрокаТаблицыРабот,ТабДок,МассивID,Ном,Истина,Истина);
			
			// Вывод трудовых затрат 
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	впЗаявкаНаРемонтТрудовыеЗатраты.Квалификация КАК Квалификация,
			               |	0 КАК ВремяРаботы,
			               |	СУММА(впЗаявкаНаРемонтТрудовыеЗатраты.Количество) КАК Количество
			               |ИЗ
			               |	Документ.впЗаявкаНаРемонт.ТрудовыеЗатраты КАК впЗаявкаНаРемонтТрудовыеЗатраты
			               |ГДЕ
			               |	впЗаявкаНаРемонтТрудовыеЗатраты.РемонтыОборудования_ID = &РемонтыОборудования_ID
			               |	И впЗаявкаНаРемонтТрудовыеЗатраты.Ссылка = &Ссылка
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	впЗаявкаНаРемонтТрудовыеЗатраты.Квалификация";
			
			Запрос.УстановитьПараметр("Ссылка", ВыборкаШапки.Ссылка);
			Запрос.УстановитьПараметр("РемонтыОборудования_ID", ВыборкаРемонтов.ID);
			
			СтрокиТрудозатрат = Запрос.Выполнить().Выгрузить();
			Если СтрокиТрудозатрат.Количество() > 0 Тогда
				ТабДок.Вывести(ШапкаТрудозатраты);
				
				Ном = 1;
				Итого = 0;
				Для Каждого Стр Из СтрокиТрудозатрат Цикл
					СтрокаТаблицыТрудозатрат.Параметры.Номер = Ном;
					СтрокаТаблицыТрудозатрат.Параметры.Квалификация = Стр.Квалификация;
					СтрокаТаблицыТрудозатрат.Параметры.Количество = Стр.Количество;
					СтрокаТаблицыТрудозатрат.Параметры.ВремяРаботы = "";
					ТабДок.Вывести(СтрокаТаблицыТрудозатрат);
					Ном = Ном +1;
				КонецЦикла;
				
			КонецЕсли;
			
			// Вывод материальных затрат 
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	впЗаявкаНаРемонтМатериальныеЗатраты.Номенклатура КАК Номенклатура,
			               |	впЗаявкаНаРемонтМатериальныеЗатраты.Количество КАК Количество,
			               |	впЗаявкаНаРемонтМатериальныеЗатраты.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
			               |ИЗ
			               |	Документ.впЗаявкаНаРемонт.МатериальныеЗатраты КАК впЗаявкаНаРемонтМатериальныеЗатраты
			               |ГДЕ
			               |	впЗаявкаНаРемонтМатериальныеЗатраты.Ссылка = &Заявка
			               |	И впЗаявкаНаРемонтМатериальныеЗатраты.РемонтыОборудования_ID = &РемонтыОборудования_ID";
			
			Запрос.УстановитьПараметр("Заявка",ВыборкаШапки.Ссылка);
			Запрос.УстановитьПараметр("РемонтыОборудования_ID", ВыборкаРемонтов.ID);
			ТаблицаМатериалов = Запрос.Выполнить().Выгрузить();
					
			Если ТаблицаМатериалов.Количество()>0 Тогда
				ТабДок.Вывести(ШапкаНоменклатуры);
				
				Ном = 0;
				Итого = 0;
				Для Каждого Стр Из ТаблицаМатериалов Цикл
					Ном = Ном + 1;
					СтрокаТаблицыНоменклатуры.Параметры.Номер = Ном; 
					СтрокаТаблицыНоменклатуры.Параметры.Заполнить(Стр);
					ТабДок.Вывести(СтрокаТаблицыНоменклатуры);
				КонецЦикла;
				
			КонецЕсли;
			
			// Вывод запчастей  
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			                |	впЗаявкаНаРемонтЗапчастиРемонта.Номенклатура КАК Запчасть,
			                |	впЗаявкаНаРемонтЗапчастиРемонта.Количество КАК Количество,
			                |	впЗаявкаНаРемонтЗапчастиРемонта.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
			                |ИЗ
			                |	Документ.впЗаявкаНаРемонт.ЗапчастиРемонта КАК впЗаявкаНаРемонтЗапчастиРемонта
			                |ГДЕ
			                |	впЗаявкаНаРемонтЗапчастиРемонта.Ссылка = &Заявка
			                |	И впЗаявкаНаРемонтЗапчастиРемонта.РемонтыОборудования_ID = &РемонтыОборудования_ID";
			
			Запрос.УстановитьПараметр("Заявка",ВыборкаШапки.Ссылка);
			Запрос.УстановитьПараметр("РемонтыОборудования_ID", ВыборкаРемонтов.ID);
			ТаблицаЗапчастей = Запрос.Выполнить().Выгрузить();
			
			Если ТаблицаЗапчастей.Количество()>0 Тогда
				ТабДок.Вывести(ШапкаЗапчасти);
				
				Ном = 0;
				Итого = 0;
				Для Каждого Стр Из ТаблицаЗапчастей Цикл
					Ном = Ном + 1;
					СтрокаТаблицыЗапчастей.Параметры.Номер = Ном; 
					СтрокаТаблицыЗапчастей.Параметры.Заполнить(Стр);
				КонецЦикла;
			КонецЕсли;
			
			// Вывод инструментов 
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			                |	впЗаявкаНаРемонтИнструменты.Инструмент КАК Инструмент,
			                |	впЗаявкаНаРемонтИнструменты.Количество КАК Количество,
			                |	впЗаявкаНаРемонтИнструменты.Инструмент.ЕдиницаИзмерения КАК ЕдиницаИзмерения
			                |ИЗ
			                |	Документ.впЗаявкаНаРемонт.Инструменты КАК впЗаявкаНаРемонтИнструменты
			                |ГДЕ
			                |	впЗаявкаНаРемонтИнструменты.Ссылка = &Заявка
			                |	И впЗаявкаНаРемонтИнструменты.РемонтыОборудования_ID = &РемонтыОборудования_ID";
			
			Запрос.УстановитьПараметр("Заявка",ВыборкаШапки.Ссылка);
			Запрос.УстановитьПараметр("РемонтыОборудования_ID", ВыборкаРемонтов.ID);
			
			ТаблицаИнструментов = Запрос.Выполнить().Выгрузить();
			Если ТаблицаИнструментов.Количество() > 0  Тогда 
				ТабДок.Вывести(ШапкаИнструменты);
			КонецЕсли;
			
			Ном = 0;
			Для каждого Стр Из ТаблицаИнструментов Цикл
				Ном = Ном +1;
				СтрокаТаблицыИнструментов.Параметры.Номер = Ном;
				СтрокаТаблицыИнструментов.Параметры.Заполнить(Стр);
				ТабДок.Вывести(СтрокаТаблицыИнструментов);
			КонецЦикла;
									
		ТабДок.Вывести(Подвал);
			
		КонецЦикла;
	КонецЦикла;
	 
	ТабДок.ТолькоПросмотр = Истина;
	Возврат ТабДок;	

КонецФункции

Процедура ВывестиРаботы(МассивСтрок,тзСписокРабот,СтрокаТаблицыРабот,ТабДок,МассивID,Ном,Комментарии,КолВо)
	Для каждого СписокРабот Из МассивСтрок Цикл
		СтрокаТаблицыРабот.Параметры.Номер = Ном;
		СтрокаТаблицыРабот.Параметры.Работа = СписокРабот.Работа;
		Если Комментарии = Истина Тогда
			СтрокаТаблицыРабот.Параметры.Комментарий = СписокРабот.Комментарий;
		КонецЕсли;
		ТабДок.Вывести(СтрокаТаблицыРабот);
		МассивID.Добавить(СписокРабот.ID);
		ВывестиРаботы(тзСписокРабот.НайтиСтроки(Новый Структура("Родитель_ID",СписокРабот.ID)),тзСписокРабот,СтрокаТаблицыРабот,ТабДок,МассивID,Ном + ".1",Комментарии,КолВо);
		
		посТочка = СтрНайти(ном, ".", НаправлениеПоиска.СКонца);
		Если посТочка <> 0 Тогда
			ном = лев(Ном, посТочка) + Строка(Число(Прав(Ном, СтрДлина(Ном) - посТочка))+1);
		Иначе
			ном = Строка(Число(Ном) + 1);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецЕсли
