
&НаКлиенте
Процедура РемонтныеРаботыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОповеститьОВыборе(ПолучитьМассивСтрок(Элементы.РемонтныеРаботы.ВыделенныеСтроки));
КонецПроцедуры

&НаКлиенте
Функция ПолучитьМассивСтрок(ВыбранныеСтроки);
	
	МассивСтрок = Новый Массив;
	Для Каждого Стр из Элементы.РемонтныеРаботы.ВыделенныеСтроки Цикл
		СтруктураСтроки = Новый Структура("ВидРемонтныхРабот, ОбъектРемонта, ДатаНачала, ДатаОкончания, ДокументИсточник, ID");
		ЗаполнитьЗначенияСвойств(СтруктураСтроки, РемонтныеРаботы.НайтиПоИдентификатору(Стр));
		МассивСтрок.Добавить(СтруктураСтроки);
	КонецЦикла;
	
	Возврат МассивСтрок;

КонецФункции

&НаКлиенте
Процедура Выбрать(Команда)
	ОповеститьОВыборе(ПолучитьМассивСтрок(Элементы.РемонтныеРаботы.ВыделенныеСтроки));
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Подразделение = Параметры.Подразделение;
	Период.ДатаНачала = НачалоМесяца(Параметры.ВладелецДата);
	Период.ДатаОкончания = КонецМесяца(Параметры.ВладелецДата);
	СписокИскл.Загрузить(Параметры.СписокИД.Выгрузить());
	ЗаполнитьТаблицуРемонтов();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуРемонтов()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачПериода", Период.ДатаНачала);
	Запрос.УстановитьПараметр("КонПериода", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("ИД", СписокИскл.Выгрузить().ВыгрузитьКолонку("ID"));

	Запрос.Текст = "ВЫБРАТЬ
	               |	впПланГрафикППР.УникальныйИдентификатор КАК ID,
	               |	впПланГрафикППР.ДатаНачалаПлан КАК ДатаНачала,
	               |	впПланГрафикППР.ДатаОкончанияПлан КАК ДатаОкончания,
	               |	впПланГрафикППР.ОбъектРемонта КАК ОбъектРемонта,
	               |	впПланГрафикППР.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	               |	впПланГрафикППР.ПланГрафик КАК ДокументИсточник,
	               |	ЛОЖЬ КАК ЗакрываетПредписание
	               |ИЗ
	               |	РегистрСведений.впПланГрафикППР КАК впПланГрафикППР
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.впАктыПоРемонтам КАК впАктыПоРемонтам
	               |		ПО впПланГрафикППР.УникальныйИдентификатор = впАктыПоРемонтам.IDРемонта
	               |ГДЕ
	               |	НЕ впПланГрафикППР.Удален
	               |	И НЕ впПланГрафикППР.Завершен
	               |	И НЕ впПланГрафикППР.ЕстьЗаявка
	               |	И впПланГрафикППР.ДатаНачалаПлан МЕЖДУ &НачПериода И &КонПериода
	               |	И впПланГрафикППР.ОбъектРемонта.ПодразделениеИсполнитель = &Подразделение
	               |	И НЕ впПланГрафикППР.УникальныйИдентификатор В (&ИД)
	               |	И впАктыПоРемонтам.IDРемонта ЕСТЬ NULL
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	впВыявленныеДефектыСписокДефектов.ID,
	               |	впВыявленныеДефектыСписокДефектов.ДатаНачалаРемонта,
	               |	впВыявленныеДефектыСписокДефектов.ДатаОкончанияРемонта,
	               |	впВыявленныеДефектыСписокДефектов.ОтказавшийЭлемент,
	               |	впВидРемонтаПриВводеНаОснованииВыявленныхДефектов.Значение,
	               |	впВыявленныеДефектыСписокДефектов.Ссылка,
	               |	впВыявленныеДефектыСписокДефектов.ЗакрываетПредписание
	               |ИЗ
	               |	Документ.впВыявленныеДефекты.СписокДефектов КАК впВыявленныеДефектыСписокДефектов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Константа.впВидРемонтаПриВводеНаОснованииВыявленныхДефектов КАК впВидРемонтаПриВводеНаОснованииВыявленныхДефектов
	               |		ПО (ИСТИНА)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.впЗаявкиПоРемонтам КАК впЗаявкиПоРемонтам
	               |		ПО впВыявленныеДефектыСписокДефектов.ID = впЗаявкиПоРемонтам.IDРемонта
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.впАктыПоРемонтам КАК впАктыПоРемонтам
	               |		ПО впВыявленныеДефектыСписокДефектов.ID = впАктыПоРемонтам.IDРемонта
	               |ГДЕ
	               |	впЗаявкиПоРемонтам.IDРемонта ЕСТЬ NULL
	               |	И впВыявленныеДефектыСписокДефектов.Ссылка.Подразделение = &Подразделение
	               |	И впВыявленныеДефектыСписокДефектов.Ссылка.Проведен
	               |	И НЕ впВыявленныеДефектыСписокДефектов.ID В (&ИД)
	               |	И впАктыПоРемонтам.IDРемонта ЕСТЬ NULL
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	впВнешнееОснованиеДляРаботОбследованноеОборудование.ID,
	               |	впВнешнееОснованиеДляРаботОбследованноеОборудование.ПлановаяДатаРемонта,
	               |	впВнешнееОснованиеДляРаботОбследованноеОборудование.ПлановаяДатаРемонта,
	               |	впВнешнееОснованиеДляРаботОбследованноеОборудование.ОбъектРемонта,
	               |	впВидРемонтаПриВводеНаОснованииВнешнихОснований.Значение,
	               |	впВнешнееОснованиеДляРаботОбследованноеОборудование.Ссылка,
	               |	ИСТИНА
	               |ИЗ
	               |	Документ.впВнешнееОснованиеДляРабот.ОбследованноеОборудование КАК впВнешнееОснованиеДляРаботОбследованноеОборудование
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Константа.впВидРемонтаПриВводеНаОснованииВнешнихОснований КАК впВидРемонтаПриВводеНаОснованииВнешнихОснований
	               |		ПО (ИСТИНА)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.впЗаявкиПоРемонтам КАК впЗаявкиПоРемонтам
	               |		ПО впВнешнееОснованиеДляРаботОбследованноеОборудование.ID = впЗаявкиПоРемонтам.IDРемонта
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.впАктыПоРемонтам КАК впАктыПоРемонтам
	               |		ПО впВнешнееОснованиеДляРаботОбследованноеОборудование.ID = впАктыПоРемонтам.IDРемонта
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.впВыявленныеДефекты.СписокДефектов КАК впВыявленныеДефектыСписокДефектов
	               |		ПО впВнешнееОснованиеДляРаботОбследованноеОборудование.ID = впВыявленныеДефектыСписокДефектов.ID
	               |ГДЕ
	               |	впЗаявкиПоРемонтам.IDРемонта ЕСТЬ NULL
	               |	И впВнешнееОснованиеДляРаботОбследованноеОборудование.Ссылка.Подразделение = &Подразделение
	               |	И впВнешнееОснованиеДляРаботОбследованноеОборудование.Ссылка.Проведен
	               |	И НЕ впВнешнееОснованиеДляРаботОбследованноеОборудование.ID В (&ИД)
	               |	И впАктыПоРемонтам.IDРемонта ЕСТЬ NULL
	               |	И впВыявленныеДефектыСписокДефектов.ID ЕСТЬ NULL
	               // rarus evgenu 2020_12_01 ++ 
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	РемонтыОборудования.ID,
	               |	РемонтыОборудования.ДатаНачала,
	               |	РемонтыОборудования.ДатаОкончания,
	               |	РемонтыОборудования.ОбъектРемонта,
	               |	РемонтыОборудования.ВидРемонтныхРабот,
	               |	РемонтыОборудования.Ссылка,
	               |	ИСТИНА
	               |ИЗ
	               |	Документ.впЗаявкаНаРемонт.РемонтыОборудования КАК РемонтыОборудования
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.впЗаявкиПоРемонтам КАК впЗаявкиПоРемонтам
	               |		ПО РемонтыОборудования.ID = впЗаявкиПоРемонтам.IDРемонта
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.впАктыПоРемонтам КАК впАктыПоРемонтам
	               |		ПО РемонтыОборудования.ID = впАктыПоРемонтам.IDРемонта
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.впВыявленныеДефекты.СписокДефектов КАК впВыявленныеДефектыСписокДефектов
	               |		ПО РемонтыОборудования.ID = впВыявленныеДефектыСписокДефектов.ID
	               |ГДЕ
	               |	впЗаявкиПоРемонтам.IDРемонта ЕСТЬ NULL
	               |	И РемонтыОборудования.Ссылка.Подразделение = &Подразделение
	               |	И РемонтыОборудования.Ссылка.Проведен
	               |	И НЕ РемонтыОборудования.ID В (&ИД)
	               |	И впАктыПоРемонтам.IDРемонта ЕСТЬ NULL
	               |	И впВыявленныеДефектыСписокДефектов.ID ЕСТЬ NULL";
				   // rarus evgenu 2020_12_01 --
				   
	РемонтныеРаботы.Загрузить(Запрос.Выполнить().Выгрузить());
		
КонецПроцедуры

// ++ rarus selmik 29.03.2021
&НаКлиенте
Процедура ОтображениеИерархииИКодаИерархии()
	Для Каждого СтрокаОбъектаРемонта Из РемонтныеРаботы Цикл
		
		ИерархияИКодИерархии = ПолучитьИерархиюИКодИерархииОбъектаРемонта(СтрокаОбъектаРемонта.ОбъектРемонта);
		ЗаполнитьЗначенияСвойств(СтрокаОбъектаРемонта, ИерархияИКодИерархии);
		
	КонецЦикла;	
КонецПроцедуры  // -- rarus selmik 29.03.2021

// ++ rarus selmik 29.03.2021
&НаСервере
Функция ПолучитьИерархиюИКодИерархииОбъектаРемонта(пОбъектРемонта)
	КодИерархии = "";
	Иерархия	= "";
	
	МассивРодителей = Новый Массив;
	
	Если ЗначениеЗаполнено(пОбъектРемонта) Тогда
		КодИерархии = пОбъектРемонта.рарусКодИерархии;
		
		Если ЗначениеЗаполнено(пОбъектРемонта.Родитель.Родитель.Родитель.Родитель.Родитель) Тогда
			МассивРодителей.Добавить(пОбъектРемонта.Родитель.Родитель.Родитель.Родитель.Родитель.Наименование);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(пОбъектРемонта.Родитель.Родитель.Родитель.Родитель) Тогда
			МассивРодителей.Добавить(пОбъектРемонта.Родитель.Родитель.Родитель.Родитель.Наименование);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(пОбъектРемонта.Родитель.Родитель.Родитель) Тогда
			МассивРодителей.Добавить(пОбъектРемонта.Родитель.Родитель.Родитель.Наименование);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(пОбъектРемонта.Родитель.Родитель) Тогда
			МассивРодителей.Добавить(пОбъектРемонта.Родитель.Родитель.Наименование);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(пОбъектРемонта.Родитель) Тогда
			МассивРодителей.Добавить(пОбъектРемонта.Родитель.Наименование);
		КонецЕсли;
	КонецЕсли;
	
	Счетчик = 0;
	Для Каждого ЭлементМассива Из МассивРодителей Цикл
		Если Счетчик < 2 Тогда
			Счетчик = Счетчик + 1;
			Продолжить;
		ИначеЕсли Счетчик = 2 Тогда
			Иерархия = ЭлементМассива;
		Иначе
			Иерархия = Иерархия + "->" + ЭлементМассива;
		КонецЕсли;
		
		Счетчик = Счетчик + 1;
	КонецЦикла;
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("КодИерархии", КодИерархии);
	СтруктураВозврата.Вставить("Иерархия"	, Иерархия);
	
	Возврат СтруктураВозврата;
	
КонецФункции // -- rarus selmik 29.03.2021


&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	ЗаполнитьТаблицуРемонтов();
	// ++ rarus selmik 29.03.2021
	ОтображениеИерархииИКодаИерархии();
	// -- rarus selmik 29.03.2021
КонецПроцедуры

&НаКлиенте
Процедура РемонтныеРаботыВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	ОповеститьОВыборе(ПолучитьМассивСтрок(Элементы.РемонтныеРаботы.ВыделенныеСтроки));
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// ++ rarus selmik 29.03.2021
	ОтображениеИерархииИКодаИерархии();
	// -- rarus selmik 29.03.2021
КонецПроцедуры
