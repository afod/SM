#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)

	Префикс =  Судно.КодБыстрогоВвода;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	vftОбщиеПроцедурыДокументовСервер.ПриКопировании(ЭтотОбъект,ОбъектКопирования);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка  Тогда
		
		Возврат;
		
	КонецЕсли; 
	
	 
	Если Номер = "" Тогда
		
		НомерРапорта =  1;
		
		НомерДокумента = Строка(НомерРапорта) + "/" + Формат(дата,"ДФ=yy") + "/" + Лев(Судно.КодБыстрогоВвода, 4);
		
		ЗапросНов = Новый Запрос;
		ЗапросНов.Текст = 
		"ВЫБРАТЬ
		|	vftРапортОПоврежденииНеисправности.Номер
		|ИЗ
		|	Документ.vftРапортОПоврежденииНеисправности КАК vftРапортОПоврежденииНеисправности
		|ГДЕ
		|	vftРапортОПоврежденииНеисправности.Номер = &НомерДокумента";
		
		ЗапросНов.УстановитьПараметр("НомерДокумента", НомерДокумента);
		
		ДокументыСНомером = ЗапросНов.Выполнить().Выгрузить();		
		
		Пока ДокументыСНомером.Количество() <> 0  Цикл
			
			НомерРапорта = НомерРапорта + 1;
			
			НомерДокумента = Строка(НомерРапорта) + "/" + Формат(дата,"ДФ=yy") + "/" + Лев(Судно.КодБыстрогоВвода, 4);
			
			ЗапросНов.УстановитьПараметр("НомерДокумента", НомерДокумента);
			
			ДокументыСНомером = ЗапросНов.Выполнить().Выгрузить();
		КонецЦикла;
		Номер =  НомерДокумента;
		
	КонецЕсли;	
	
	//МассивРеквизитовДляОбязательногоЗаполнения = Новый Массив;
	//
	//	
	//Если Статус <> Перечисления.vftСтатусыДокументаРапортОПовреждении.Черновик И 
	//	Статус <> Перечисления.vftСтатусыДокументаРапортОПовреждении.Отправлен  И 
	//	Статус <> Перечисления.vftСтатусыДокументаРапортОПовреждении.Рассмотрен  Тогда
	//	МассивРеквизитовДляОбязательногоЗаполнения.Добавить("ДатаОткрытия");
	//	МассивРеквизитовДляОбязательногоЗаполнения.Добавить("ТипСерийногоНомера");
	//	МассивРеквизитовДляОбязательногоЗаполнения.Добавить("Изготовитель");
	//	МассивРеквизитовДляОбязательногоЗаполнения.Добавить("ФИОКапитана");
	//КонецЕсли; 
	//
	//Если Статус = Перечисления.vftСтатусыДокументаРапортОПовреждении.Получен Тогда
	//	МассивРеквизитовДляОбязательногоЗаполнения.Добавить("Механик");
	//	МассивРеквизитовДляОбязательногоЗаполнения.Добавить("ДатаЗаявки");
	//	МассивРеквизитовДляОбязательногоЗаполнения.Добавить("ОдобреноКолВоПозиций");
	//	МассивРеквизитовДляОбязательногоЗаполнения.Добавить("ЗаказаноКуда");		
	//	МассивРеквизитовДляОбязательногоЗаполнения.Добавить("ЗаявкаНомер");
	//КонецЕсли;	
	//
	//
	//Если Статус = Перечисления.vftСтатусыДокументаРапортОПовреждении.Закрыт  Тогда		
	//	МассивРеквизитовДляОбязательногоЗаполнения.Добавить("ОтветственныйПоНеисправности");
	//	МассивРеквизитовДляОбязательногоЗаполнения.Добавить("ФИОКапитанаПоНеисправности");
	//	МассивРеквизитовДляОбязательногоЗаполнения.Добавить("КемВыполнено");
	//	МассивРеквизитовДляОбязательногоЗаполнения.Добавить("ДатаВыполнения");
	//	
	//КонецЕсли; 
	//
	//Отказ = НЕ ПроверитьЗаполнение();
	//vftОбщиеПроцедурыДокументовСервер.ПроверитьЗаполнениеРеквизитов(ЭтотОбъект,МассивРеквизитовДляОбязательногоЗаполнения, Отказ);	

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	// ++ rarus ilshill 12.01.2020		
	ИспользоватьФункционалСУБ = ПолучитьФункциональнуюОпцию("рарусИспользоватьФункционалСУБ");
	
	Если ИспользоватьФункционалСУБ Тогда
		
		ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
		
		Если ТипДанныхЗаполнения = Тип("ДокументСсылка.впВыявленныеДефекты") Тогда
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	впВыявленныеДефекты.Ссылка                      КАК РегистрацияДефекта,
			|	впВыявленныеДефекты.Подразделение               КАК Судно,
			|	впВыявленныеДефекты.Ответственный               КАК Ответственный,
			|	впВыявленныеДефекты.Комментарий                 КАК Комментарий,
			|	впВыявленныеДефекты.Организация                 КАК Организация,
			|	впВыявленныеДефекты.ДефектВыявленВПроцессе      КАК ДефектВыявленВПроцессе,
			|	впВыявленныеДефекты.ДатаУстраненияДефекта       КАК ДатаУстраненияДефекта,
			|	впВыявленныеДефекты.СписокДефектов.(
			|		ДефектОписание                              КАК ОписаниеНеисправности
			|	)                                               КАК СписокДефектов
			|ИЗ
			|	Документ.впВыявленныеДефекты                    КАК впВыявленныеДефекты
			|ГДЕ
			|	впВыявленныеДефекты.Ссылка = &ДокументОснование";
			
			Выборка = Запрос.Выполнить().Выбрать();
			Выборка.Следующий();
			
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
			
			ТаблицаДефектов = Выборка.СписокДефектов.Выгрузить();
			
			ОписаниеНеисправности = ТаблицаДефектов[0].ОписаниеНеисправности; 
			
		КонецЕсли;
			
		рарусСУБСервер.ОбработкаЗаполнениеДокументовСУБ(ЭтотОбъект);
		
	КонецЕсли;
		// -- rarus ilshill 12.01.2020
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// ++ rarus ilshill 12.01.2020
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	ИспользоватьФункционалСУБ = ПолучитьФункциональнуюОпцию("рарусИспользоватьФункционалСУБ");
	
	Если ИспользоватьФункционалСУБ Тогда
		
		Если Статус = Перечисления.vftСтатусыДокументаРапортОПовреждении.Черновик Тогда 
			
			МассивНепроверяемыхРеквизитов.Добавить("ФИОКапитана");   
			МассивНепроверяемыхРеквизитов.Добавить("ДатаОткрытия");	
			МассивНепроверяемыхРеквизитов.Добавить("ЗаявкаНаСнабжение");
			МассивНепроверяемыхРеквизитов.Добавить("ОписаниеНеисправности"); 
			МассивНепроверяемыхРеквизитов.Добавить("КорректирующиеДействия"); 
			МассивНепроверяемыхРеквизитов.Добавить("ПредупреждающиеДействия");
			МассивНепроверяемыхРеквизитов.Добавить("КемВыполнено");

		КонецЕсли;
		
		Если ПриобретениеЗИП Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ЗаявкаНаСнабжение");
		КонецЕсли;
		
		МассивНепроверяемыхРеквизитов.Добавить("Механик");
		МассивНепроверяемыхРеквизитов.Добавить("ДатаЗаявки");
		МассивНепроверяемыхРеквизитов.Добавить("ОдобреноКолВоПозиций");
		МассивНепроверяемыхРеквизитов.Добавить("ЗаказаноКуда");		
		МассивНепроверяемыхРеквизитов.Добавить("ЗаявкаНомер");
		МассивНепроверяемыхРеквизитов.Добавить("ОтветственныйПоНеисправности");
		МассивНепроверяемыхРеквизитов.Добавить("ФИОКапитанаПоНеисправности");
		МассивНепроверяемыхРеквизитов.Добавить("ДатаВыполнения");
		МассивНепроверяемыхРеквизитов.Добавить("ТипСерийногоНомера");
		МассивНепроверяемыхРеквизитов.Добавить("Изготовитель");

	Иначе
		
		Если Статус = Перечисления.vftСтатусыДокументаРапортОПовреждении.Черновик Тогда 
			
			МассивНепроверяемыхРеквизитов.Добавить("ДатаОткрытия");
			МассивНепроверяемыхРеквизитов.Добавить("ТипСерийногоНомера");
			МассивНепроверяемыхРеквизитов.Добавить("Изготовитель");
			МассивНепроверяемыхРеквизитов.Добавить("ФИОКапитана");	
			
		КонецЕсли; 
		
		Если Статус =  Перечисления.vftСтатусыДокументаРапортОПовреждении.Черновик Или
			Статус =  Перечисления.vftСтатусыДокументаРапортОПовреждении.Отправлен	Тогда
			
			МассивНепроверяемыхРеквизитов.Добавить("Механик");
			МассивНепроверяемыхРеквизитов.Добавить("ДатаЗаявки");
			МассивНепроверяемыхРеквизитов.Добавить("ОдобреноКолВоПозиций");
			МассивНепроверяемыхРеквизитов.Добавить("ЗаказаноКуда");		
			МассивНепроверяемыхРеквизитов.Добавить("ЗаявкаНомер");
			
		КонецЕсли;	
		
		Если Статус = Перечисления.vftСтатусыДокументаРапортОПовреждении.Черновик Или 
			Статус =  Перечисления.vftСтатусыДокументаРапортОПовреждении.Отправлен Или
			Статус =  Перечисления.vftСтатусыДокументаРапортОПовреждении.Получен Тогда	
			
			МассивНепроверяемыхРеквизитов.Добавить("ОтветственныйПоНеисправности");
			МассивНепроверяемыхРеквизитов.Добавить("ФИОКапитанаПоНеисправности");
			МассивНепроверяемыхРеквизитов.Добавить("КемВыполнено");
			МассивНепроверяемыхРеквизитов.Добавить("ДатаВыполнения");
			
		КонецЕсли; 

		МассивНепроверяемыхРеквизитов.Добавить("ЗаявкаНаСнабжение");
		МассивНепроверяемыхРеквизитов.Добавить("ОписаниеНеисправности"); 
		МассивНепроверяемыхРеквизитов.Добавить("КорректирующиеДействия"); 
		МассивНепроверяемыхРеквизитов.Добавить("ПредупреждающиеДействия");
		
	КонецЕсли;
				
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);	
	// -- rarus ilshill 12.01.2020
	
КонецПроцедуры

#КонецЕсли
