
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	//rarus_AfoD 15.09.2021 < 
	ВыполняемПроведение = Ложь;
	ИспользоватьСтатусыЗаявокНаПереносРабот = рарусОбщегоНазначенияПовтИсп.ИспользоватьСтатусыЗаявокНаПереносРабот();
	Если ИспользоватьСтатусыЗаявокНаПереносРабот Тогда
		
		ВыполняемПроведение = Статус = Перечисления.СостоянияСогласования.Согласовано;
		
	Иначе
		
		ВыполняемПроведение = Согласовано;
		
	КонецЕсли; 
	
	Если НЕ ВыполняемПроведение Тогда
		
		Возврат;
		
	КонецЕсли; 
	//rarus_AfoD 15.09.2021 > 
	
	Для Каждого стрРем из  ЗакрываемыеРемонты Цикл
		стрДвиж = Движения.впОтмененныеПеренесенныеРемонты.Добавить();
		стрДвиж.ID 					= стрРем.ID;
		стрДвиж.ДатаНачала 			= стрРем.НоваяДатаНачала;
		стрДвиж.ДатаОкончания 		= стрРем.НоваяДатаОкончания;
		стрДвиж.Отменен 			= стрРем.Отменен;
		стрДвиж.Период 				= МоментВремени().Дата;
		стрДвиж.Причина 			= стрРем.ПричинаЗакрытия;
		стрДвиж.УточнениеПричины 	= стрРем.УточнениеПричины;

		
		//RARUS-NN EvgenU РАIT-0023372 2021_06_07 ++
		Если ТипЗнч(стрРем.ДокументОснование) = Тип("ДокументСсылка.впЗаявкаНаРемонт") Тогда
			ДокОбъект = стрРем.ДокументОснование.ПолучитьОбъект();
			СтруктураПоиска = Новый Структура("ID", стрРем.ID);
			НайдСтроки = ДокОбъект.РемонтыОборудования.НайтиСтроки(СтруктураПоиска);
			Для Каждого СтрокаТЧ Из НайдСтроки Цикл
				СтрокаТЧ.ДатаНачала = стрРем.НоваяДатаНачала;
				СтрокаТЧ.ДатаОкончания = стрРем.НоваяДатаОкончания;
			КонецЦикла;
			Если ДокОбъект.Проведен Тогда
				ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
		ИначеЕсли ТипЗнч(стрРем.ДокументОснование) = Тип("ДокументСсылка.впВыявленныеДефекты") Тогда
			ДокОбъект = стрРем.ДокументОснование.ПолучитьОбъект();
			СтруктураПоиска = Новый Структура("ID", стрРем.ID);
			НайдСтроки = ДокОбъект.СписокДефектов.НайтиСтроки(СтруктураПоиска);
			Для Каждого СтрокаТЧ Из НайдСтроки Цикл
				СтрокаТЧ.ДатаНачалаРемонта = стрРем.НоваяДатаНачала;
				СтрокаТЧ.ДатаОкончанияРемонта = стрРем.НоваяДатаОкончания;
			КонецЦикла;
			Если ДокОбъект.Проведен Тогда
				ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
		КонецЕсли;
		//RARUS-NN EvgenU РАIT-0023372 2021_06_07 --
	КонецЦикла;
	Движения.впОтмененныеПеренесенныеРемонты.Записывать = Истина;
	
КонецПроцедуры

//RARUS-NN EvgenU РАIT-0023372 2021_06_04 ++
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		СписокЗакрываемыеРемонты = Неопределено;
		Если ДанныеЗаполнения.СВойство("ЗакрываемыеРемонты", СписокЗакрываемыеРемонты) Тогда
			Для Каждого ЭлементЗакрываемыеРемонты Из СписокЗакрываемыеРемонты Цикл
				нСтрока = ЗакрываемыеРемонты.Добавить();
				ЗаполнитьЗначенияСвойств(нСтрока, ЭлементЗакрываемыеРемонты.Значение);
			КонецЦикла;
		КонецЕсли;
		пСогласовано = Ложь;
		Если ДанныеЗаполнения.СВойство("Согласовано", пСогласовано) Тогда
			Согласовано = пСогласовано;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Подразделение)
		И ЗакрываемыеРемонты.Количество() Тогда
		//взять судно из первого объекта ремонта
		Если  ЗначениеЗаполнено(ЗакрываемыеРемонты[0].ОбъектРемонта) Тогда
			Подразделение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗакрываемыеРемонты[0].ОбъектРемонта, "ПодразделениеИсполнитель");
		КонецЕсли;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Организация) Тогда
		//установить единственную организацию
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 2
		|	Организации.Ссылка КАК Организация
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	НЕ Организации.ПометкаУдаления";
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Количество() = 1 Тогда
			Выборка.Следующий();
			Организация = Выборка.Организация;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры //RARUS-NN EvgenU РАIT-0023372 2021_06_04 --


Процедура ПриКопировании(ОбъектКопирования)
	Статус = Перечисления.СостоянияСогласования.Рассматривается;
	УточнениеСтатуса = "";
КонецПроцедуры

