#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	//ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
// КомандыПечати – ТаблицаЗначений – состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	//RARUS-NN EvgenU РАIT-0023370 2021_06_16 ++
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "ОтчетОВыполненииРемонта";
	//КомандаПечати.Представление = "Отчет о выполнении ремонта";
	//КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	//RARUS-NN EvgenU РАIT-0023370 2021_06_16 --
	
КонецПроцедуры

//RARUS-NN EvgenU РАIT-0023370 2021_06_16 ++
// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтчетОВыполненииРемонта") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"ОтчетОВыполненииРемонта", 
			"Отчет о выполнении ремонта", 
			ОтчетОВыполненииРемонта(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры //RARUS-NN EvgenU РАIT-0023370 2021_06_16 --

//RARUS-NN EvgenU РАIT-0023370 2021_06_16 ++
Функция ОтчетОВыполненииРемонта(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб			= Истина;
	ТабДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабДокумент.ИмяПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ОтчетОВыполненииРемонта";
	
	Макет = ПолучитьМакет("ОтчетОВыполненииРемонта");

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.Ссылка КАК Документ,
	|	Таблица.Подразделение КАК Судно,
	|	Таблица.Подразделение.Наименование КАК СудноНаименование,
	|	Таблица.Дата КАК Дата,
	|	Таблица.Номер КАК Номер
	|ИЗ
	|	Документ.впАктОВыполненииЭтапаРабот КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таблица.Ссылка КАК Документ,
	|	Таблица.ID КАК ID,
	|	Таблица.ОбъектРемонта КАК ОбъектРемонта,
	|	Таблица.ОбъектРемонта.Изготовитель КАК Производитель,
	|	Таблица.ОбъектРемонта.рарусТип КАК Тип
	|ИЗ
	|	Документ.впАктОВыполненииЭтапаРабот.РемонтыОборудования КАК Таблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.впАктОВыполненииЭтапаРабот.РемонтныеРаботы КАК Таблица2
	|		ПО Таблица.Ссылка = Таблица2.Ссылка
	|			И Таблица.ID = Таблица2.РемонтыОборудования_ID
	|ГДЕ
	|	Таблица.Ссылка В(&МассивОбъектов)
	|	И Таблица2.Выполнено
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Ссылка КАК Документ,
	|	Таблица.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
	|	Таблица.РемонтнаяРабота КАК РемонтнаяРабота,
	|	Таблица.Количество КАК Количество
	|ИЗ
	|	Документ.впАктОВыполненииЭтапаРабот.РемонтныеРаботы КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка В(&МассивОбъектов)
	|	И Таблица.РемонтнаяРабота ССЫЛКА Справочник.впТехнологическиеОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Ссылка КАК Документ,
	|	Таблица.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
	|	Таблица.Номенклатура КАК Номенклатура,
	|	Таблица.Количество КАК Количество
	|ИЗ
	|	Документ.впАктОВыполненииЭтапаРабот.МатериальныеЗатраты КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Ссылка КАК Документ,
	|	Таблица.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
	|	Таблица.Номенклатура КАК Номенклатура,
	|	Таблица.Количество КАК Количество
	|ИЗ
	|	Документ.впАктОВыполненииЭтапаРабот.ЗапчастиРемонта КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Ссылка КАК Документ,
	|	Таблица.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
	|	Таблица.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Таблица.Квалификация КАК Квалификация,
	|	1 КАК ВремяРаботы
	|ИЗ
	|	Документ.впАктОВыполненииЭтапаРабот.ТрудовыеЗатраты КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка В(&МассивОбъектов)";
	Результат = Запрос.ВыполнитьПакет();
	ВыборкаПоДокументам = Результат[0].Выбрать();
	ВыборкаПоСтрокам = Результат[1].Выбрать();
	РемонтныеРаботы = Результат[2].Выбрать();
	МатериальныеЗатраты = Результат[3].Выбрать();
	СерийныеЗапчасти = Результат[4].Выбрать();
	ТрудовыеЗатраты = Результат[5].Выбрать();


	ПервыйДокумент = Истина;

	Пока ВыборкаПоДокументам.Следующий() Цикл

		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйДокумент = Ложь;
		КонецЕсли;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		// ПсевдоКолонтитул
		ОбластьПсевдоКолонтитул = Макет.ПолучитьОбласть("ПсевдоКолонтитул");
		ТабДокумент.Вывести(ОбластьПсевдоКолонтитул);

		// Заголовок
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаПоДокументам);
		
		//СудноНаименование = СтрШаблон("%1 / %2", 
		//	ВыборкаПоДокументам.НаименованиеНаРусском, 
		//	ВыборкаПоДокументам.НаименованиеНаАнглийском);
		//ОбластьЗаголовок.Параметры.СудноНаименование = СудноНаименование;
		ДатаМесяц = Формат(ВыборкаПоДокументам.Дата, "ДФ=ММ/гг");
		ОбластьЗаголовок.Параметры.ДатаМесяц = ДатаМесяц;
		НомерГод = СтрШаблон("%1/%2", 
			ВыборкаПоДокументам.Номер, 
			Формат(ВыборкаПоДокументам.Дата, "ДФ=гг") );
		ОбластьЗаголовок.Параметры.НомерГод = НомерГод;
		ТабДокумент.Вывести(ОбластьЗаголовок);
		
		// Подвал
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		
		МассивВыводимыхОбластей = Новый Массив;

		// Строки
		СтруктураПоиска = Новый Структура("Документ", ВыборкаПоДокументам.Документ);
		Пока ВыборкаПоСтрокам.НайтиСледующий(СтруктураПоиска) Цикл
			Область = Макет.ПолучитьОбласть("ОбъектРемонта");
			ОбъектРемонтаПуть = ПолучитьПутьОбъектаРемонта(ВыборкаПоСтрокам.ОбъектРемонта);
			Область.Параметры.Заполнить(ВыборкаПоСтрокам);
			Область.Параметры.ОбъектРемонтаПуть = ОбъектРемонтаПуть;
			
			МассивПодСтрок = Новый Массив;
			СтруктураПоиска1 = Новый Структура;
			СтруктураПоиска1.Вставить("Документ", ВыборкаПоСтрокам.Документ);
			СтруктураПоиска1.Вставить("РемонтыОборудования_ID", ВыборкаПоСтрокам.ID);
			
			РемонтныеРаботыСтрока = "";
			Счетчик = 0;
			Пока РемонтныеРаботы.НайтиСледующий(СтруктураПоиска1) Цикл
				Счетчик = Счетчик + 1;
				Если РемонтныеРаботыСтрока = "" Тогда
					РемонтныеРаботыСтрока = "Выполненные технологические операции:";
				КонецЕсли;
				РемонтныеРаботыСтрока = РемонтныеРаботыСтрока + Символы.ПС 
					+ СтрШаблон("%1. %2 (%3)", 
						Строка(Счетчик),
						Строка(РемонтныеРаботы.РемонтнаяРабота),
						Строка(РемонтныеРаботы.Количество));
			КонецЦикла;
			РемонтныеРаботы.Сбросить();
			Если РемонтныеРаботыСтрока <> "" Тогда
				МассивПодСтрок.Добавить(РемонтныеРаботыСтрока);
			КонецЕсли;
		
			МатериальныеЗатратыСтрока = "";
			Счетчик = 0;
			Пока МатериальныеЗатраты.НайтиСледующий(СтруктураПоиска1) Цикл
				Счетчик = Счетчик + 1;
				Если МатериальныеЗатратыСтрока = "" Тогда
					МатериальныеЗатратыСтрока = "Материальные затраты:";
				КонецЕсли;
				МатериальныеЗатратыСтрока = МатериальныеЗатратыСтрока + Символы.ПС 
					+ СтрШаблон("%1. %2 (%3)", 
						Строка(Счетчик),
						Строка(МатериальныеЗатраты.Номенклатура),
						//Строка(МатериальныеЗатраты.Характеристика),
						Строка(МатериальныеЗатраты.Количество));
			КонецЦикла;
			МатериальныеЗатраты.Сбросить();
			Если МатериальныеЗатратыСтрока <> "" Тогда
				МассивПодСтрок.Добавить(МатериальныеЗатратыСтрока);
			КонецЕсли;
			
			СерийныеЗапчастиСтрока = "";
			Счетчик = 0;
			Пока СерийныеЗапчасти.НайтиСледующий(СтруктураПоиска1) Цикл
				Счетчик = Счетчик + 1;
				Если СерийныеЗапчастиСтрока = "" Тогда
					СерийныеЗапчастиСтрока = "Серийные запчасти:";
				КонецЕсли;
				СерийныеЗапчастиСтрока = СерийныеЗапчастиСтрока + Символы.ПС 
					+ СтрШаблон("%1. %2 (%3)", 
						Строка(Счетчик),
						Строка(СерийныеЗапчасти.Номенклатура),
						//Строка(СерийныеЗапчасти.Характеристика),
						//Строка(СерийныеЗапчасти.Характеристика),
						Строка(СерийныеЗапчасти.Количество));
			КонецЦикла;
			СерийныеЗапчасти.Сбросить();
			Если СерийныеЗапчастиСтрока <> "" Тогда
				МассивПодСтрок.Добавить(СерийныеЗапчастиСтрока);
			КонецЕсли;
			
			ТрудовыеЗатратыСтрока = "";
			Счетчик = 0;
			Пока ТрудовыеЗатраты.НайтиСледующий(СтруктураПоиска1) Цикл
				Счетчик = Счетчик + 1;
				Если ТрудовыеЗатратыСтрока = "" Тогда
					ТрудовыеЗатратыСтрока = "Трудовые затраты:";
				КонецЕсли;
				ТрудовыеЗатратыСтрока = ТрудовыеЗатратыСтрока + Символы.ПС 
					+ СтрШаблон("%1. %2 %3 (%4)", 
						Строка(Счетчик),
						Строка(ТрудовыеЗатраты.ФизическоеЛицо),
						Строка(ТрудовыеЗатраты.Квалификация),
						Строка(ТрудовыеЗатраты.ВремяРаботы));
			КонецЦикла;
			РемонтныеРаботы.Сбросить();
			Если ТрудовыеЗатратыСтрока <> "" Тогда
				МассивПодСтрок.Добавить(ТрудовыеЗатратыСтрока);
			КонецЕсли;
			
			ОписаниеРабот = СтрСоединить(МассивПодСтрок, Символы.ПС);
			
			Область.Параметры.ОписаниеРабот = ОписаниеРабот;
			
			МассивВыводимыхОбластей.Очистить();
			МассивВыводимыхОбластей.Добавить(Область);
			МассивВыводимыхОбластей.Добавить(ОбластьПодвал);
					
			//Если НомерСтроки = КоличествоСтрок Тогда
			//	
			//	МассивВыводимыхОбластей.Добавить(ОбластьВсего);
			//	МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
			//	
			//КонецЕсли;
					
			Если Не ТабДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ТабДокумент.Вывести(Область);
		КонецЦикла;
		ВыборкаПоСтрокам.Сбросить();
		
		// Подвал
		ТабДокумент.Вывести(ОбластьПодвал);

		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Документ);

	КонецЦикла;


	Возврат ТабДокумент;

КонецФункции //RARUS-NN EvgenU РАIT-0023370 2021_06_16 --

//RARUS-NN EvgenU РАIT-0023370 2021_06_16 ++
Функция ПолучитьПутьОбъектаРемонта(ОбъектРемонта)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	спр.Родитель КАК ОбъектРемонтаРодитель,
	|	ПРЕДСТАВЛЕНИЕ(спр.Ссылка) КАК Путь
	|ИЗ
	|	Справочник.впОбъектыРемонта КАК спр
	|ГДЕ
	|	спр.Ссылка = &ОбъектРемонта";
	Запрос.УстановитьПараметр("ОбъектРемонта", ОбъектРемонта);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Если Выборка.ОбъектРемонтаРодитель = ПредопределенноеЗначение("Справочник.впОбъектыРемонта.ПустаяСсылка") Тогда
		Возврат Выборка.Путь;
	Иначе
		Возврат ПолучитьПутьОбъектаРемонта(Выборка.ОбъектРемонтаРодитель) + " -> " + Выборка.Путь;
	КонецЕсли;
КонецФункции //RARUS-NN EvgenU РАIT-0023370 2021_06_16 --

#КонецОбласти


#КонецЕсли

