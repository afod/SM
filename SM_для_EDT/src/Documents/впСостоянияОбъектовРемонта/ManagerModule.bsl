#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	МеханизмыДокумента.Добавить("впСостоянияОбъектовРемонта");
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка - ссылка на документ, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура - коллекция элементов:
//     * Таблица<ИмяРегистра> - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Документ);
	Запрос.УстановитьПараметр("Период", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ, "Дата"));
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросавпВремяПростояОборудования(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросавпТекущееСостояниеОР(Запрос, ТекстыЗапроса, Регистры);
	
	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	
	Возврат ПроведениеДокументов.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
	
КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	//ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
КонецПроцедуры

#КонецОбласти

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Функция ТекстЗапросавпТекущееСостояниеОР(Запрос, ТекстыЗапроса, Регистры) 
	
	ИмяРегистра = "впТекущееСостояниеОР";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	впСостоянияОбъектовРемонтаОбъектыРемонта.ОбъектРемонта КАК ОбъектРемонта,
	|	&Период  КАК Период,
	|	впСостоянияОбъектовРемонтаОбъектыРемонта.ПричинаПростоя КАК ПричинаПростоя,
	|	впСостоянияОбъектовРемонтаОбъектыРемонта.ВидЭксплуатации КАК ВидЭксплуатации
	|ИЗ
	|	Документ.впСостоянияОбъектовРемонта.ОбъектыРемонта КАК впСостоянияОбъектовРемонтаОбъектыРемонта
	|ГДЕ
	|	впСостоянияОбъектовРемонтаОбъектыРемонта.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	впСостоянияОбъектовРемонтаПодчиненныеОбъекты.ПодчиненныйОбъект,
	|	&Период,
	|	впСостоянияОбъектовРемонтаОбъектыРемонта.ПричинаПростоя,
	|	впСостоянияОбъектовРемонтаОбъектыРемонта.ВидЭксплуатации
	|ИЗ
	|	Документ.впСостоянияОбъектовРемонта.ОбъектыРемонта КАК впСостоянияОбъектовРемонтаОбъектыРемонта
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.впСостоянияОбъектовРемонта.ПодчиненныеОбъекты КАК впСостоянияОбъектовРемонтаПодчиненныеОбъекты
	|		ПО впСостоянияОбъектовРемонтаОбъектыРемонта.Ссылка = впСостоянияОбъектовРемонтаПодчиненныеОбъекты.Ссылка
	|			И (впСостоянияОбъектовРемонтаОбъектыРемонта.Ссылка = &Ссылка)
	|			И впСостоянияОбъектовРемонтаОбъектыРемонта.ОбъектРемонта = впСостоянияОбъектовРемонтаПодчиненныеОбъекты.Объект";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросавпВремяПростояОборудования(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "впВремяПростояОборудования";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ТЧ.ОбъектРемонта КАК ОбъектРемонта,
	|	ТЧ.ПричинаПростоя КАК ПричинаПростоя,
	|	ТЧ.ДатаНачала КАК ДатаЗапуска,
	|	ТЧ.ВремяПростоя КАК ВремяПростоя
	|ИЗ
	|	Документ.впСостоянияОбъектовРемонта.ОбъектыРемонта КАК ТЧ
	|ГДЕ
	|	ТЧ.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
	
