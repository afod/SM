#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	МеханизмыДокумента.Добавить("рарусИмущественныйУчет");
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка - ссылка на документ, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура - коллекция элементов:
//     * Таблица<ИмяРегистра> - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ, "Склад, Склад.Судно, Дата, Организация, ДокументОснование");
	СудноДокумента = Реквизиты.СкладСудно;
	
	Запрос.УстановитьПараметр("Ссылка", Документ);
	Запрос.УстановитьПараметр("Период", Реквизиты.Дата);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("Склад", Реквизиты.Склад);
	Запрос.УстановитьПараметр("Распоряжение", Реквизиты.ДокументОснование);
	
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПараметрыФОИмущественныйУчет = Новый Структура("Период, Судно", НачалоДня(Реквизиты.Дата), СудноДокумента);
	Если рарусИмущественныйУчетСервер.ИспользоватьИмущественныйУчет(ПараметрыФОИмущественныйУчет) Тогда
		ТекстЗапросаТаблицаИмуществоНаСудах(Запрос, ТекстыЗапроса, Регистры);
	КонецЕсли;

	
	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	
	Возврат ПроведениеДокументов.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ТекстЗапросаТаблицаИмуществоНаСудах(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "рарусИмуществоНаСудах";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Номенклатура.Категория КАК Категория,
	|	Товары.КоличествоВыдано КАК КоличествоПеремещаемое,
	|	Товары.Ссылка.рарусКодСинхронизации КАК КодСинхронизации
	|ПОМЕСТИТЬ ВТТаблицаТоваров
	|ИЗ
	|	Документ.рарусИзменениеСтатусаТМЦ.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	И Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	// ++ rarus makole 2021-07-26 [Задача № 29841]
	//|	И Товары.Номенклатура.ЭтоТопливо = ЛОЖЬ
	|	И (Товары.Номенклатура.ЭтоТопливо = ЛОЖЬ
	|		И Товары.Номенклатура.ВидНоменклатуры.ЭтоТопливо = ЛОЖЬ)
	// -- rarus makole 2021-07-26
	|	И Товары.КоличествоВыдано <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Перечисление.рарусСтатусыИмуществаНаСудне.НаСкладе) КАК Статус,
	|	&Склад КАК Склад,
	|	ТаблицаТоваров.КоличествоПеремещаемое КАК Количество,
	|	ТаблицаТоваров.КодСинхронизации КАК КодСинхронизации,
	|	&Распоряжение КАК Распоряжение
	|ИЗ
	|	ВТТаблицаТоваров КАК ТаблицаТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	ТаблицаТоваров.Номенклатура,
	// ++ rarus makole 2021-06-30 [РАIT-0023374]
	//|	ВЫБОР
	//|		КОГДА ТаблицаТоваров.Категория = ЗНАЧЕНИЕ(Справочник.рарусКатегорииНоменклатуры.СЗЧ)
	//|			ТОГДА ЗНАЧЕНИЕ(Перечисление.рарусСтатусыИмуществаНаСудне.ОприходованоБУ)
	//|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.рарусСтатусыИмуществаНаСудне.ВыданоВПользование)
	//|	КОНЕЦ,
	|	ЗНАЧЕНИЕ(Перечисление.рарусСтатусыИмуществаНаСудне.ВыданоВПользование),
	// -- rarus makole 2021-06-30 [РАIT-0023374]
	|	&Склад,
	|	ТаблицаТоваров.КоличествоПеремещаемое,
	|	ТаблицаТоваров.КодСинхронизации,
	|	&Распоряжение
	|ИЗ
	|	ВТТаблицаТоваров КАК ТаблицаТоваров";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	рарусИмущественныйУчетСервер.ДобавитьКомандуСоздатьРасходТМЦНаОснованииИзменениеСтатусаТМЦ(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	//ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
КонецПроцедуры

#КонецОбласти

#Область РегистрацияОбмена

Процедура ПередОбработкой(ИмяПланаОбмена, Отказ, Объект, ОбъектМетаданных, Выгрузка, ПРО) Экспорт
	
	Если НЕ рарусИмущественныйУчетСервер.ИспользоватьИмущественныйУчетДляДокумента(Объект) Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры	

Процедура ПослеОбработки(ИмяПланаОбмена, Отказ, Объект, ОбъектМетаданных, Выгрузка, Получатели) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли