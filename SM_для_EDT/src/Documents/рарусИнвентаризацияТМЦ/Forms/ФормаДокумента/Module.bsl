#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УстановитьВидимостьЭлементов();
	// ++ rarus makole 2021-10-13
	// От galkra: флаг по умолчанию не ставить
	//ТолькоСОстатками = Истина;
	 // -- rarus makole 2021-10-13
	ПроверитьСообщитьВключенИмущественныйУчет();
	
	//ПАН+ организуем выбор исключительно не Новых, если таки инвентаризация БУ
	Если рарусИмущественныйУчетВызовСервера.ИспользуетсяКачествоТоваров() Тогда
		ОприходованиеБывшегоВУпотребленииПриИзмененииФрагмент();
	КонецЕсли;
	//ПАН-
	
	// ++ rarus makole 2021-09-14 [РАIT-0023495]
	// Доработка отдельных механизмов по учёту и списанию ТМЦ на судах 
	УстановитьСтатусОтправки();
	// -- rarus makole 2021-09-14 [РАIT-0023495]
	
КонецПроцедуры

#КонецОбласти
 
#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда) Экспорт
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды() Экспорт
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Процедура ЗаполнитьПоОтборуНаСервере()
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Период = Новый МоментВремени(ТекущаяДатаСеанса())
	Иначе
		Период = Объект.Ссылка.МоментВремени()
	КонецЕсли;
	
	ТаблицаРезультата = ОстаткиПоОтбору(Период, 
									Объект.Склад, 
									ТолькоСОстатками, 
									Объект.ОприходованиеБывшегоВУпотреблении,
									Объект.ПересчетТМЦ, // rarus makole 2021-09-14 [РАIT-0023495]
									Объект.Отбор).Выгрузить();
	Объект.Товары.Загрузить(ТаблицаРезультата);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОтбору(Команда)
	
	// ++ rarus makole 2021-06-28	
	//Если Не ЗначениеЗаполнено(Объект.Склад) Тогда
	//	ОбщегоНазначенияКлиент.СообщитьПользователю("Поле ""Склад"" не заполнено",,"Склад","Объект")
	//Иначе
	Если ПроверитьЗаполнение() Тогда
	// -- rarus makole 2021-06-28
		ЗаполнитьПоОтборуНаСервере();
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьФактПоУчету(Команда)
	
	Для каждого Строка Из Объект.Товары Цикл
		
		Строка.КоличествоНаСкладеФакт = Строка.КоличествоНаСкладеУчет;
		Строка.КоличествоВыданоФакт = Строка.КоличествоВыданоУчет;
		// ++ rarus makole 2021-09-14 [РАIT-0023495]
		// Доработка отдельных механизмов по учёту и списанию ТМЦ на судах 
		Строка.КоличествоФакт = Строка.КоличествоУчет;
		Строка.Отклонение = 0;
		// -- rarus makole 2021-09-14 [РАIT-0023495]
		Строка.ОтклонениеНаСкладе = 0;
		Строка.ОтклонениеВыдано = 0;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПриходТМЦ(Команда)
	
	Если Модифицированность Тогда
		ОписаниеОповещенияОЗаписи = Новый ОписаниеОповещения("ОбработатьОтветОЗаписиДокумента", ЭтаФорма, "СоздатьПриходТМЦ");
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да, "Записать и продолжить");
		Кнопки.Добавить(КодВозвратаДиалога.Нет, "Отмена");
		ПоказатьВопрос(ОписаниеОповещенияОЗаписи, "Для продолжения необходимо записать документ", Кнопки,, КодВозвратаДиалога.Нет, "Сохранение документа");
	Иначе
		ПодготовитьТаблицуДляДокументов();
		СоздатьДокументыПриходаТМЦ();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьРасходТМЦ(Команда)
	
	Если Модифицированность Тогда
		ОписаниеОповещенияОЗаписи = Новый ОписаниеОповещения("ОбработатьОтветОЗаписиДокумента", ЭтаФорма, "СоздатьРасходТМЦ");
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да, "Записать и продолжить");
		Кнопки.Добавить(КодВозвратаДиалога.Нет, "Отмена");
		ПоказатьВопрос(ОписаниеОповещенияОЗаписи, "Для продолжения необходимо записать документ", Кнопки,, КодВозвратаДиалога.Нет, "Сохранение документа");
	Иначе
		ПодготовитьТаблицуДляДокументов();
		СоздатьДокументыРасходаТМЦ();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьИзменениеСтатусаТМЦ(Команда)
	
	Если Модифицированность Тогда
		ОписаниеОповещенияОЗаписи = Новый ОписаниеОповещения("ОбработатьОтветОЗаписиДокумента", ЭтаФорма, "СоздатьИзменениеСтатусаТМЦ");
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да, "Записать и продолжить");
		Кнопки.Добавить(КодВозвратаДиалога.Нет, "Отмена");
		ПоказатьВопрос(ОписаниеОповещенияОЗаписи, "Для продолжения необходимо записать документ", Кнопки,, КодВозвратаДиалога.Нет, "Сохранение документа");
	Иначе
		ПодготовитьТаблицуДляДокументов();
		СоздатьДокументыИзмененияСтатусаТМЦ();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьДокументы(Команда)
	
	Если Модифицированность Тогда
		ОписаниеОповещенияОЗаписи = Новый ОписаниеОповещения("ОбработатьОтветОЗаписиДокумента", ЭтаФорма, "СформироватьПакет");
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да, "Записать и продолжить");
		Кнопки.Добавить(КодВозвратаДиалога.Нет, "Отмена");
		ПоказатьВопрос(ОписаниеОповещенияОЗаписи, "Для продолжения необходимо записать документ", Кнопки,, КодВозвратаДиалога.Нет, "Сохранение документа");
	Иначе
		ПодготовитьТаблицуДляДокументов();
		СоздатьДокументыПриходаТМЦ();
		СоздатьДокументыРасходаТМЦ();
		СоздатьДокументыИзмененияСтатусаТМЦ();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьТовары(Команда)
	
	ПараметрыФормыЗаголовок =  НСтр("ru = 'Подбор товаров'");
	ОтборПоТипуНоменклатуры = рарусНоменклатураКлиентСервер.ОтборПоТовару();
	
	ПараметрыФормы = Новый Структура;
	
	ПараметрыФормы.Вставить("Заголовок",                                 ПараметрыФормыЗаголовок);
	ПараметрыФормы.Вставить("Дата",                                      ТекущаяДата());
	ПараметрыФормы.Вставить("Документ",                                  Объект.Ссылка);
	ПараметрыФормы.Вставить("КлючНазначенияИспользования",				 "ПростойПодборНоменклатуры");
	ПараметрыФормы.Вставить("ОтборПоТипуНоменклатуры",                   Новый ФиксированныйМассив(ОтборПоТипуНоменклатуры));
	ПараметрыФормы.Вставить("Судно",                   					 СудноПоСкладу(Объект.Склад));
	
	ОткрытьФорму("Обработка.впПодборНоменклатуры.Форма", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.Имяформы = "Обработка.впПодборНоменклатуры.Форма.Форма" Тогда
		
		ОбработкаВыбораПодборНаКлиенте(ВыбранноеЗначение);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораПодборНаКлиенте(ВыбранноеЗначение)
	
	ТаблицаТоваров = ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение);
	
	Для каждого СтрокаТовара Из ТаблицаТоваров Цикл
		ТекущаяСтрока = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаТовара);
		ПриИзмененииНоменклатурыСтроки(ТекущаяСтрока);
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаТовара);	
		РассчитатьОтклонения(ТекущаяСтрока);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ОбработкаВыбораПодборНаСервере(АдресТоваровВХранилище)
	
	ТаблицаТоваров = Новый Массив;
	ТаблицаТоваровВХранилище = ПолучитьИзВременногоХранилища(АдресТоваровВХранилище);
	Для каждого СтрокаТаблицаТоваровВХранилище Из ТаблицаТоваровВХранилище Цикл
		
		ТаблицаТоваров.Добавить(Новый Структура("Номенклатура, КоличествоНаСкладеФакт", СтрокаТаблицаТоваровВХранилище.Номенклатура, СтрокаТаблицаТоваровВХранилище.Количество));
		
	КонецЦикла; 
	
	Возврат ТаблицаТоваров;
	
КонецФункции

// ++ rarus makole 2021-09-14 [РАIT-0023495]
// Доработка отдельных механизмов по учёту и списанию ТМЦ на судах 
&НаКлиенте
Процедура УстановитьСтатусОтправки()
	
	Если НЕ vftОбщегоНазначенияВызовСервера.ЭтоГлавныйУзел() Тогда
		НадписьСтатус = ТекущийСтатусОтправки(Объект.Ссылка);
		Если НадписьСтатус = ПредопределенноеЗначение("Перечисление.рарусСостояниеОтправкиОбъекта.ЗарегистрированКОтправке") Тогда
			ПодключитьОбработчикОжидания("ПроверитьМодифицированность", 2, Ложь)
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТекущийСтатусОтправки(Ссылка)
	Возврат РегистрыСведений.рарусСостоянияОтправкиОбъектов.ТекущийСтатусОбъекта(Ссылка);
КонецФункции

&НаКлиенте
Процедура ПроверитьМодифицированность() Экспорт
	// Пользователь может начать редактировать зарегистрированный документ, вернём его в статус "Черновик"
	// и удалим регистрацию
	Если Модифицированность Тогда
		рарусИмущественныйУчетВызовСервера.УстановитьСтатусЧерновик(Объект.Ссылка);
		НадписьСтатус = ПредопределенноеЗначение("Перечисление.рарусСостояниеОтправкиОбъекта.Черновик");
		ОповеститьОбИзменении(Объект.Ссылка);
	КонецЕсли;
КонецПроцедуры
// -- rarus makole 2021-09-14 [РАIT-0023495]

//rarus_AfoD 31.08.2021 > 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТоварыКоличествоНаСкладеФактПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	РассчитатьОтклонения(ТекущаяСтрока);
КонецПроцедуры

// ++ rarus makole 2021-09-14 [РАIT-0023495]
// Доработка отдельных механизмов по учёту и списанию ТМЦ на судах 
&НаКлиенте
Процедура ТоварыКоличествоФактПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	РассчитатьОтклонения(ТекущаяСтрока);
КонецПроцедуры
// -- rarus makole 2021-09-14 [РАIT-0023495]

&НаКлиенте
Процедура ТоварыКоличествоВыданоФактПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	РассчитатьОтклонения(ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	ПриИзмененииНоменклатурыСтроки(ТекущаяСтрока); 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииНоменклатурыСтроки(ТекущаяСтрока)
	
	СтруктураСтроки = Новый Структура("Номенклатура, 
									|ЕдиницаИзмерения, 
									|КоличествоНаСкладеУчет, 
									|КоличествоНаСкладеФакт, 
									|КоличествоВыданоУчет,
									|КоличествоВыданоФакт,
									|ОтклонениеНаСкладе,
									|ОтклонениеВыдано,
									|КатегорияНоменклатуры,
									|ВыдаетсяЭкипажу,
									// ++ rarus makole 2021-09-14 [РАIT-0023495]
									// Доработка отдельных механизмов по учёту и списанию ТМЦ на судах 
									|КоличествоУчет, 
									|КоличествоФакт, 
									|Отклонение");
									// -- rarus makole 2021-09-14 [РАIT-0023495]
	СвойстваНоменклатуры = ЗначениеРеквизитовОбъекта(ТекущаяСтрока.Номенклатура, "ЕдиницаИзмерения, Категория");
	СтруктураСтроки.Номенклатура = ТекущаяСтрока.Номенклатура;
	СтруктураСтроки.ЕдиницаИзмерения = СвойстваНоменклатуры.ЕдиницаИзмерения;
	СтруктураСтроки.КатегорияНоменклатуры = СвойстваНоменклатуры.Категория;
	СтруктураСтроки.ВыдаетсяЭкипажу = ЗначениеРеквизитаОбъекта(СвойстваНоменклатуры.Категория, "ВыдаетсяЭкипажу");
	ЗаполнитьОстаткиПоСтроке(СтруктураСтроки);
	ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтруктураСтроки); 
	
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	ПроверитьСообщитьВключенИмущественныйУчет();
КонецПроцедуры

// ++ rarus makole 2021-06-28 [РАIT-0023374]
// Учёт номенклатуры разного качества 
&НаКлиенте
Процедура ОприходованиеБывшегоВУпотребленииПриИзменении(Элемент)
	Если ЕстьНоменклатураНесоответствующегоКачества() 
		И рарусИмущественныйУчетВызовСервера.ИспользуетсяКачествоТоваров() Тогда
		ОповещениеОбОтвете = Новый ОписаниеОповещения("ОбработкаОтветаОбУдаленииНоменклатурыИзТЧ", ЭтаФорма);
		ПоказатьВопрос(ОповещениеОбОтвете, "Документ содержит номенклатуру, не соответствующего качества. Очистить таблицу товаров?", РежимДиалогаВопрос.ДаНет,,,"Очистка документа");
	КонецЕсли;
	
	//ПАН+ организуем выбор исключительно не Новых
	Если рарусИмущественныйУчетВызовСервера.ИспользуетсяКачествоТоваров() Тогда
		ОприходованиеБывшегоВУпотребленииПриИзмененииФрагмент();
	КонецЕсли;
	//ПАН-
	
КонецПроцедуры

&НаКлиенте
Процедура ОприходованиеБывшегоВУпотребленииПриИзмененииФрагмент()
	
	Перем ВключаемыеПараметры, ЗначенияОтбора, НовыеЗначения, ПараметрОтбора;
	
	Если Объект.ОприходованиеБывшегоВУпотреблении Тогда
		ЗначенияОтбора = Новый Массив;
		ЗначенияОтбора.Добавить(ПредопределенноеЗначение("Перечисление.ГрадацииКачества.БУ"));
		ЗначенияОтбора.Добавить(ПредопределенноеЗначение("Перечисление.ГрадацииКачества.Восстановленный"));
		ЗначенияОтбора.Добавить(ПредопределенноеЗначение("Перечисление.ГрадацииКачества.НеГоден"));
		
		НовыеЗначения  = Новый ФиксированныйМассив(ЗначенияОтбора);
	Иначе
		ЗначенияОтбора = Новый Массив;
		ЗначенияОтбора.Добавить(ПредопределенноеЗначение("Перечисление.ГрадацииКачества.Новый"));
				
		НовыеЗначения  = Новый ФиксированныйМассив(ЗначенияОтбора);
	КонецЕсли;
	
	ПараметрОтбора = Новый ПараметрВыбора("Отбор.Качество", НовыеЗначения);
		
	ВключаемыеПараметры = Новый Массив;
	ВключаемыеПараметры.Добавить(ПараметрОтбора);

	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,"ТоварыНоменклатура","ПараметрыВыбора",Новый ФиксированныйМассив(ВключаемыеПараметры));

КонецПроцедуры
// -- rarus makole 2021-06-28 [РАIT-0023374]

//rarus_AfoD 31.08.2021 < 
&НаКлиенте
Процедура ПересчетТМЦПриИзменении(Элемент)
	УстановитьВидимостьЭлементов();
КонецПроцедуры
//rarus_AfoD 31.08.2021 > 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьОтклонения(ТекущаяСтрока)
	
	ТекущаяСтрока.ОтклонениеНаСкладе 	= ТекущаяСтрока.КоличествоНаСкладеФакт 	- ТекущаяСтрока.КоличествоНаСкладеУчет;
	ТекущаяСтрока.ОтклонениеВыдано 		= ТекущаяСтрока.КоличествоВыданоФакт 	- ТекущаяСтрока.КоличествоВыданоУчет;
	//rarus_AfoD 31.08.2021 < 
	ТекущаяСтрока.Отклонение 			= ТекущаяСтрока.КоличествоФакт 			- ТекущаяСтрока.КоличествоУчет;
	//rarus_AfoD 31.08.2021 > 
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОстаткиПоОтбору(Период, Склад, ТолькоСОстатками, БУ, ПересчетТМЦ, Отбор = Неопределено, Номенклатура = Неопределено)  // rarus makole 2021-09-14 [РАIT-0023495]
	
	Запрос = Новый Запрос;
	Статус = ?(БУ, ПредопределенноеЗначение("Перечисление.рарусСтатусыИмуществаНаСудне.ОприходованоБУ"), ПредопределенноеЗначение("Перечисление.рарусСтатусыИмуществаНаСудне.НаСкладе"));
	
	Если ПересчетТМЦ ИЛИ НЕ ТолькоСОстатками Тогда
		
		ТекстЗапроса = ?(ПересчетТМЦ, ТекстЗапросаНоменклатураПересчетТМЦ(ТолькоСОстатками), ТекстЗапросаНоменклатураПоОтбору(БУ));
	
		Если Номенклатура <> Неопределено Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОтбора%", "спрНоменклатура.Ссылка = &Номенклатура");
			Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
		ИначеЕсли ЗначениеЗаполнено(Отбор) Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОтбора%", "спрНоменклатура.Категория = &Отбор");
			Запрос.УстановитьПараметр("Отбор", Отбор);
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОтбора%", "Истина");
		КонецЕсли;
		
	Иначе
		
		ТекстЗапроса = ТекстЗапросаНоменклатураПоОстаткамОтбору(БУ);
	
		Если Номенклатура <> Неопределено Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОтбора%", "Номенклатура = &Номенклатура");
			Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
		ИначеЕсли ЗначениеЗаполнено(Отбор) Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОтбора%", "Номенклатура.Категория = &Отбор");
			Запрос.УстановитьПараметр("Отбор", Отбор);
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОтбора%", "Истина");
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Статус", Статус);
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить();
	
КонецФункции

&НаСервере
Процедура ЗаполнитьОстаткиПоСтроке(СтруктураСтроки)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Период = Новый МоментВремени(ТекущаяДатаСеанса())
	Иначе
		Период = Объект.Ссылка.МоментВремени()
	КонецЕсли;
	
	РезультатПоНоменклатуре = ОстаткиПоОтбору(Период, 
									Объект.Склад, 
									Ложь, 
									Объект.ОприходованиеБывшегоВУпотреблении, 
									Объект.ПересчетТМЦ,  // rarus makole 2021-09-14 [РАIT-0023495]
									, 
									СтруктураСтроки.Номенклатура);
									
	ВыборкаПоНоменклатуре = РезультатПоНоменклатуре.Выбрать();
	Если ВыборкаПоНоменклатуре.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураСтроки, ВыборкаПоНоменклатуре);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗначениеРеквизитовОбъекта(Ссылка, Реквизиты)
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, Реквизиты);
	
КонецФункции

&НаСервереБезКонтекста
Функция ЗначениеРеквизитаОбъекта(Ссылка, Реквизит)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, Реквизит);
	
КонецФункции

&НаКлиенте
Процедура ОбработатьОтветОЗаписиДокумента(Ответ, Команда) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		Записать();
		ПодготовитьТаблицуДляДокументов();
		Если Команда = "СоздатьПриходТМЦ" Тогда
			СоздатьДокументыПриходаТМЦ();
		ИначеЕсли Команда = "СоздатьРасходТМЦ" Тогда
			СоздатьДокументыРасходаТМЦ();
		ИначеЕсли Команда = "СоздатьИзменениеСтатусаТМЦ" Тогда
			СоздатьДокументыИзмененияСтатусаТМЦ()		
		ИначеЕсли Команда = "СформироватьПакет" Тогда
			СоздатьДокументыПриходаТМЦ();
			СоздатьДокументыРасходаТМЦ();
			СоздатьДокументыИзмененияСтатусаТМЦ();		
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТекстЗапросаНоменклатураПоОтбору(БУ)
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	спрНоменклатура.Ссылка КАК Номенклатура,
		|	спрНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	спрНоменклатура.Категория КАК КатегорияНоменклатуры
		|ПОМЕСТИТЬ ВТ_Номенклатура
		|ИЗ
		|	Справочник.Номенклатура КАК спрНоменклатура
		|ГДЕ
		|	спрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
		// ++ rarus makole 2021-07-26 [Задача № 29841]
		//|	И спрНоменклатура.ЭтоТопливо = ЛОЖЬ
		|	И (спрНоменклатура.ЭтоТопливо = ЛОЖЬ
		|		И спрНоменклатура.ВидНоменклатуры.ЭтоТопливо = ЛОЖЬ)
		// -- rarus makole 2021-07-26
		|	И %УсловиеОтбора%
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	рарусИмуществоНаСудахОстатки.Номенклатура КАК Номенклатура,
		|	рарусИмуществоНаСудахОстатки.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	рарусИмуществоНаСудахОстатки.Номенклатура.Категория КАК НоменклатураКатегория,
		|	рарусИмуществоНаСудахОстатки.КоличествоОстаток КАК КоличествоНаСкладеУчет,
		|	0 КАК КоличествоНаСкладеФакт,
		|	0 КАК КоличествоВыданоУчет,
		|	0 КАК КоличествоВыданоФакт,
		|	0 - рарусИмуществоНаСудахОстатки.КоличествоОстаток КАК ОтклонениеНаСкладе,
		|	0 КАК ОтклонениеВыдано
		|ПОМЕСТИТЬ ВТ_ОстаткиИмущества
		|ИЗ
		|	РегистрНакопления.рарусИмуществоНаСудах.Остатки(
		|			&Период,
		|			Статус = &Статус
		|				И Склад = &Склад
		|				И Номенклатура В
		|					(ВЫБРАТЬ
		|						ВТ_Номенклатура.Номенклатура КАК Номенклатура
		|					ИЗ
		|						ВТ_Номенклатура КАК ВТ_Номенклатура)) КАК рарусИмуществоНаСудахОстатки" +
	?(БУ,"","
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	рарусИмуществоНаСудахОстатки.Номенклатура,
		|	рарусИмуществоНаСудахОстатки.Номенклатура.ЕдиницаИзмерения,
		|	рарусИмуществоНаСудахОстатки.Номенклатура.Категория,
		|	0,
		|	0,
		|	рарусИмуществоНаСудахОстатки.КоличествоОстаток,
		|	0,
		|	0,
		|	0 - рарусИмуществоНаСудахОстатки.КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.рарусИмуществоНаСудах.Остатки(
		|			&Период,
		|			Статус = ЗНАЧЕНИЕ(Перечисление.рарусСтатусыИмуществаНаСудне.ВыданоВПользование)
		|				И Склад = &Склад
		|				И Номенклатура В
		|					(ВЫБРАТЬ
		|						ВТ_Номенклатура.Номенклатура КАК Номенклатура
		|					ИЗ
		|						ВТ_Номенклатура КАК ВТ_Номенклатура)) КАК рарусИмуществоНаСудахОстатки") +
	"
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Номенклатура.Номенклатура,
		|	ВТ_Номенклатура.ЕдиницаИзмерения,
		|	ВТ_Номенклатура.КатегорияНоменклатуры,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	ВТ_Номенклатура КАК ВТ_Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ОстаткиИмущества.Номенклатура КАК Номенклатура,
		|	ВТ_ОстаткиИмущества.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	СУММА(ВТ_ОстаткиИмущества.КоличествоНаСкладеУчет) КАК КоличествоНаСкладеУчет,
		|	СУММА(ВТ_ОстаткиИмущества.КоличествоНаСкладеФакт) КАК КоличествоНаСкладеФакт,
		|	СУММА(ВТ_ОстаткиИмущества.КоличествоВыданоУчет) КАК КоличествоВыданоУчет,
		|	СУММА(ВТ_ОстаткиИмущества.КоличествоВыданоФакт) КАК КоличествоВыданоФакт,
		|	СУММА(ВТ_ОстаткиИмущества.ОтклонениеНаСкладе) КАК ОтклонениеНаСкладе,
		|	СУММА(ВТ_ОстаткиИмущества.ОтклонениеВыдано) КАК ОтклонениеВыдано,
		|	ВТ_ОстаткиИмущества.НоменклатураКатегория КАК КатегорияНоменклатуры,
		|	ВТ_ОстаткиИмущества.НоменклатураКатегория.ВыдаетсяЭкипажу КАК ВыдаетсяЭкипажу
		|ИЗ
		|	ВТ_ОстаткиИмущества КАК ВТ_ОстаткиИмущества
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ОстаткиИмущества.Номенклатура,
		|	ВТ_ОстаткиИмущества.ЕдиницаИзмерения,
		|	ВТ_ОстаткиИмущества.НоменклатураКатегория,
		|	ВТ_ОстаткиИмущества.НоменклатураКатегория.ВыдаетсяЭкипажу";

	Возврат ТекстЗапроса;
	
КонецФункции

&НаСервереБезКонтекста
Функция ТекстЗапросаНоменклатураПоОстаткамОтбору(БУ)
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	рарусИмуществоНаСудахОстатки.Номенклатура КАК Номенклатура,
		|	рарусИмуществоНаСудахОстатки.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	рарусИмуществоНаСудахОстатки.Номенклатура.Категория КАК НоменклатураКатегория,
		|	рарусИмуществоНаСудахОстатки.КоличествоОстаток КАК КоличествоНаСкладеУчет,
		|	0 КАК КоличествоНаСкладеФакт,
		|	0 КАК КоличествоВыданоУчет,
		|	0 КАК КоличествоВыданоФакт,
		|	0 - рарусИмуществоНаСудахОстатки.КоличествоОстаток КАК ОтклонениеНаСкладе,
		|	0 КАК ОтклонениеВыдано
		|ПОМЕСТИТЬ ВТ_ОстаткиИмущества
		|ИЗ
		|	РегистрНакопления.рарусИмуществоНаСудах.Остатки(
		|			&Период,
		|			Статус = &Статус
		|				И Склад = &Склад
		|				И %УсловиеОтбора%) КАК рарусИмуществоНаСудахОстатки" +
	?(БУ, "","
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	рарусИмуществоНаСудахОстатки.Номенклатура,
		|	рарусИмуществоНаСудахОстатки.Номенклатура.ЕдиницаИзмерения,
		|	рарусИмуществоНаСудахОстатки.Номенклатура.Категория,
		|	0,
		|	0,
		|	рарусИмуществоНаСудахОстатки.КоличествоОстаток,
		|	0,
		|	0,
		|	0 - рарусИмуществоНаСудахОстатки.КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.рарусИмуществоНаСудах.Остатки(
		|			&Период,
		|			Статус = ЗНАЧЕНИЕ(Перечисление.рарусСтатусыИмуществаНаСудне.ВыданоВПользование)
		|				И Склад = &Склад
		|				И %УсловиеОтбора%) КАК рарусИмуществоНаСудахОстатки") +
	"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ОстаткиИмущества.Номенклатура КАК Номенклатура,
		|	ВТ_ОстаткиИмущества.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	СУММА(ВТ_ОстаткиИмущества.КоличествоНаСкладеУчет) КАК КоличествоНаСкладеУчет,
		|	СУММА(ВТ_ОстаткиИмущества.КоличествоНаСкладеФакт) КАК КоличествоНаСкладеФакт,
		|	СУММА(ВТ_ОстаткиИмущества.КоличествоВыданоУчет) КАК КоличествоВыданоУчет,
		|	СУММА(ВТ_ОстаткиИмущества.КоличествоВыданоФакт) КАК КоличествоВыданоФакт,
		|	СУММА(ВТ_ОстаткиИмущества.ОтклонениеНаСкладе) КАК ОтклонениеНаСкладе,
		|	СУММА(ВТ_ОстаткиИмущества.ОтклонениеВыдано) КАК ОтклонениеВыдано,
		|	ВТ_ОстаткиИмущества.НоменклатураКатегория КАК КатегорияНоменклатуры,
		|	ВТ_ОстаткиИмущества.НоменклатураКатегория.ВыдаетсяЭкипажу КАК ВыдаетсяЭкипажу
		|ИЗ
		|	ВТ_ОстаткиИмущества КАК ВТ_ОстаткиИмущества
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ОстаткиИмущества.Номенклатура,
		|	ВТ_ОстаткиИмущества.ЕдиницаИзмерения,
		|	ВТ_ОстаткиИмущества.НоменклатураКатегория";	
	
	Возврат ТекстЗапроса;
	
КонецФункции

// ++ rarus makole 2021-09-14 [РАIT-0023495]
// Доработка отдельных механизмов по учёту и списанию ТМЦ на судах 
&НаСервереБезКонтекста
Функция ТекстЗапросаНоменклатураПересчетТМЦ(ТолькоСОстатками)
	
	ТекстЗапроса = "ВЫБРАТЬ
		|	спрНоменклатура.Ссылка КАК Номенклатура,
		|	спрНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	спрНоменклатура.Категория КАК КатегорияНоменклатуры
		|ПОМЕСТИТЬ ВТ_Номенклатура
		|ИЗ
		|	Справочник.Номенклатура КАК спрНоменклатура
		|ГДЕ
		|	спрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
		|	И спрНоменклатура.ЭтоТопливо = ЛОЖЬ
		|	И спрНоменклатура.ВидНоменклатуры.ЭтоТопливо = ЛОЖЬ
		|	И %УсловиеОтбора%
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	рарусИмуществоНаСудахОстатки.Номенклатура КАК Номенклатура,
		|	рарусИмуществоНаСудахОстатки.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	рарусИмуществоНаСудахОстатки.Номенклатура.Категория КАК НоменклатураКатегория,
		|	рарусИмуществоНаСудахОстатки.КоличествоОстаток КАК КоличествоУчет,
		|	0 КАК КоличествоФакт,
		|	-рарусИмуществоНаСудахОстатки.КоличествоОстаток КАК Отклонение
		|ПОМЕСТИТЬ ВТ_ОстаткиИмущества
		|ИЗ
		|	РегистрНакопления.рарусИмуществоНаСудах.Остатки(
		|			&Период,
		|			Статус <> ЗНАЧЕНИЕ(Перечисление.рарусСтатусыИмуществаНаСудне.СписаноВРегУчете)
		|				И Склад = &Склад
		|				И Номенклатура В
		|					(ВЫБРАТЬ
		|						ВТ_Номенклатура.Номенклатура КАК Номенклатура
		|					ИЗ
		|						ВТ_Номенклатура КАК ВТ_Номенклатура)) КАК рарусИмуществоНаСудахОстатки" +
		?(ТолькоСОстатками, "", "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Номенклатура.Номенклатура,
		|	ВТ_Номенклатура.ЕдиницаИзмерения,
		|	ВТ_Номенклатура.КатегорияНоменклатуры,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	ВТ_Номенклатура КАК ВТ_Номенклатура") + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ОстаткиИмущества.Номенклатура КАК Номенклатура,
		|	ВТ_ОстаткиИмущества.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ВТ_ОстаткиИмущества.НоменклатураКатегория КАК КатегорияНоменклатуры,
		|	ВТ_ОстаткиИмущества.НоменклатураКатегория.ВыдаетсяЭкипажу КАК ВыдаетсяЭкипажу,
		|	СУММА(ВТ_ОстаткиИмущества.КоличествоУчет) КАК КоличествоУчет,
		|	СУММА(ВТ_ОстаткиИмущества.КоличествоФакт) КАК КоличествоФакт,
		|	СУММА(ВТ_ОстаткиИмущества.Отклонение) КАК Отклонение
		|ИЗ
		|	ВТ_ОстаткиИмущества КАК ВТ_ОстаткиИмущества
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ОстаткиИмущества.Номенклатура,
		|	ВТ_ОстаткиИмущества.ЕдиницаИзмерения,
		|	ВТ_ОстаткиИмущества.НоменклатураКатегория,
		|	ВТ_ОстаткиИмущества.НоменклатураКатегория.ВыдаетсяЭкипажу";
	
	Возврат ТекстЗапроса;
	
КонецФункции
// -- rarus makole 2021-09-14 [РАIT-0023495]

&НаСервереБезКонтекста
Функция ИмущественныйУчетНеВключен(ДатаДок, Склад)
	
	Судно = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Склад, "Судно");
	Период = ?(ДатаДок = Дата('00010101'), НачалоДня(ТекущаяДатаСеанса()), НачалоДня(ДатаДок));
	ПараметрыФО = Новый Структура("Период, Судно", Период, Судно);
	
	Возврат Не рарусИмущественныйУчетСервер.ИспользоватьИмущественныйУчет(ПараметрыФО);
	
КонецФункции

&НаКлиенте
Процедура ПроверитьСообщитьВключенИмущественныйУчет()
	Если ЗначениеЗаполнено(Объект.Склад)
		И ИмущественныйУчетНеВключен(Объект.Дата, Объект.Склад) Тогда
		ПоказатьПредупреждение(, "Для судна выбранного склада не включен имущественный учёт. Данных для заполнения нет!",,"Внимание!");
	КонецЕсли;
КонецПроцедуры

// ++ rarus makole 2021-06-28 [РАIT-0023374]
// Учёт номенклатуры разного качества 
&НаСервере
Функция ЕстьНоменклатураНесоответствующегоКачества()
	
	МассивНоменклатурыДокумента = Объект.Товары.Выгрузить(, "Номенклатура").ВыгрузитьКолонку("Номенклатура");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Ссылка В(&НоменклатураДокумента)
		|	И ВЫБОР
		|			КОГДА &ОприходованиеБУ = ИСТИНА
		|					И Номенклатура.Качество <> ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.Новый)
		|					И Номенклатура.Качество <> ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.ПустаяСсылка)
		|				ТОГДА ЛОЖЬ
		|			КОГДА &ОприходованиеБУ = ЛОЖЬ
		|					И Номенклатура.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.Новый)
		|				ТОГДА ЛОЖЬ
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ";
	
	Запрос.УстановитьПараметр("НоменклатураДокумента", МассивНоменклатурыДокумента);
	Запрос.УстановитьПараметр("ОприходованиеБУ", Объект.ОприходованиеБывшегоВУпотреблении);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции

&НаКлиенте
Процедура ОбработкаОтветаОбУдаленииНоменклатурыИзТЧ(Ответ, ДопПараметры) Экспорт
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Объект.Товары.Очистить();
	КонецЕсли;
КонецПроцедуры
// -- rarus makole 2021-06-28 [РАIT-0023374]

&НаСервереБезКонтекста
Функция СудноПоСкладу(Склад)
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Склад, "Судно");
КонецФункции

#КонецОбласти

#Область ВводНаОсновании

&НаКлиенте
Процедура ПодготовитьТаблицуДляДокументов()
	
	ПодготовленныеДанные.Очистить();
	Для каждого СтрокаТоваров Из Объект.Товары Цикл
		Если (СтрокаТоваров.ОтклонениеНаСкладе + СтрокаТоваров.ОтклонениеВыдано) > 0 Тогда
			Если СтрокаТоваров.ОтклонениеВыдано > 0 Тогда
				НоваяСтрокаПриход = ПодготовленныеДанные.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаПриход, СтрокаТоваров);
				НоваяСтрокаПриход.Количество = СтрокаТоваров.ОтклонениеНаСкладе + СтрокаТоваров.ОтклонениеВыдано;
				НоваяСтрокаПриход.Операция = "ПриходТМЦ";
				НоваяСтрокаПриход.Статус = ПредопределенноеЗначение("Перечисление.рарусСтатусыИмуществаНаСудне.НаСкладе");
				
				НоваяСтрокаИзменениеСтатуса = ПодготовленныеДанные.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаИзменениеСтатуса, СтрокаТоваров);
				НоваяСтрокаИзменениеСтатуса.КоличествоВыдано = СтрокаТоваров.ОтклонениеВыдано;
				НоваяСтрокаИзменениеСтатуса.Операция = "ИзменениеСтатусаТМЦ";
				НоваяСтрокаИзменениеСтатуса.Статус = ПредопределенноеЗначение("Перечисление.рарусСтатусыИмуществаНаСудне.ВыданоВПользование");
			ИначеЕсли СтрокаТоваров.ОтклонениеВыдано < 0 Тогда
				НоваяСтрокаПриход = ПодготовленныеДанные.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаПриход, СтрокаТоваров);
				НоваяСтрокаПриход.Количество = СтрокаТоваров.ОтклонениеНаСкладе;
				НоваяСтрокаПриход.Операция = "ПриходТМЦ";
				НоваяСтрокаПриход.Статус = ПредопределенноеЗначение("Перечисление.рарусСтатусыИмуществаНаСудне.НаСкладе");
				
				НоваяСтрокаРасход = ПодготовленныеДанные.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаРасход, СтрокаТоваров);
				НоваяСтрокаРасход.Количество = -СтрокаТоваров.ОтклонениеВыдано;
				НоваяСтрокаРасход.Операция = "РасходТМЦ";
				НоваяСтрокаРасход.Статус = ПредопределенноеЗначение("Перечисление.рарусСтатусыИмуществаНаСудне.ВыданоВПользование");
			Иначе
				НоваяСтрокаПриход = ПодготовленныеДанные.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаПриход, СтрокаТоваров);
				НоваяСтрокаПриход.Количество = СтрокаТоваров.ОтклонениеНаСкладе;
				НоваяСтрокаПриход.Операция = "ПриходТМЦ";
				НоваяСтрокаПриход.Статус = ПредопределенноеЗначение("Перечисление.рарусСтатусыИмуществаНаСудне.НаСкладе");
			КонецЕсли;
		ИначеЕсли (СтрокаТоваров.ОтклонениеНаСкладе + СтрокаТоваров.ОтклонениеВыдано) < 0 Тогда
			// ++ rarus makole 2021-03-04 			
			// Замечание dore: учётный излишек на складе должен быть сначала выдан, а потом списан из выданного
			Если СтрокаТоваров.ОтклонениеНаСкладе < 0 И СтрокаТоваров.ВыдаетсяЭкипажу Тогда
				НоваяСтрокаИзменениеСтатуса = ПодготовленныеДанные.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаИзменениеСтатуса, СтрокаТоваров);
				НоваяСтрокаИзменениеСтатуса.КоличествоВыдано = -СтрокаТоваров.ОтклонениеНаСкладе;
				НоваяСтрокаИзменениеСтатуса.Операция = "ИзменениеСтатусаТМЦ";
				НоваяСтрокаИзменениеСтатуса.Статус = ПредопределенноеЗначение("Перечисление.рарусСтатусыИмуществаНаСудне.ВыданоВПользование");
				
				НоваяСтрокаРасход = ПодготовленныеДанные.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаРасход, СтрокаТоваров);
				НоваяСтрокаРасход.Количество = -(СтрокаТоваров.ОтклонениеНаСкладе + СтрокаТоваров.ОтклонениеВыдано);
				НоваяСтрокаРасход.Операция = "РасходТМЦ";
				НоваяСтрокаРасход.Статус = ПредопределенноеЗначение("Перечисление.рарусСтатусыИмуществаНаСудне.ВыданоВПользование");
			//ИначеЕсли СтрокаТоваров.ОтклонениеНаСкладе < 0 И СтрокаТоваров.ОтклонениеВыдано < 0 Тогда
			//	НоваяСтрокаРасход = ПодготовленныеДанные.Добавить();
			//	ЗаполнитьЗначенияСвойств(НоваяСтрокаРасход, СтрокаТоваров);
			//	НоваяСтрокаРасход.Количество = -СтрокаТоваров.ОтклонениеНаСкладе;
			//	НоваяСтрокаРасход.Операция = "РасходТМЦ";
			//	НоваяСтрокаРасход.Статус = ПредопределенноеЗначение("Перечисление.рарусСтатусыИмуществаНаСудне.НаСкладе");
				
				//НоваяСтрокаРасход = ПодготовленныеДанные.Добавить();
				//ЗаполнитьЗначенияСвойств(НоваяСтрокаРасход, СтрокаТоваров);
				//НоваяСтрокаРасход.Количество = -СтрокаТоваров.ОтклонениеВыдано;
				//НоваяСтрокаРасход.Операция = "РасходТМЦ";
				//НоваяСтрокаРасход.Статус = ПредопределенноеЗначение("Перечисление.рарусСтатусыИмуществаНаСудне.ВыданоВПользование");
			//ИначеЕсли СтрокаТоваров.ОтклонениеНаСкладе < 0 И СтрокаТоваров.ОтклонениеВыдано > 0 Тогда
			//	НоваяСтрокаИзменениеСтатуса = ПодготовленныеДанные.Добавить();
			//	ЗаполнитьЗначенияСвойств(НоваяСтрокаИзменениеСтатуса, СтрокаТоваров);
			//	НоваяСтрокаИзменениеСтатуса.КоличествоВыдано = СтрокаТоваров.ОтклонениеВыдано;
			//	НоваяСтрокаИзменениеСтатуса.Операция = "ИзменениеСтатусаТМЦ";
			//	НоваяСтрокаИзменениеСтатуса.Статус = ПредопределенноеЗначение("Перечисление.рарусСтатусыИмуществаНаСудне.ВыданоВПользование");
			//	
			//	НоваяСтрокаРасход = ПодготовленныеДанные.Добавить();
			//	ЗаполнитьЗначенияСвойств(НоваяСтрокаРасход, СтрокаТоваров);
			//	НоваяСтрокаРасход.Количество = -(СтрокаТоваров.ОтклонениеНаСкладе + СтрокаТоваров.ОтклонениеВыдано);
			//	НоваяСтрокаРасход.Операция = "РасходТМЦ";
			//	НоваяСтрокаРасход.Статус = ПредопределенноеЗначение("Перечисление.рарусСтатусыИмуществаНаСудне.НаСкладе");
			// -- rarus makole 2021-03-04
			ИначеЕсли СтрокаТоваров.ОтклонениеНаСкладе > 0 И СтрокаТоваров.ОтклонениеВыдано < 0 Тогда
				НоваяСтрокаПриход = ПодготовленныеДанные.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаПриход, СтрокаТоваров);
				НоваяСтрокаПриход.Количество = СтрокаТоваров.ОтклонениеНаСкладе;
				НоваяСтрокаПриход.Операция = "ПриходТМЦ";
				НоваяСтрокаПриход.Статус = ПредопределенноеЗначение("Перечисление.рарусСтатусыИмуществаНаСудне.НаСкладе");
				
				НоваяСтрокаРасход = ПодготовленныеДанные.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаРасход, СтрокаТоваров);
				НоваяСтрокаРасход.Количество = -СтрокаТоваров.ОтклонениеВыдано;
				НоваяСтрокаРасход.Операция = "РасходТМЦ";
				НоваяСтрокаРасход.Статус = ПредопределенноеЗначение("Перечисление.рарусСтатусыИмуществаНаСудне.ВыданоВПользование");
			// ++ rarus makole 2021-03-04	
			//ИначеЕсли СтрокаТоваров.ОтклонениеНаСкладе < 0 И СтрокаТоваров.ОтклонениеВыдано = 0 Тогда
			ИначеЕсли СтрокаТоваров.ОтклонениеНаСкладе < 0 Тогда
			// -- rarus makole 2021-03-04
				НоваяСтрокаРасход = ПодготовленныеДанные.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаРасход, СтрокаТоваров);
				НоваяСтрокаРасход.Количество = -(СтрокаТоваров.ОтклонениеНаСкладе);
				НоваяСтрокаРасход.Операция = "РасходТМЦ";
				НоваяСтрокаРасход.Статус = ПредопределенноеЗначение("Перечисление.рарусСтатусыИмуществаНаСудне.НаСкладе");
			ИначеЕсли СтрокаТоваров.ОтклонениеНаСкладе = 0 И СтрокаТоваров.ОтклонениеВыдано < 0 Тогда
				НоваяСтрокаРасход = ПодготовленныеДанные.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаРасход, СтрокаТоваров);
				НоваяСтрокаРасход.Количество = -(СтрокаТоваров.ОтклонениеВыдано);
				НоваяСтрокаРасход.Операция = "РасходТМЦ";
				НоваяСтрокаРасход.Статус = ПредопределенноеЗначение("Перечисление.рарусСтатусыИмуществаНаСудне.ВыданоВПользование");
			КонецЕсли;	
		Иначе
			Если СтрокаТоваров.ОтклонениеНаСкладе > 0 И СтрокаТоваров.ОтклонениеВыдано < 0 Тогда
				НоваяСтрокаПриход = ПодготовленныеДанные.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаПриход, СтрокаТоваров);
				НоваяСтрокаПриход.Количество = СтрокаТоваров.ОтклонениеНаСкладе;
				НоваяСтрокаПриход.Операция = "ПриходТМЦ";
				НоваяСтрокаПриход.Статус = ПредопределенноеЗначение("Перечисление.рарусСтатусыИмуществаНаСудне.НаСкладе");
				
				НоваяСтрокаРасход = ПодготовленныеДанные.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаРасход, СтрокаТоваров);
				НоваяСтрокаРасход.Количество = -СтрокаТоваров.ОтклонениеВыдано;
				НоваяСтрокаРасход.Операция = "РасходТМЦ";
				НоваяСтрокаРасход.Статус = ПредопределенноеЗначение("Перечисление.рарусСтатусыИмуществаНаСудне.ВыданоВПользование");
			ИначеЕсли СтрокаТоваров.ОтклонениеНаСкладе < 0 И СтрокаТоваров.ОтклонениеВыдано > 0 Тогда
				НоваяСтрокаИзменениеСтатуса = ПодготовленныеДанные.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаИзменениеСтатуса, СтрокаТоваров);
				НоваяСтрокаИзменениеСтатуса.КоличествоВыдано = СтрокаТоваров.ОтклонениеВыдано;
				НоваяСтрокаИзменениеСтатуса.Операция = "ИзменениеСтатусаТМЦ";
				НоваяСтрокаИзменениеСтатуса.Статус = ПредопределенноеЗначение("Перечисление.рарусСтатусыИмуществаНаСудне.ВыданоВПользование");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция МассивДанныхДляНовыхДокументов(ДокументОснование, Организация, Склад, Знач ПодготовленныеДанные, Операция, ОприходованиеБывшегоВУпотреблении = Ложь)
	
	ДанныеДляДокументов = Новый Массив;
	ОтборВТаблице = Новый Структура("Операция", Операция); 
	ТаблицаДляЗаполнения = ПодготовленныеДанные.Выгрузить(ОтборВТаблице);
	Если Операция = "РасходТМЦ" Тогда
		ДополнитьТаблицуСписаниемБУ(ДокументОснование, Склад, ТаблицаДляЗаполнения)
	КонецЕсли;
	ТаблицаСтатусовКатегорий = ТаблицаДляЗаполнения.Скопировать(,"Статус, КатегорияНоменклатуры");
	ТаблицаСтатусовКатегорий.Свернуть("Статус, КатегорияНоменклатуры");
	
	Для каждого СтатусКатегория Из ТаблицаСтатусовКатегорий Цикл
		МассивТекущегоСтатусаКатегории = Новый Массив;
		ОтборПоСтатусуКатегории = Новый Структура("Статус, КатегорияНоменклатуры", СтатусКатегория.Статус, СтатусКатегория.КатегорияНоменклатуры);
		ТаблицаСтатусаКатегории = ТаблицаДляЗаполнения.Скопировать(ОтборПоСтатусуКатегории);
		МассивДанныхДляНовыхДокументов = ОбщегоНазначения.ТаблицаЗначенийВМассив(ТаблицаСтатусаКатегории);
		ДанныеДляДокументов.Добавить(Новый Структура("ДокументОснование, Организация, Склад, Статус, КатегорияНоменклатуры, Данные, ОприходованиеБывшегоВУпотреблении", 
					                                        ДокументОснование,
															Организация,
															Склад,
															СтатусКатегория.Статус,
															СтатусКатегория.КатегорияНоменклатуры, 
															МассивДанныхДляНовыхДокументов,
															ОприходованиеБывшегоВУпотреблении));
	КонецЦикла;
	
	Возврат ДанныеДляДокументов;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ДополнитьТаблицуСписаниемБУ(ДокументОснование, Склад, ТаблицаДляЗаполнения)
	
	ЗапросПоОстаткам = Новый Запрос;
	ЗапросПоОстаткам.Текст = "ВЫБРАТЬ
	                         |	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	                         |	ТаблицаТоваров.Статус КАК Статус
	                         |ПОМЕСТИТЬ ВТ_ТоварыДокумента
	                         |ИЗ
	                         |	&ТаблицаДляЗаполнения КАК ТаблицаТоваров
	                         |;
	                         |
	                         |////////////////////////////////////////////////////////////////////////////////
	                         |ВЫБРАТЬ
	                         |	ВТ_ТоварыДокумента.Номенклатура КАК Номенклатура
	                         |ПОМЕСТИТЬ ВТ_ТаблицаТоваров
	                         |ИЗ
	                         |	ВТ_ТоварыДокумента КАК ВТ_ТоварыДокумента
	                         |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК спрНоменклатура
	                         |		ПО ВТ_ТоварыДокумента.Номенклатура = спрНоменклатура.Ссылка
	                         |			И (спрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар))
							 // ++ rarus makole 2021-07-26 [Задача № 29841]
							 //|		И (спрНоменклатура.ЭтоТопливо = ЛОЖЬ)
							 |			И (спрНоменклатура.ЭтоТопливо = ЛОЖЬ
							 |				И спрНоменклатура.ВидНоменклатуры.ЭтоТопливо = ЛОЖЬ)
							 // -- rarus makole 2021-07-26
	                         |ГДЕ
	                         |	ВТ_ТоварыДокумента.Статус = ЗНАЧЕНИЕ(Перечисление.рарусСтатусыИмуществаНаСудне.НаСкладе)
	                         |;
	                         |
	                         |////////////////////////////////////////////////////////////////////////////////
	                         |ВЫБРАТЬ
	                         |	рарусИмуществоНаСудахОстатки.Номенклатура КАК Номенклатура,
	                         |	рарусИмуществоНаСудахОстатки.Статус КАК Статус,
	                         |	рарусИмуществоНаСудахОстатки.Склад КАК Склад,
	                         |	рарусИмуществоНаСудахОстатки.КоличествоОстаток КАК КоличествоОстаток,
	                         |	ВЫБОР
	                         |		КОГДА рарусИмуществоНаСудахОстатки.Статус = ЗНАЧЕНИЕ(Перечисление.рарусСтатусыИмуществаНаСудне.ОприходованоБУ)
	                         |			ТОГДА 1
	                         |		ИНАЧЕ 2
	                         |	КОНЕЦ КАК Порядок
	                         |ИЗ
	                         |	РегистрНакопления.рарусИмуществоНаСудах.Остатки(
	                         |			&Период,
	                         |			Склад = &Склад
	                         |				И Статус = ЗНАЧЕНИЕ(Перечисление.рарусСтатусыИмуществаНаСудне.ОприходованоБУ)
	                         |				И Номенклатура В
	                         |					(ВЫБРАТЬ
	                         |						ВТ_ТаблицаТоваров.Номенклатура КАК Номенклатура
	                         |					ИЗ
	                         |						ВТ_ТаблицаТоваров КАК ВТ_ТаблицаТоваров)) КАК рарусИмуществоНаСудахОстатки
	                         |ГДЕ
	                         |	рарусИмуществоНаСудахОстатки.КоличествоОстаток > 0
	                         |
	                         |УПОРЯДОЧИТЬ ПО
	                         |	Номенклатура,
	                         |	Порядок
	                         |АВТОУПОРЯДОЧИВАНИЕ";
	
	ЗапросПоОстаткам.УстановитьПараметр("ТаблицаДляЗаполнения", ТаблицаДляЗаполнения);
	ЗапросПоОстаткам.УстановитьПараметр("Период", ДокументОснование.МоментВремени());
	ЗапросПоОстаткам.УстановитьПараметр("Склад", Склад);
	
	ВыборкаПоОстаткам = ЗапросПоОстаткам.Выполнить().Выбрать();
	
	СтрокВТаблице = ТаблицаДляЗаполнения.Количество();
	ТекущийИндексСтроки = СтрокВТаблице - 1;
	Пока ТекущийИндексСтроки >= 0 Цикл
		ТекущаяСтрока = ТаблицаДляЗаполнения[ТекущийИндексСтроки];
		
		Если ТекущаяСтрока.Статус <> ПредопределенноеЗначение("Перечисление.рарусСтатусыИмуществаНаСудне.НаСкладе") Тогда
			ТекущийИндексСтроки = ТекущийИндексСтроки - 1;
			Продолжить;
		КонецЕсли;
		
		Если ВыборкаПоОстаткам.НайтиСледующий(ТекущаяСтрока.Номенклатура, "Номенклатура") Тогда
			СписываемИзБУ = Мин(ТекущаяСтрока.Количество, ВыборкаПоОстаткам.КоличествоОстаток);
			Если ТекущаяСтрока.Количество = СписываемИзБУ Тогда
				ТекущаяСтрока.Статус = ПредопределенноеЗначение("Перечисление.рарусСтатусыИмуществаНаСудне.ОприходованоБУ");
			Иначе
				СтрокаСписанияИзБУ = ТаблицаДляЗаполнения.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаСписанияИзБУ, ТекущаяСтрока);
				СтрокаСписанияИзБУ.Статус = ПредопределенноеЗначение("Перечисление.рарусСтатусыИмуществаНаСудне.ОприходованоБУ");
				СтрокаСписанияИзБУ.Количество = СписываемИзБУ;
				
				ТекущаяСтрока.Количество = ТекущаяСтрока.Количество - СписываемИзБУ;
			КонецЕсли;		
		КонецЕсли;
		ВыборкаПоОстаткам.Сбросить();
		ТекущийИндексСтроки = ТекущийИндексСтроки - 1;
	КонецЦикла;
	
КонецПроцедуры

// ++ Приход ТМЦ
&НаКлиенте 
Процедура СоздатьДокументыПриходаТМЦ()
	
	ДанныеДляСоздания = МассивДанныхДляНовыхДокументов(Объект.Ссылка, Объект.Организация, Объект.Склад, ПодготовленныеДанные, "ПриходТМЦ", Объект.ОприходованиеБывшегоВУпотреблении);
	Для каждого ДанныеНовогоДокумента Из ДанныеДляСоздания Цикл
		ПараметрыФормы = Новый Структура("Основание", Объект.Ссылка);
		ФормаНовогоДокументаПрихода = ПолучитьФорму("Документ.впПриходТМЦ.Форма.ФормаДокумента", ПараметрыФормы, ЭтаФорма, Истина);
		ДанныеФормы = ФормаНовогоДокументаПрихода.Объект;
		ЗаполнитьДокументПрихода(ДанныеФормы, ДанныеНовогоДокумента);
		КопироватьДанныеФормы(ДанныеФормы, ФормаНовогоДокументаПрихода.Объект);
		ФормаНовогоДокументаПрихода.Модифицированность = Истина;
		ФормаНовогоДокументаПрихода.Открыть();
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьДокументПрихода(ДанныеФормы, ДанныеНовогоДокумента)
	
	НовыйДокументПрихода = Документы.впПриходТМЦ.СоздатьДокумент();
	НовыйДокументПрихода.Заполнить(ДанныеНовогоДокумента);
	ЗначениеВДанныеФормы(НовыйДокументПрихода, ДанныеФормы);
	
КонецПроцедуры
// -- Приход ТМЦ

// ++ Расход ТМЦ
&НаКлиенте 
Процедура СоздатьДокументыРасходаТМЦ()
	
	ДанныеДляСоздания = МассивДанныхДляНовыхДокументов(Объект.Ссылка, Объект.Организация, Объект.Склад, ПодготовленныеДанные, "РасходТМЦ");
	Для каждого ДанныеНовогоДокумента Из ДанныеДляСоздания Цикл
		ПараметрыФормы = Новый Структура("Основание", Объект.Ссылка);
		ФормаНовогоДокументаРасхода = ПолучитьФорму("Документ.рарусРасходТМЦ.Форма.ФормаДокумента", ПараметрыФормы, ЭтаФорма, Истина);
		ДанныеФормы = ФормаНовогоДокументаРасхода.Объект;
		ЗаполнитьДокументРасхода(ДанныеФормы, ДанныеНовогоДокумента);
		КопироватьДанныеФормы(ДанныеФормы, ФормаНовогоДокументаРасхода.Объект);
		ФормаНовогоДокументаРасхода.Модифицированность = Истина;
		ФормаНовогоДокументаРасхода.Открыть();
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьДокументРасхода(ДанныеФормы, ДанныеНовогоДокумента)
	
	НовыйДокументРасхода = Документы.рарусРасходТМЦ.СоздатьДокумент();
	НовыйДокументРасхода.Заполнить(ДанныеНовогоДокумента);
	ЗначениеВДанныеФормы(НовыйДокументРасхода, ДанныеФормы);
	
КонецПроцедуры
// -- Расход ТМЦ

// ++ Изменение статуса ТМЦ
&НаКлиенте 
Процедура СоздатьДокументыИзмененияСтатусаТМЦ()
	
	ДанныеДляСоздания = МассивДанныхДляНовыхДокументов(Объект.Ссылка, Объект.Организация, Объект.Склад, ПодготовленныеДанные, "ИзменениеСтатусаТМЦ");
	Для каждого ДанныеНовогоДокумента Из ДанныеДляСоздания Цикл
		ПараметрыФормы = Новый Структура("Основание", Объект.Ссылка);
		ФормаНовогоДокументаИзмененияСтатуса = ПолучитьФорму("Документ.рарусИзменениеСтатусаТМЦ.Форма.ФормаДокумента", ПараметрыФормы, ЭтаФорма, Истина);
		ДанныеФормы = ФормаНовогоДокументаИзмененияСтатуса.Объект;
		ЗаполнитьДокументИзмененияСтатусаТМЦ(ДанныеФормы, ДанныеНовогоДокумента);
		КопироватьДанныеФормы(ДанныеФормы, ФормаНовогоДокументаИзмененияСтатуса.Объект);
		ФормаНовогоДокументаИзмененияСтатуса.Модифицированность = Истина;
		ФормаНовогоДокументаИзмененияСтатуса.Открыть();
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьДокументИзмененияСтатусаТМЦ(ДанныеФормы, ДанныеНовогоДокумента)
	
	НовыйДокументИзмененияСтатусаТМЦ = Документы.рарусИзменениеСтатусаТМЦ.СоздатьДокумент();
	НовыйДокументИзмененияСтатусаТМЦ.Заполнить(ДанныеНовогоДокумента);
	ЗначениеВДанныеФормы(НовыйДокументИзмененияСтатусаТМЦ, ДанныеФормы);
	
КонецПроцедуры
// -- Изменение статуса ТМЦ

#КонецОбласти

#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура УстановитьВидимостьЭлементов()
	
	ЭтоГлавныйУзел = рарусОбщегоНазначенияВызовСервера.ГлавныйУзел() = Неопределено;
	Элементы.Организация.Видимость = ЭтоГлавныйУзел;
	Элементы.Склад.Видимость = ЭтоГлавныйУзел;
	
	// ++ rarus makole 2021-06-10 [РАIT-0023374]
	// Учёт номенклатуры разного качества 
	Элементы.ТоварыНоменклатураКачество.Видимость = рарусИмущественныйУчетВызовСервера.ИспользуетсяКачествоТоваров();
	// -- rarus makole 2021-06-10 [РАIT-0023374]
	
	//rarus_AfoD 31.08.2021 < 
	ЭтоПересчетТМЦ = Объект.ПересчетТМЦ;
	Элементы.ТоварыКоличествоНаСкладеУчет.Видимость = НЕ ЭтоПересчетТМЦ;
	Элементы.ТоварыКоличествоНаСкладеФакт.Видимость = НЕ ЭтоПересчетТМЦ;
	Элементы.ТоварыКоличествоВыданоУчет.Видимость = НЕ ЭтоПересчетТМЦ;
	Элементы.ТоварыКоличествоВыданоФакт.Видимость = НЕ ЭтоПересчетТМЦ;
	Элементы.ТоварыОтклонениеНаСкладе.Видимость = НЕ ЭтоПересчетТМЦ;
	Элементы.ТоварыОтклонениеВыдано.Видимость = НЕ ЭтоПересчетТМЦ;
	Элементы.ОприходованиеБывшегоВУпотреблении.Видимость = НЕ ЭтоПересчетТМЦ;
	Элементы.ТоварыКоличествоУчет.Видимость = ЭтоПересчетТМЦ;
	Элементы.ТоварыКоличествоФакт.Видимость = ЭтоПересчетТМЦ;
	Элементы.ТоварыОтклонение.Видимость = ЭтоПересчетТМЦ;
	// ++ rarus makole 2021-09-14 [РАIT-0023495]
	// Доработка отдельных механизмов по учёту и списанию ТМЦ на судах 
	//Элементы.ГруппаПерваяЛиния.Видимость = ЭтоПересчетТМЦ;
	Элементы.ПодменюСоздатьНаОсновании.Видимость = НЕ ЭтоПересчетТМЦ;
	Элементы.ФормаСформироватьДокументы.Видимость = НЕ ЭтоПересчетТМЦ;
	Элементы.ГруппаПерваяЛиния.Видимость = НЕ ЭтоГлавныйУзел И ЭтоПересчетТМЦ;
	// -- rarus makole 2021-09-14 [РАIT-0023495]
	//rarus_AfoD 31.08.2021 > 
	
КонецПроцедуры

#КонецОбласти

#Область Штрихкодирование
// ++ rarus yukuzi 25.02.2021   // ФТ.СНБ.02. Задача_Штрихкодирование
&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
 рарусШтрихкодированиеКлиент.ВыполнитьКомандуШтрихкодирование(ЭтаФорма, ПолучитьИмяРеквизита(Команда.ИспользуемаяТаблица.Имя), Команда);
	
КонецПроцедуры
&НаСервере
Функция ПолучитьИмяРеквизита(ТаблицаФормыИмя)
Возврат рарусШтрихкодирование.ПолучитьИмяРеквизита(Элементы[ТаблицаФормыИмя].ПутьКДанным);
КонецФункции 
// -- rarus yukuzi 25.02.2021
#КонецОбласти
