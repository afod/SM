#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	УстановитьУсловноеОформление();

	УстановитьСвойстваЭлементов(ЭтотОбъект);
	
	НастроитьДоступностьРеквизитовФормы(ЭтотОбъект);

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	Если Объект.Статус <> Перечисления.vftСтатусыДокументовСообщений.Черновик Тогда
		ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	КонецЕсли;

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
		
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	Если Объект.Статус <> Перечисления.vftСтатусыДокументовСообщений.Черновик Тогда
		ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	КонецЕсли;
	
	СобытияФорм.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
			
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтправитьВБереговоеПодразделение(Команда)
				
	Статус = ПредопределенноеЗначение("Перечисление.vftСтатусыДокументовСообщений.Отправлен");
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Статус", Статус); 
	
	ТекстВопроса = "Документ будет зарегистрирован к отправке в береговую систему. Продолжить?";
	
	ОписаниеОповещения = Новый ОписаниеОповещения("УстановитьСтатусСогласованияЗавершение", ЭтотОбъект, СтруктураПараметров);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда) Экспорт
	
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды() Экспорт
	
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
    ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ПриИзмененииРеквизитов

&НаКлиенте
Процедура МесяцОбзораНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("ПредставлениеПериодаНачалоВыбораЗавершение", ЭтотОбъект);
	ПараметрыФормы = Новый Структура("НачалоПериода, КонецПериода, Периодичность", 
	Объект.ДатаНачала, Объект.ДатаОкончания, Объект.Периодичность);
	
	ОткрытьФорму("Документ.рарусОтчетСУБ.Форма.ВыборПериода",
	ПараметрыФормы, ЭтаФорма,,,, Оповещение);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСвойстваЭлементов(Форма)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;

	МассивЭлементов = Новый Массив();
	
	ОтметкаНезаполненного = Истина;
	
	Если Объект.Статус = ПредопределенноеЗначение("Перечисление.vftСтатусыДокументовСообщений.Черновик") Тогда
				
		ОтметкаНезаполненного =  Ложь;
		
		МассивЭлементов.Добавить("Судно");
		МассивЭлементов.Добавить("ФИОКапитана");		
		МассивЭлементов.Добавить("ВыводыПоСостояниюБезопасности");	
		МассивЭлементов.Добавить("ПериодОбзора");
		МассивЭлементов.Добавить("ВыполнениеРаботПоПланГрафикам");
		МассивЭлементов.Добавить("ОтчетЗаНевыполненнуюРаботу");
			
		Для Каждого Элемент Из МассивЭлементов Цикл 
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, Элемент, "АвтоОтметкаНезаполненного", ОтметкаНезаполненного);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьДоступностьРеквизитовФормы(Форма)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	Элементы.ОтправитьВБереговоеПодразделение.Видимость = 
	                     Объект.Статус = ПредопределенноеЗначение("Перечисление.vftСтатусыДокументовСообщений.Черновик");
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаКлиенте
Процедура ПредставлениеПериодаНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		Объект.ДатаНачала = Результат.НачалоПериода;
		Объект.ДатаОкончания = Результат.КонецПериода;
		Объект.Периодичность = Результат.Периодичность;	
		Объект.ПериодОбзора = ПолучитьПредставлениеПериода(Объект.ДатаНачала, Объект.ДатаОкончания);	
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ДатаНачала) И ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
		Объект.ЗамечаниеЗаПериод = ПолучитьКоличествоЗамечанийЗаПериод(Объект.ДатаНачала, Объект.ДатаОкончания); 
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПредставлениеПериода(НачалоПериода, КонецПериода) Экспорт

	Если ЗначениеЗаполнено(НачалоПериода) И ЗначениеЗаполнено(КонецПериода) Тогда
		Возврат ПредставлениеПериода(НачалоПериода, КонецДня(КонецПериода), "ФП=Истина");
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКоличествоЗамечанийЗаПериод(НачалоПериода, КонецПериода) 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ vftНесоответствия.Ссылка) КАК КоличествоЗамечаний
	|ИЗ
	|	Справочник.vftНесоответствия КАК vftНесоответствия
	|ГДЕ
	|	vftНесоответствия.Статус <> ЗНАЧЕНИЕ(Перечисление.vftСтатусыДокументовСообщений.Черновик)
	|	И vftНесоответствия.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И НЕ vftНесоответствия.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоПериода);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецПериода);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		КоличествоЗамечаний = 0;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		КоличествоЗамечаний = Выборка.КоличествоЗамечаний;
	КонецЕсли;
	
	Возврат КоличествоЗамечаний;
	
КонецФункции

&НаКлиенте
Процедура УстановитьСтатусСогласованияЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		УстановитьСтатусСогласованияЗаписатьИЗакрыть(ДополнительныеПараметры);
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатусСогласованияЗаписатьИЗакрыть(ПараметрыСогласования)
		
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("РежимЗаписи", РежимЗаписиДокумента.Запись);
	
	ТекущийСтатус = Объект.Статус;
	
	Объект.Статус = ПараметрыСогласования.Статус;
	
	Если ПроверитьЗаполнение() Тогда
		Записать(ПараметрыЗаписи);
		Закрыть();
	Иначе
		Объект.Статус = ТекущийСтатус; 
		Модифицированность = Истина;
	КонецЕсли;	

КонецПроцедуры

#КонецОбласти
