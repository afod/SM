#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	МеханизмыДокумента.Добавить("рарусИмущественныйУчет");
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка - ссылка на документ, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура - коллекция элементов:
//     * Таблица<ИмяРегистра> - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ, "Склад, Склад.Судно, Дата, ДокументОснование, ВидОперации");
	Запрос.УстановитьПараметр("Ссылка", Документ);
	Запрос.УстановитьПараметр("Склад", Реквизиты.Склад);
	Запрос.УстановитьПараметр("Судно", Реквизиты.СкладСудно);
	Запрос.УстановитьПараметр("Период", Реквизиты.Дата);
	Запрос.УстановитьПараметр("ДокументОснование", Реквизиты.ДокументОснование);
	Запрос.УстановитьПараметр("ВидОперации", Реквизиты.ВидОперации);

	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ПараметрыФОИмущественныйУчет = Новый Структура("Период, Судно", НачалоДня(Реквизиты.Дата), Реквизиты.СкладСудно);
	Если рарусИмущественныйУчетСервер.ИспользоватьИмущественныйУчет(ПараметрыФОИмущественныйУчет) Тогда
		ТекстЗапросаТаблицаОтражениеДвиженийрарусИмуществоНаСудах(Запрос, ТекстыЗапроса, Регистры);	
		ТекстЗапросаТаблицаОтражениеДвиженийрарусТоварыКОтгрузке(Запрос, ТекстыЗапроса, Регистры);	
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	
	Возврат ПроведениеДокументов.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса);
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	//ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
КонецПроцедуры

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Функция ТекстЗапросаТаблицаОтражениеДвиженийрарусИмуществоНаСудах(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "рарусИмуществоНаСудах";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	&Период КАК Период,
		|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
		|	ВЫБОР
		|		КОГДА &ВидОперации = ЗНАЧЕНИЕ(Перечисление.рарусВидыОперацийРасходаТМЦ.ИзВыданного)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.рарусСтатусыИмуществаНаСудне.ВыданоВПользование)
		|		КОГДА &ВидОперации = ЗНАЧЕНИЕ(Перечисление.рарусВидыОперацийРасходаТМЦ.БУ)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.рарусСтатусыИмуществаНаСудне.ОприходованоБУ)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.рарусСтатусыИмуществаНаСудне.НаСкладе)
		|	КОНЕЦ КАК Статус,
		|	&Склад КАК Склад,
		|	ТаблицаТоваров.Количество КАК Количество,
		|	ТаблицаТоваров.Ссылка.рарусКодСинхронизации КАК КодСинхронизации,
		|	&ДокументОснование КАК Распоряжение
		|ИЗ
		|	Документ.рарусРасходТМЦ.ТМЦ КАК ТаблицаТоваров
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК спрНоменклатура
		|		ПО (ТаблицаТоваров.Ссылка = &Ссылка)
		|			И ТаблицаТоваров.Номенклатура = спрНоменклатура.Ссылка
		|			И (спрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар))
		// ++ rarus makole 2021-07-26 [Задача № 29841]
		//|			И (спрНоменклатура.ЭтоТопливо = ЛОЖЬ)";
		|			И (спрНоменклатура.ЭтоТопливо = ЛОЖЬ
		|				И спрНоменклатура.ВидНоменклатуры.ЭтоТопливо = ЛОЖЬ)";
		// -- rarus makole 2021-07-26
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаОтражениеДвиженийрарусИмуществоНаСудах

Функция ТекстЗапросаТаблицаОтражениеДвиженийрарусТоварыКОтгрузке(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "рарусТоварыКОтгрузке";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	&Период КАК Период,
		|	&Судно КАК Судно,
		|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
		|	&ДокументОснование КАК Распоряжение,
		|	ТаблицаТоваров.КодСтроки КАК КодСтроки,
		|	ТаблицаТоваров.Количество КАК Количество
		|ИЗ
		|	Документ.рарусРасходТМЦ.ТМЦ КАК ТаблицаТоваров
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК спрНоменклатура
		|		ПО (ТаблицаТоваров.Ссылка = &Ссылка)
		|			И ТаблицаТоваров.Номенклатура = спрНоменклатура.Ссылка
		|			И (спрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар))
		// ++ rarus makole 2021-07-26 [Задача № 29841]
		//|			И (спрНоменклатура.ЭтоТопливо = ЛОЖЬ)
		|			И (спрНоменклатура.ЭтоТопливо = ЛОЖЬ
		|				И спрНоменклатура.ВидНоменклатуры.ЭтоТопливо = ЛОЖЬ)
		// -- rarus makole 2021-07-26
		|			И (ТИПЗНАЧЕНИЯ(&ДокументОснование) В(ТИП(Документ.рарусЗаказКлиента), ТИП(Документ.рарусЗаказНаПеремещение)))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаОтражениеДвиженийрарусТоварыКОтгрузке

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти

// Добавляет команду создания документа.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
		
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#КонецЕсли