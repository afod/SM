&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	// ++ rarus atyutyakin 01.03.2021  [ФТ.ИМ.02.01]
	Если Объект.Ссылка.Пустая() Тогда
		ПолучитьОстаткиНоменклатурыНаСкладе();
	КонецЕсли;
	// -- rarus atyutyakin 01.03.2021
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// ++ rarus atyutyakin 01.03.2021  [ФТ.ИМ.02.01]
	ПолучитьОстаткиНоменклатурыНаСкладе();
	// -- rarus atyutyakin 01.03.2021
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	УстановитьВидимостьЭлементов();
	ПроверитьСообщитьВключенИмущественныйУчет();
	// ++ rarus makole 2021-03-30
	УстановитьДоступностьРедактированияИСтатусОтправки();	
	// ++ rarus makole 2021-03-30
КонецПроцедуры

// ++ rarus makole 2021-03-30
&НаКлиенте
Процедура УстановитьДоступностьРедактированияИСтатусОтправки()
	
	Если НЕ vftОбщегоНазначенияВызовСервера.ЭтоГлавныйУзел() Тогда
		ТолькоПросмотр = Не ДоступноРедактирование(Объект.Ссылка) ИЛИ НЕ Объект.СформированСМ;
		НадписьСтатус = ТекущийСтатусОтправки(Объект.Ссылка);
		Если НадписьСтатус = ПредопределенноеЗначение("Перечисление.рарусСостояниеОтправкиОбъекта.ЗарегистрированКОтправке") Тогда
			ПодключитьОбработчикОжидания("ПроверитьМодифицированность", 2, Ложь)
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДоступноРедактирование(Ссылка)
	Возврат рарусСинхронизацияССудном.ОбъектМожноРедактироватьПоСтатусуОтправки(Ссылка);
КонецФункции

&НаСервереБезКонтекста
Функция ТекущийСтатусОтправки(Ссылка)
	Возврат РегистрыСведений.рарусСостоянияОтправкиОбъектов.ТекущийСтатусОбъекта(Ссылка);
КонецФункции

&НаКлиенте
Процедура ПроверитьМодифицированность() Экспорт
	// Пользователь может начать редактировать зарегистрированный документ, вернём его в статус "Черновик"
	// и удалим регистрацию
	Если Модифицированность Тогда
		рарусИмущественныйУчетВызовСервера.УстановитьСтатусЧерновик(Объект.Ссылка);
		НадписьСтатус = ПредопределенноеЗначение("Перечисление.рарусСостояниеОтправкиОбъекта.Черновик");
		// ++ rarus makole 2021-04-21 [Задача № 28685]
		ОповеститьОбИзменении(Объект.Ссылка);
		// -- rarus makole 2021-04-21 [Задача № 28685]
	КонецЕсли;
КонецПроцедуры
// -- rarus makole 2021-03-30

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	// ++ rarus atyutyakin 01.03.2021  [ФТ.ИМ.02.01]
	Если Объект.Ссылка.Пустая() Тогда
		ПолучитьОстаткиНоменклатурыНаСкладе();
	КонецЕсли;
	// -- rarus atyutyakin 01.03.2021
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда) Экспорт
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды() Экспорт
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// ++ rarus makole 2021-08-09 [РАIT-0023494]
// Контроль остатков ТМЦ 
&НаКлиенте
Процедура ПодобратьТовары(Команда)
	
	ПараметрыФормыЗаголовок =  НСтр("ru = 'Подбор товаров'");
	ОтборПоТипуНоменклатуры = рарусНоменклатураКлиентСервер.ОтборПоТовару();
	
	ПараметрыФормы = Новый Структура;
	
	ПараметрыФормы.Вставить("Заголовок",                                 ПараметрыФормыЗаголовок);
	ПараметрыФормы.Вставить("Дата",                                      ТекущаяДата());
	ПараметрыФормы.Вставить("Документ",                                  Объект.Ссылка);
	ПараметрыФормы.Вставить("КлючНазначенияИспользования",				 "ПростойПодборНоменклатуры");
	ПараметрыФормы.Вставить("ОтборПоТипуНоменклатуры",                   Новый ФиксированныйМассив(ОтборПоТипуНоменклатуры));
	ПараметрыФормы.Вставить("Судно",                   					 СудноПоСкладу(Объект.Склад));
	
	ОткрытьФорму("Обработка.впПодборНоменклатуры.Форма", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СудноПоСкладу(Склад)
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Склад, "Судно");
КонецФункции

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.Имяформы = "Обработка.впПодборНоменклатуры.Форма.Форма" Тогда
		
		ОбработкаВыбораПодборНаКлиенте(ВыбранноеЗначение);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораПодборНаКлиенте(ВыбранноеЗначение)
	
	ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораПодборНаСервере(АдресТоваровВХранилище)
	
	ТаблицаТоваров = ПолучитьИзВременногоХранилища(АдресТоваровВХранилище);
	
	// ++ rarus makole 2021-05-11 [ИМУЩ]
	ИспользуетсяИмущественныйУчет = рарусИмущественныйУчетСервер.ИспользоватьИмущественныйУчетДляДокумента(Объект);
	// -- rarus makole 2021-05-11 [ИМУЩ]
	Для каждого СтрокаТовара Из ТаблицаТоваров Цикл
		ОшибкаРазныеКатегории = Ложь;
		// ++ rarus makole 2021-05-11 [ИМУЩ]
		Если ИспользуетсяИмущественныйУчет
			И НЕ ПроверитьСтрокаСоответствуетВидуОперации(СтрокаТовара.Номенклатура, Объект.ВидОперации, НоменклатураДокумента(), ОшибкаРазныеКатегории) Тогда
			Если ОшибкаРазныеКатегории Тогда
				ОбщегоНазначения.СообщитьПользователю(СтрШаблон("Номенклатура %1 пропущена, т.к. в документе присутствует номенклатура другой категории", СтрокаТовара.Номенклатура));
			Иначе
				ОбщегоНазначения.СообщитьПользователю(СтрШаблон("Номенклатура %1 пропущена, т.к. не соответствует выбранному виду операции", СтрокаТовара.Номенклатура));
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		// -- rarus makole 2021-05-11 [ИМУЩ]
		
		ТекущаяСтрока = Объект.ТМЦ.Добавить();
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаТовара, "Номенклатура, Количество");
		
	КонецЦикла;
	
	ПолучитьОстаткиНоменклатурыНаСкладе();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьСтрокаСоответствуетВидуОперации(Номенклатура, ВидОперации, НоменклатураДокумента, ОшибкаРазныеКатегории)
	
	Результат = Истина;
	
	Если Не ЗначениеЗаполнено(Номенклатура) тогда
		Результат = Ложь;
	КонецЕсли;
	
	Если ВидОперации = ПредопределенноеЗначение("Перечисление.рарусВидыОперацийРасходаТМЦ.ИзВыданного")
		И НЕ НоменклатураВыдаётсяЭкипажу(Номенклатура) Тогда
		Результат = Ложь;
	ИначеЕсли ВидОперации = ПредопределенноеЗначение("Перечисление.рарусВидыОперацийРасходаТМЦ.БУ")
		И рарусИмущественныйУчетВызовСервера.ИспользуетсяКачествоТоваров()
		И ЭтоНоваяНоменклатура(Номенклатура) <> 0 Тогда
		Результат = Ложь;
	ИначеЕсли ВидОперации = ПредопределенноеЗначение("Перечисление.рарусВидыОперацийРасходаТМЦ.БУ")
		И НЕ рарусИмущественныйУчетВызовСервера.ИспользуетсяКачествоТоваров()
		И ЭтоНеСЗЧ(Номенклатура) Тогда
		Результат = Ложь;
	КонецЕсли;
	
	Если Результат И ЕстьНоменклатураДругойКатегории(НоменклатураДокумента, Номенклатура) Тогда
		Результат = Ложь;
		ОшибкаРазныеКатегории = Истина;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции
// -- rarus makole 2021-08-09 [РАIT-0023494]

&НаКлиенте
Процедура УстановитьВидимостьЭлементов()
	
	ЭтоГлавныйУзел = рарусОбщегоНазначенияВызовСервера.ГлавныйУзел() = Неопределено;
	Элементы.Организация.Видимость = ЭтоГлавныйУзел;
	Элементы.Склад.Видимость = ЭтоГлавныйУзел;
	// ++ rarus makole 2021-04-02
	Элементы.НадписьСтатус.Видимость = НЕ ЭтоГлавныйУзел;
	// -- rarus makole 2021-04-02
	
	// ++ rarus makole 2021-06-10 [РАIT-0023374]
	// Учёт номенклатуры разного качества 
	Элементы.ТМЦНоменклатураКачество.Видимость = рарусИмущественныйУчетВызовСервера.ИспользуетсяКачествоТоваров();
	// -- rarus makole 2021-06-10 [РАIT-0023374]
	
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	ПроверитьСообщитьВключенИмущественныйУчет();
	
	// ++ rarus atyutyakin 01.03.2021  [ФТ.ИМ.02.01]
	ПолучитьОстаткиНоменклатурыНаСкладе();
	// -- rarus atyutyakin 01.03.2021
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	// ++ rarus makole 2021-04-05
	ПолучитьОстаткиНоменклатурыНаСкладе();
	// -- rarus makole 2021-04-05
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИмущественныйУчетНеВключен(ДатаДок, Склад)
	
	Судно = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Склад, "Судно");
	Период = ?(ДатаДок = Дата('00010101'), НачалоДня(ТекущаяДатаСеанса()), НачалоДня(ДатаДок));
	ПараметрыФО = Новый Структура("Период, Судно", Период, Судно);
	
	Возврат Не рарусИмущественныйУчетСервер.ИспользоватьИмущественныйУчет(ПараметрыФО);
	
КонецФункции

&НаКлиенте
Процедура ПроверитьСообщитьВключенИмущественныйУчет()
	Если ЗначениеЗаполнено(Объект.Склад)
		И ИмущественныйУчетНеВключен(Объект.Дата, Объект.Склад) Тогда
		ПоказатьПредупреждение(, "Для судна выбранного склада не включен имущественный учёт. Движения сформированы не будут!",,"Внимание!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	// ++ rarus atyutyakin 01.03.2021  [ФТ.ИМ.02.01]
	ПолучитьОстаткиНоменклатурыНаСкладе();
	// -- rarus atyutyakin 01.03.2021
	
КонецПроцедуры

&НаКлиенте
Процедура ТМЦПриИзменении(Элемент)
	
	// ++ rarus atyutyakin 01.03.2021  [ФТ.ИМ.02.01]
	ПолучитьОстаткиНоменклатурыНаСкладе();
	// -- rarus atyutyakin 01.03.2021
	
КонецПроцедуры

// ++ rarus atyutyakin 01.03.2021  [ФТ.ИМ.02.01]
&НаСервере
Процедура ПолучитьОстаткиНоменклатурыНаСкладе()
	
	рарусИмущественныйУчетСервер.ОбновитьОстаткиНоменклатурыВТаблицеФормы(
		Объект, 
		Объект.ТМЦ, 
		"ОстатокНаСкладе", 
		Объект.Дата, 
		Объект.Склад);
	
КонецПроцедуры // -- rarus atyutyakin 01.03.2021

#Область ПроверкаВыбраннойНоменклатуры

// ++ rarus makole 2021-06-18
&НаКлиенте
Процедура ТМЦНоменклатураОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.рарусВидыОперацийРасходаТМЦ.ИзВыданного")
		И НЕ НоменклатураВыдаётсяЭкипажу(ВыбранноеЗначение) Тогда
		СтандартнаяОбработка = Ложь;
		ПоказатьПредупреждение(, СтрШаблон("Номенклатура %1 не может быть выбрана в документ с Видом операции ""%2""", Строка(ВыбранноеЗначение), Строка(Объект.ВидОперации)),,"Категория номенклатуры не соответствует Виду операции!");
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.рарусВидыОперацийРасходаТМЦ.БУ")
		И рарусИмущественныйУчетВызовСервера.ИспользуетсяКачествоТоваров()
		И ЭтоНоваяНоменклатура(ВыбранноеЗначение) <> 0 Тогда
		СтандартнаяОбработка = Ложь;
		ПоказатьПредупреждение(, СтрШаблон("Номенклатура %1 не может быть выбрана в документ с Видом операции ""%2""", Строка(ВыбранноеЗначение), Строка(Объект.ВидОперации)),,"Качество номенклатуры не соответствует Виду операции!");
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.рарусВидыОперацийРасходаТМЦ.БУ")
		И НЕ рарусИмущественныйУчетВызовСервера.ИспользуетсяКачествоТоваров()
		И ЭтоНеСЗЧ(ВыбранноеЗначение) Тогда
		СтандартнаяОбработка = Ложь;
		ПоказатьПредупреждение(, СтрШаблон("В документ с Видом операции ""%1"" могут быть выбраны только СЗЧ", Строка(Объект.ВидОперации)),,"Категория номенклатуры не соответствует Виду операции!");
	КонецЕсли;
	
	// ++ rarus makole 2021-07-23 [Задача № 29927]
	// Некорректный обмен расходом ТМЦ при наличии в ТЧ номенклатуры разных категорий
	Если СтандартнаяОбработка И ЕстьНоменклатураДругойКатегории(НоменклатураДокумента(), ВыбранноеЗначение) Тогда
		СтандартнаяОбработка = Ложь;
		ПоказатьПредупреждение(, "В один документ могут быть добавлены только позиции номенклатуры одной категории",,"Ввод в документ номенклатуры разных категорий");
	КонецЕсли;
	// -- rarus makole 2021-07-23
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НоменклатураВыдаётсяЭкипажу(ВыбранноеЗначение)
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВыбранноеЗначение, "Категория, Категория.ВыдаетсяЭкипажу");
	
	Если ЗначениеЗаполнено(Реквизиты.Категория) Тогда
		Возврат Реквизиты.КатегорияВыдаетсяЭкипажу;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ЭтоНоваяНоменклатура(ВыбранноеЗначение)
	
	КачествоНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыбранноеЗначение, "Качество");
	Если ЗначениеЗаполнено(КачествоНоменклатуры) Тогда
		Если КачествоНоменклатуры = Перечисления.ГрадацииКачества.Новый Тогда
			Возврат 1;
		Иначе 
			Возврат 0;
		КонецЕсли;
	Иначе
		Возврат 2;
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ЭтоНеСЗЧ(ВыбранноеЗначение)
	
	КатегорияНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыбранноеЗначение, "Категория");
	Если ЗначениеЗаполнено(КатегорияНоменклатуры)
		И КатегорияНоменклатуры = Справочники.рарусКатегорииНоменклатуры.СЗЧ Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

// ++ rarus makole 2021-07-23 [Задача № 29927]
// Некорректный обмен расходом ТМЦ при наличии в ТЧ номенклатуры разных категорий
&НаСервере
Функция НоменклатураДокумента()
	Возврат Объект.ТМЦ.Выгрузить(,"Номенклатура").ВыгрузитьКолонку("Номенклатура");
КонецФункции

&НаСервереБезКонтекста
Функция ЕстьНоменклатураДругойКатегории(МассивНоменклатурыДокумента, ВыбранноеЗначение)

	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("МассивНоменклатыруДокумента", МассивНоменклатурыДокумента);
	Запрос.УстановитьПараметр("ВыбранноеЗначение", ВыбранноеЗначение);

	Запрос.Текст = "ВЫБРАТЬ
	|	Номенклатура.Категория КАК Категория
	|ПОМЕСТИТЬ ВТ_КатегорияВыбраннойНоменклатуры
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка = &ВыбранноеЗначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура.Категория КАК Категория
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_КатегорияВыбраннойНоменклатуры КАК ВТ_КатегорияВыбраннойНоменклатуры
	|		ПО Номенклатура.Категория <> ВТ_КатегорияВыбраннойНоменклатуры.Категория
	|			И (Номенклатура.Ссылка В (&МассивНоменклатыруДокумента))";

	Результат = Запрос.Выполнить();	
	
	Возврат НЕ Результат.Пустой();
	
КонецФункции
// -- rarus makole 2021-07-23

&НаКлиенте
Процедура ВидОперацииОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если (ВыбранноеЗначение = ПредопределенноеЗначение("Перечисление.рарусВидыОперацийРасходаТМЦ.ИзВыданного")
		ИЛИ ВыбранноеЗначение = ПредопределенноеЗначение("Перечисление.рарусВидыОперацийРасходаТМЦ.БУ"))
		И рарусИмущественныйУчетВызовСервера.ИспользуетсяКачествоТоваров()
		И Объект.ТМЦ.Количество() Тогда
		СтандартнаяОбработка = Ложь;
		ОбработкаОтветаОбУдаленииИзТЧНесоответствующейНоменклатуры = Новый ОписаниеОповещения("ОбработатьОтветОбУдаленииНоменклатурыИзТЧ", ЭтаФорма, ВыбранноеЗначение);
		ПоказатьВопрос(ОбработкаОтветаОбУдаленииИзТЧНесоответствующейНоменклатуры, "Таблица не пуста. Будут удалены позиции, не соответствующие Виду операции.
																					|Продолжить?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет, "Внимание!");
	Иначе
		ПолучитьОстаткиНоменклатурыНаСкладе();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОтветОбУдаленииНоменклатурыИзТЧ(Ответ, ВыбранноеЗначение) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Объект.ВидОперации = ВыбранноеЗначение;
		УдалитьСтрокиСНесоответствующейНоменклатурой();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСтрокиСНесоответствующейНоменклатурой()
	
	НоменклатураДокумента = Объект.ТМЦ.Выгрузить(,"Номенклатура").ВыгрузитьКолонку("Номенклатура");
	
	Запрос = Новый Запрос;
	
	Если Объект.ВидОперации = Перечисления.рарусВидыОперацийРасходаТМЦ.ИзВыданного Тогда
	    // невыдаваемая экипажу номенклатура
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Номенклатура.Ссылка КАК Номенклатура
			|ИЗ
			|	Справочник.Номенклатура КАК Номенклатура
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.рарусКатегорииНоменклатуры КАК рарусКатегорииНоменклатуры
			|		ПО Номенклатура.Категория = рарусКатегорииНоменклатуры.Ссылка
			|ГДЕ
			|	ВЫБОР
			|			КОГДА рарусКатегорииНоменклатуры.Ссылка ЕСТЬ NULL
			|				ТОГДА ИСТИНА
			|			ИНАЧЕ рарусКатегорииНоменклатуры.ВыдаетсяЭкипажу = ЛОЖЬ
			|		КОНЕЦ
			|	И Номенклатура.Ссылка В(&НоменклатураДокумента)";
		
		Запрос.УстановитьПараметр("НоменклатураДокумента", НоменклатураДокумента);
		
	ИначеЕсли Объект.ВидОперации = Перечисления.рарусВидыОперацийРасходаТМЦ.БУ
		И рарусИмущественныйУчетСерверПовтИсп.ИспользуетсяКачествоТоваров() Тогда
		// новая номенклатура или с незаполненным качеством
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Номенклатура.Ссылка КАК Номенклатура
			|ИЗ
			|	Справочник.Номенклатура КАК Номенклатура
			|ГДЕ
			|	Номенклатура.Ссылка В(&НоменклатураДокумента)
			|	И (Номенклатура.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.Новый)
			|			ИЛИ Номенклатура.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.ПустаяСсылка))";
		
		Запрос.УстановитьПараметр("НоменклатураДокумента", НоменклатураДокумента);
		
	ИначеЕсли Объект.ВидОперации = Перечисления.рарусВидыОперацийРасходаТМЦ.БУ
		И НЕ рарусИмущественныйУчетСерверПовтИсп.ИспользуетсяКачествоТоваров() Тогда
		// не СЗЧ
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Номенклатура.Ссылка КАК Номенклатура
			|ИЗ
			|	Справочник.Номенклатура КАК Номенклатура
			|ГДЕ
			|	Номенклатура.Ссылка В(&НоменклатураДокумента)
			|	И Номенклатура.Категория <> ЗНАЧЕНИЕ(Справочник.рарусКатегорииНоменклатуры.СЗЧ)";
		
		Запрос.УстановитьПараметр("НоменклатураДокумента", НоменклатураДокумента);
		
	Иначе
		 Возврат;
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		МассивНоменклатурыКУдалению = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Номенклатура");
		СтрокВТЧ = Объект.ТМЦ.Количество();
		ТекущийИндекс = СтрокВТЧ - 1;
		Пока ТекущийИндекс >= 0 Цикл
			Строка = Объект.ТМЦ[ТекущийИндекс];
			Если МассивНоменклатурыКУдалению.Найти(Строка.Номенклатура) <> Неопределено Тогда
				Объект.ТМЦ.Удалить(ТекущийИндекс);
			КонецЕсли;
			ТекущийИндекс = ТекущийИндекс - 1;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры
// -- rarus makole 2021-06-18

#КонецОбласти

#Область Штрихкодирование
// ++ rarus yukuzi 25.02.2021   // ФТ.СНБ.02. Задача_Штрихкодирование
&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
 рарусШтрихкодированиеКлиент.ВыполнитьКомандуШтрихкодирование(ЭтаФорма, ПолучитьИмяРеквизита(Команда.ИспользуемаяТаблица.Имя), Команда);
	
КонецПроцедуры
&НаСервере
Функция ПолучитьИмяРеквизита(ТаблицаФормыИмя)
Возврат рарусШтрихкодирование.ПолучитьИмяРеквизита(Элементы[ТаблицаФормыИмя].ПутьКДанным);
КонецФункции 
// -- rarus yukuzi 25.02.2021
#КонецОбласти
