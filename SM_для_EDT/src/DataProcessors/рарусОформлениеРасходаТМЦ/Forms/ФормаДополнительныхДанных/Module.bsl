&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//ДатаВходящегоДокумента = ТекущаяДата();
	
	//// ++ rarus PleA 05.04.2021 [28435 ]
	//Параметры.Свойство("ВидПриходаПеремещение", ВидПриходаПеремещение);
	//// -- rarus PleA
	
	//// ++ rarus PleA 05.04.2021 [28435 ]
	//УстановитьВидимость();
	//// -- rarus PleA
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	Закрыть(ПараметрыЗакрытия());
	
КонецПроцедуры


&НаСервере
Функция ПараметрыЗакрытия()
	
	Массив = Новый Массив;
	Для Каждого Строка Из ПриложенныеФайлы Цикл
		СтруктураФайла = Новый Структура;
		СтруктураФайла.Вставить("ИмяФайла", Строка.ИмяФайла);
		СтруктураФайла.Вставить("СведенияОФайле", Строка.СведенияОФайле);
		Массив.Добавить(СтруктураФайла);
	КонецЦикла;
	
	Структура = Новый Структура();
	Структура.Вставить("ДатаВходящегоДокумента", ДатаВходящегоДокумента);
	Структура.Вставить("НомерВходящегоДокумента", НомерВходящегоДокумента);
	Структура.Вставить("Комментарий", Комментарий);
	Структура.Вставить("СведенияОФайлах", Массив);
	Структура.Вставить("ЕстьПриложенныеФайлы", Массив.Количество() > 0);
	
	Возврат Структура;
	
КонецФункции

&НаКлиенте
Процедура КонтрольЗаполненияПараметров()
	
	ПараметрыЗаполнены = Истина;
	
	//Если НЕ ЗначениеЗаполнено(ДатаВходящегоДокумента)
	//	// ++ rarus PleA 05.04.2021 [28435 ]
	//	И Не ВидПриходаПеремещение
	//	// -- rarus PleA
	//	Тогда
	//	ПараметрыЗаполнены = Ложь;
	//КонецЕсли;
	//
	//Если НЕ ЗначениеЗаполнено(НомерВходящегоДокумента) 
	//	// ++ rarus PleA 05.04.2021 [28435 ]
	//	И Не ВидПриходаПеремещение
	//	// -- rarus PleA
	//	Тогда
	//	ПараметрыЗаполнены = Ложь;
	//КонецЕсли;
	
	Если ПриложенныеФайлы.Количество() = 0 Тогда
		ПараметрыЗаполнены = Ложь;
	КонецЕсли;
	
	Элементы.ОК.Доступность = ПараметрыЗаполнены;
	
КонецПроцедуры
&НаКлиенте
Процедура НомерВходящегоДокументаПриИзменении(Элемент)
	
	КонтрольЗаполненияПараметров();
	
КонецПроцедуры
&НаКлиенте
Процедура ДатаВходящегоДокументаПриИзменении(Элемент)
	
	КонтрольЗаполненияПараметров();
	
КонецПроцедуры
&НаКлиенте
Процедура ПриложенныеФайлыИмяФайлаПриИзменении(Элемент)
	
	КонтрольЗаполненияПараметров();
	
КонецПроцедуры



&НаКлиенте
Процедура ДобавитьФайл(Команда)
	
	//ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьФайлыРасширениеПредложено", ЭтотОбъект, Параметры);
	////РаботаСФайламиСлужебныйКлиент.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(ОписаниеОповещения);	
	//ОписаниеОповещенияЗавершение = Новый ОписаниеОповещения(
	//	"ДобавитьФайлыРасширениеПредложено", ЭтотОбъект);
	//НачатьПодключениеРасширенияРаботыСФайлами(ОписаниеОповещения);
	//
	//Контекст = Новый Структура;
	//Контекст.Вставить("ОписаниеОповещенияЗавершение", ОписаниеОповещенияЗавершение);
	//Контекст.Вставить("ТекстПредложения",             "Установить расширение?");
	//Контекст.Вставить("ВозможноПродолжениеБезУстановки", Ложь);
	//
	//Оповещение = Новый ОписаниеОповещения(
	//	"НачатьПодключениеРасширенияРаботыСФайламиПриУстановкеРасширения", ФайловаяСистемаСлужебныйКлиент, Контекст);
	//НачатьПодключениеРасширенияРаботыСФайлами(Оповещение);
	
	#Если ВебКлиент Тогда	   
		ОписаниеОповещенияВеб = Новый ОписаниеОповещения("ПоместитьВыбранныеФайлыВХранилищеВебЗавершение", ЭтотОбъект);	
		НачатьПомещениеФайла(ОписаниеОповещенияВеб, , ,Истина, УникальныйИдентификатор);
	#Иначе
	 	ДобавитьФайлыРасширениеПредложено();
	#КонецЕсли 
	
КонецПроцедуры
 
// Продолжение процедуры ПоместитьВыбранныеФайлыВХранилищеВеб.
&НаКлиенте
Процедура ПоместитьВыбранныеФайлыВХранилищеВебЗавершение(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	
	АдресВременногоХранилища = Адрес;
	ИмяФайла = ВыбранноеИмяФайла;
	
	//Сообщить(СтрШаблон("%1-%2", АдресВременногоХранилища, ИмяФайла));
	//Сообщить(Результат);
	//Сообщить(ТипЗнч(Результат));
	
	СтруктураПути = ОбщегоНазначенияКлиентСервер.РазложитьПолноеИмяФайла(ВыбранноеИмяФайла);
	
	Если Не ПустаяСтрока(СтруктураПути.Расширение) Тогда
		Расширение = ОбщегоНазначенияКлиентСервер.РасширениеБезТочки(СтруктураПути.Расширение);
		ИмяБезРасширения = СтруктураПути.ИмяБезРасширения;
	Иначе
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Ошибка при помещении файла
			           |""%1""
			           |в программу.'"),
			ИмяФайла);
	КонецЕсли;
		
	ПоместитьВыбранныеФайлыВХранилищеВебЗавершениеНаСервере(АдресВременногоХранилища, ИмяФайла, Расширение);
	
	КонтрольЗаполненияПараметров();
	
КонецПроцедуры

&НаСервере
Процедура ПоместитьВыбранныеФайлыВХранилищеВебЗавершениеНаСервере(АдресВременногоХранилища, ИмяФайла, Расширение)
	
	ПутьФайл = ПолучитьИмяВременногоФайла(Расширение);
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	
	ДвоичныеДанные.Записать(ПутьФайл);
	
	Файл = Новый Файл(ПутьФайл);
	
	СведенияОФайле = РаботаСФайламиКлиентСервер.СведенияОФайле("Файл", Файл);
	СведенияОФайле.ИмяСправочникаХранилищаФайлов = "впПриходТМЦПрисоединенныеФайлы"; 
	СведенияОФайле.АдресВременногоХранилищаФайла = АдресВременногоХранилища;
	СведенияОФайле.АдресВременногоХранилищаТекста = "";
	СведенияОФайле.ИмяБезРасширения = ИмяФайла;
	
	Строка = ПриложенныеФайлы.Добавить();
	Строка.СведенияОФайле = СведенияОФайле;
	Строка.ИмяФайла = ИмяФайла;

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьФайлыРасширениеПредложено() 
	
	Перем АдресВременногоХранилища, ВыбранныйФайл, ДиалогОткрытияФайла, Описание, ОписаниеОшибки, ПомещаемыеФайлы, ПомещенныеФайлы, СведенияОФайле, Строка, Файл;
		
	АдресВременногоХранилища = "";
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	//Фильтр = НСтр("ru = 'Текст'; en = 'Text'") + "(*.txt)|*.txt";
	//ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.МножественныйВыбор = Истина;
	ДиалогОткрытияФайла.Заголовок = "Выберите файлы";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		Для Каждого ВыбранныйФайл Из ДиалогОткрытияФайла.ВыбранныеФайлы Цикл
			Попытка
				Файл = Новый Файл(ВыбранныйФайл);					
				//ДвоичныеДанные = Новый ДвоичныеДанные(ВыбранныйФайл);
				//АдресВременногоХранилища = ПоместитьВоВременноеХранилище(ДвоичныеДанные, Параметры.UID);
				
				// +
				ПомещаемыеФайлы = Новый Массив;
				Описание = Новый ОписаниеПередаваемогоФайла(Файл.ПолноеИмя, "");
				ПомещаемыеФайлы.Добавить(Описание);
				
				ПомещенныеФайлы = Новый Массив;
				
				Если НЕ ПоместитьФайлы(ПомещаемыеФайлы, ПомещенныеФайлы, , Ложь, Параметры.UID) Тогда
					ОбщегоНазначенияКлиент.СообщитьПользователю(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Ошибка при помещении файла
					|""%1""
					|в программу.'"),
					Файл.ПолноеИмя) );
					Продолжить;
				КонецЕсли;
				
				АдресВременногоХранилища = ПомещенныеФайлы[0].Хранение;				
				// -;
				
				СведенияОФайле = РаботаСФайламиКлиентСервер.СведенияОФайле("Файл", Файл);
				СведенияОФайле.ИмяСправочникаХранилищаФайлов = "впПриходТМЦПрисоединенныеФайлы"; 
				СведенияОФайле.АдресВременногоХранилищаФайла = АдресВременногоХранилища;
				СведенияОФайле.АдресВременногоХранилищаТекста = "";
				
				Строка = ПриложенныеФайлы.Добавить();
				Строка.СведенияОФайле = СведенияОФайле;
				Строка.ИмяФайла = Файл.Имя;
			Исключение
				ОписаниеОшибки = ОписаниеОшибки();
				ПоказатьПредупреждение(, ОписаниеОшибки ,,"Ошибка");
			КонецПопытки;
		КонецЦикла;
		КонтрольЗаполненияПараметров();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УдалитьФайл(Команда)
	
	ТекущиеДанные = Элементы.ПриложенныеФайлы.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ПриложенныеФайлы.Удалить(ТекущиеДанные);
		КонтрольЗаполненияПараметров();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПросмотретьФайл(Команда)
	
	ТекущиеДанные = Элементы.ПриложенныеФайлы.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(ТекущиеДанные.СведенияОФайле.АдресВременногоХранилищаФайла);
		тПуть = КаталогВременныхФайлов() + ТекущиеДанные.ИмяФайла;
		ДвоичныеДанные.Записать(тПуть);
		Попытка
			ЗапуститьПриложение(тПуть);
		Исключение
			ОписаниеОшибки = ОписаниеОшибки();
			ПоказатьПредупреждение(, ОписаниеОшибки ,,"Ошибка");
		КонецПопытки
	КонецЕсли;
	
КонецПроцедуры

//// ++ rarus PleA 05.04.2021 [28435 ]
//&НаСервере
//Процедура УстановитьВидимость();
//	
//	Элементы.НомерВходящегоДокумента.Видимость = Не ВидПриходаПеремещение;
//	Элементы.ДатаВходящегоДокумента.Видимость = Не ВидПриходаПеремещение;
//	Элементы.Комментарий.Видимость = Не ВидПриходаПеремещение;
//	Элементы.НадписьоФайлахПеремещения.Видимость = ВидПриходаПеремещение;
//	
//КонецПроцедуры
//// -- rarus PleA 


