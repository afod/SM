&НаКлиенте
Процедура Сформировать(Команда)
	
	// Проверка условий
	Если Отчет.НачДата = Дата(1,1,1) Тогда
		Оповещение = Новый ОписаниеОповещения();
		ПоказатьПредупреждение(Оповещение, "Не указана нач. дата!", 30);
		Возврат;
	ИначеЕсли Отчет.КонДата < Отчет.НачДата Тогда
		Оповещение = Новый ОписаниеОповещения();
		ПоказатьПредупреждение(Оповещение, "Конечная дата меньше начальной!", 30);
		Возврат;
	КонецЕсли;
	
	СформироватьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
	
	// Получаем данные отчета
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("НачДата"	, Отчет.НачДата);
	Запрос.УстановитьПараметр("КонДата"	, КонецДня(Отчет.КонДата));
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА рарусПрохождениеУчастковСОЛП.Участок = ЗНАЧЕНИЕ(справочник.рарусУчасткиСОЛП.РостовНаДону)
	|			ТОГДА 1
	|		КОГДА рарусПрохождениеУчастковСОЛП.Участок = ЗНАЧЕНИЕ(справочник.рарусУчасткиСОЛП.Азов)
	|			ТОГДА 2
	|		КОГДА рарусПрохождениеУчастковСОЛП.Участок = ЗНАЧЕНИЕ(справочник.рарусУчасткиСОЛП.КерчьЕникальскийКанал)
	|				И рарусПрохождениеУчастковСОЛП.ВариантПрохожденияКЕК = ЗНАЧЕНИЕ(Перечисление.рарусВариантыПрохожденияКЕК.ТСП)
	|			ТОГДА 3
	|		КОГДА рарусПрохождениеУчастковСОЛП.Участок = ЗНАЧЕНИЕ(справочник.рарусУчасткиСОЛП.КерчьЕникальскийКанал)
	|				И рарусПрохождениеУчастковСОЛП.ВариантПрохожденияКЕК = ЗНАЧЕНИЕ(Перечисление.рарусВариантыПрохожденияКЕК.КЕК)
	|			ТОГДА 4
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Район,
	|	рарусПрохождениеУчастковСОЛП.Участок.НаименованиеДляПечати + ВЫБОР
	|		КОГДА рарусПрохождениеУчастковСОЛП.Участок = ЗНАЧЕНИЕ(справочник.рарусУчасткиСОЛП.КерчьЕникальскийКанал)
	|				И рарусПрохождениеУчастковСОЛП.ВариантПрохожденияКЕК = ЗНАЧЕНИЕ(Перечисление.рарусВариантыПрохожденияКЕК.ТСП)
	|			ТОГДА "" (Таманский судоходный путь)""
	|		КОГДА рарусПрохождениеУчастковСОЛП.Участок = ЗНАЧЕНИЕ(справочник.рарусУчасткиСОЛП.КерчьЕникальскийКанал)
	|				И рарусПрохождениеУчастковСОЛП.ВариантПрохожденияКЕК = ЗНАЧЕНИЕ(Перечисление.рарусВариантыПрохожденияКЕК.КЕК)
	|			ТОГДА "" (Керчь-Еникальский канал)""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Район1,
	|	рарусПрохождениеУчастковСОЛП.Регистратор.ОбщееНаименованиеГруза КАК Груз,
	|	рарусПрохождениеУчастковСОЛП.Регистратор КАК Рейс,
	|	рарусПрохождениеУчастковСОЛП.СОЛП КАК СОЛП
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	РегистрСведений.рарусПрохождениеУчастковСОЛП КАК рарусПрохождениеУчастковСОЛП
	|ГДЕ
	|	рарусПрохождениеУчастковСОЛП.НачДата МЕЖДУ &НачДата И &КонДата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.Район КАК Район,
	|	ВТ.Район1 КАК Район1,
	|	ВТ.Груз КАК Груз,
	|	ВТ.Рейс КАК Рейс,
	|	ВТ.СОЛП КАК СОЛП
	|ИЗ
	|	ВТ КАК ВТ
	|ГДЕ
	|	ВТ.Район <> 0";
		
	// Таблица результатов отчета
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Груз");
	
	Для А = 1 по 4 Цикл
		ТЗ.Колонки.Добавить("Всего" + А,рарусОбщегоНазначенияКлиентСервер.ПолучитьОписаниеТиповЧисла(10,0));
		ТЗ.Колонки.Добавить("БСК" + А,	рарусОбщегоНазначенияКлиентСервер.ПолучитьОписаниеТиповЧисла(10,0));
		ТЗ.Колонки.Добавить("БСП" + А,	рарусОбщегоНазначенияКлиентСервер.ПолучитьОписаниеТиповЧисла(10,0));
		ТЗ.Колонки.Добавить("БСР" + А);
		ТЗ.Колонки.Добавить("ССК" + А,	рарусОбщегоНазначенияКлиентСервер.ПолучитьОписаниеТиповЧисла(10,0));
		ТЗ.Колонки.Добавить("ССП" + А,	рарусОбщегоНазначенияКлиентСервер.ПолучитьОписаниеТиповЧисла(10,0));
		ТЗ.Колонки.Добавить("ССР" + А);
	КонецЦикла;
	
	// Заполняем ТЗ
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		// Находим строку груза
		СтрТЗ = ТЗ.Найти(Выборка.Груз,"Груз");
		Если СтрТЗ = Неопределено Тогда
			СтрТЗ = ТЗ.Добавить();
			СтрТЗ.Груз = Выборка.Груз;
			Для А = 1 по 4 Цикл
				СтрТЗ["БСР" + А] = Новый СписокЗначений;
				СтрТЗ["ССР" + А] = Новый СписокЗначений;
			КонецЦикла;
		КонецЕсли;
		
		// Всего
		Поле = "Всего" + Выборка.Район;
		СтрТЗ[Поле] = СтрТЗ[Поле] + 1;
		
		// Количество
		Поле = ?(Выборка.СОЛП,"ССК","БСК") + Выборка.Район;
		СтрТЗ[Поле] = СтрТЗ[Поле] + 1;
		
		// Рейсы
		Список = СтрТЗ[?(Выборка.СОЛП,"ССР","БСР") + Выборка.Район];
		Если Список.НайтиПоЗначению(Выборка.Рейс) = Неопределено Тогда
			Список.Добавить(Выборка.Рейс,"" + Выборка.Рейс.Судно + ", рейс № " + Выборка.Рейс.Номер + " от " + Формат(Выборка.Рейс.Дата,"ДФ = dd.MM.yyyy"));
		КонецЕсли;
	КонецЦикла;
	
	// Пересчет ТЗ
	ТЗ.Сортировать("Груз");
	
	Для Каждого СтрТЗ из ТЗ Цикл
		Для А = 1 по 4 Цикл
			СтрТЗ["БСР" + А].СортироватьПоПредставлению();
			СтрТЗ["ССР" + А].СортироватьПоПредставлению();
			
			Если СтрТЗ["Всего" + А] > 0 Тогда
				СтрТЗ["БСП" + А] = СтрТЗ["БСК" + А]/СтрТЗ["Всего" + А]*100;
				СтрТЗ["ССП" + А] = 100-СтрТЗ["БСП" + А];
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// Выводим шапку отчета
	// Подготовка поля табличного документа
	мОтчет	= РеквизитФормыВЗначение("Отчет");
	Макет	= мОтчет.ПолучитьМакет("Макет"); 
	Таб.Очистить();
	
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Период = ПредставлениеПериода(Отчет.НачДата,КонецДня(Отчет.КонДата),"ФП = Истина");
	Таб.Вывести(Область);
	
	// Выводим строки отчета
	//----------------------
	Для Каждого СтрТЗ из ТЗ Цикл
		Область = Макет.ПолучитьОбласть("Строка");
		Область.Параметры.Заполнить(СтрТЗ);
		
		Область.Параметры.БСП1 = ?(СтрТЗ.БСП1 = 0, "", Формат(СтрТЗ.БСП1, "") + "%");
		Область.Параметры.БСП2 = ?(СтрТЗ.БСП2 = 0, "", Формат(СтрТЗ.БСП2, "") + "%");
		Область.Параметры.БСП3 = ?(СтрТЗ.БСП3 = 0, "", Формат(СтрТЗ.БСП3, "") + "%");
		Область.Параметры.БСП4 = ?(СтрТЗ.БСП4 = 0, "", Формат(СтрТЗ.БСП4, "") + "%");
		
		Область.Параметры.ССП1 = ?(СтрТЗ.ССП1 = 0, "", Формат(СтрТЗ.ССП1, "") + "%");
		Область.Параметры.ССП2 = ?(СтрТЗ.ССП2 = 0, "", Формат(СтрТЗ.ССП2, "") + "%");
		Область.Параметры.ССП3 = ?(СтрТЗ.ССП3 = 0, "", Формат(СтрТЗ.ССП3, "") + "%");
		Область.Параметры.ССП4 = ?(СтрТЗ.ССП4 = 0, "", Формат(СтрТЗ.ССП4, "") + "%");
		Таб.Вывести(Область);
	КонецЦикла;
		
	Таб.АвтоМасштаб				= Истина;
	Таб.ОриентацияСтраницы		= ОриентацияСтраницы.Портрет;
	Таб.ОтображатьСетку			= Ложь;
	Таб.ОтображатьЗаголовки		= Ложь;
	Таб.ТолькоПросмотр			= Истина;
	Таб.ОтображатьГруппировки	= Ложь;
	
	ЭтаФорма.ТекущийЭлемент = Элементы.Таб;

КонецПроцедуры

&НаКлиенте
Процедура ВыбПериод(Команда)
	
	Диалог = Новый ДиалогРедактированияСтандартногоПериода();
	Диалог.Период = Новый СтандартныйПериод(Отчет.НачДата, ?(Отчет.КонДата = Дата(1,1,1), Отчет.КонДата, КонецДня(Отчет.КонДата)));
	Диалог.Показать(Новый ОписаниеОповещения("ВыборПериодаЗавершение", ЭтотОбъект, Новый Структура("Диалог", Диалог)));
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборПериодаЗавершение(Период, ДополнительныеПараметры) Экспорт
	
	Диалог = ДополнительныеПараметры.Диалог;
	
	Если Период <> Неопределено Тогда 
		Отчет.НачДата = Период.ДатаНачала;
		Отчет.КонДата = Период.ДатаОкончания;		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Отчет.НачДата = Дата(1,1,1) Тогда
		Отчет.НачДата = НачалоГода(ТекущаяДата());
		Отчет.КонДата = КонецГода(Отчет.НачДата);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТабОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Если ТипЗнч(Расшифровка) = Тип("СписокЗначений") Тогда
		СтандартнаяОбработка = Ложь;
		Оповещение = новый ОписаниеОповещения("ВыборРейсаЗавершение", ЭтотОбъект);
		ПоказатьВыборИзСписка(Оповещение, Расшифровка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборРейсаЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
			ПоказатьЗначение(, Результат.Значение);
	КонецЕсли;
	
КонецПроцедуры
