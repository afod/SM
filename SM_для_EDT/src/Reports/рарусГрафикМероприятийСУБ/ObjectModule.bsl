#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область Перемнные	
	
Перем СоответствиеОбластей;	

Перем ТаблицаСтрок;
	
#КонецОбласти
		
#Область СлужебныйПрограммныйИнтерфейс

// Для общей формы "Форма отчета" подсистемы "Варианты отчетов".
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	Настройки.События.ПриСозданииНаСервере = Истина;
	Настройки.События.ПриЗагрузкеПользовательскихНастроекНаСервере = Истина;
КонецПроцедуры

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   Форма - УправляемаяФорма - Форма отчета.
//   Отказ - Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Передается из параметров обработчика "как есть".
//
// См. также:
//   "УправляемаяФорма.ПриСозданииНаСервере" в синтакс-помощнике.
//
Процедура ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

// Вызывается в одноименном обработчике формы отчета после выполнения кода формы.
//
// Подробнее - см. ОтчетыПереопределяемый.ПриЗагрузкеПользовательскихНастроекНаСервере.
//
Процедура ПриЗагрузкеПользовательскихНастроекНаСервере(ЭтаФорма, НовыеПользовательскиеНастройкиКД) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТабличныйДокументРезультат = СформироватьОтчет();
	
	ДокументРезультат.АвтоМасштаб = Истина;
	ДокументРезультат.Вывести(ТабличныйДокументРезультат);
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СформироватьОтчет()
	
	НастройкиОтчета = ЭтотОбъект.КомпоновщикНастроек.ПолучитьНастройки();
	
	ТабличныйДокументРезультат = Новый ТабличныйДокумент;
	
	ТаблицаДанные = Новый ТаблицаЗначений;
	
	СписокТиповОбъектПроверки = Новый Массив;
	СписокТиповОбъектПроверки.Добавить("СправочникСсылка.СтруктураПредприятия");
	СписокТиповОбъектПроверки.Добавить("СправочникСсылка.Организации");
	СписокТиповОбъектПроверки.Добавить("СправочникСсылка.рарусСуда");	
	
	СписокТиповФиоИнспектора =  Новый Массив;
	СписокТиповОбъектПроверки.Добавить("СправочникСсылка.ФизическиеЛица");
	СписокТиповОбъектПроверки.Добавить("Строка");
	
	СписокТиповПериод = Новый Массив;
	СписокТиповПериод.Добавить("Дата");
	
	ТаблицаДанные.Колонки.Добавить("ОбъектПроверки",           Новый ОписаниеТипов(СписокТиповОбъектПроверки));
	ТаблицаДанные.Колонки.Добавить("ВидМероприятия",           Новый ОписаниеТипов("СправочникСсылка.рарусВидыМероприятийСУБ"));
	ТаблицаДанные.Колонки.Добавить("ОбозначениеПланГрафик",    Новый ОписаниеТипов("Строка"));
	ТаблицаДанные.Колонки.Добавить("ЦветПланГрафик" ,          Новый ОписаниеТипов("Строка"));
	ТаблицаДанные.Колонки.Добавить("ПериодС" ,                 Новый ОписаниеТипов(СписокТиповПериод));
	ТаблицаДанные.Колонки.Добавить("ПериодПо",                 Новый ОписаниеТипов(СписокТиповПериод));
	ТаблицаДанные.Колонки.Добавить("КомментарийТч",            Новый ОписаниеТипов("Строка"));
	ТаблицаДанные.Колонки.Добавить("Мероприятие",              Новый ОписаниеТипов("ДокументСсылка.рарусМероприятиеСУБ"));
	ТаблицаДанные.Колонки.Добавить("ДатаИнспекции",            Новый ОписаниеТипов(СписокТиповПериод));                 
	ТаблицаДанные.Колонки.Добавить("МестоПроведения",          Новый ОписаниеТипов("Строка"));
	ТаблицаДанные.Колонки.Добавить("ЦветМероприятий",          Новый ОписаниеТипов("Строка"));
	ТаблицаДанные.Колонки.Добавить("ФиоИнспектора",            Новый ОписаниеТипов("Строка"));
	ТаблицаДанные.Колонки.Добавить("ПредставлениеМероприятия", Новый ОписаниеТипов("Строка"));
	ТаблицаДанные.Колонки.Добавить("Учение",                   Новый ОписаниеТипов("ДокументСсылка.рарусУчение"));
	ТаблицаДанные.Колонки.Добавить("ПредставлениеУчения",      Новый ОписаниеТипов("Строка"));
	ТаблицаДанные.Колонки.Добавить("ДатаУчения",               Новый ОписаниеТипов(СписокТиповПериод));
	ТаблицаДанные.Колонки.Добавить("МестоУчения",              Новый ОписаниеТипов("Строка"));
	ТаблицаДанные.Колонки.Добавить("ЦветУчения",               Новый ОписаниеТипов("Строка"));
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;	
	//////
	ТекстЗапроса = СхемаКомпоновкиДанных.НаборыДанных.ОсновнойНаборДанных.Запрос;
	
	ПараметрДатаОтчета = ПолучитьПараметр(КомпоновщикНастроек, "ГруппаСудов");
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
	 "&УсловиеОтбора", 
	  ДоработатьТекстЗапроса(ПараметрДатаОтчета.Значение, ПараметрДатаОтчета.Использование));
	  	
	СхемаКомпоновкиДанных.НаборыДанных.ОсновнойНаборДанных.Запрос = ТекстЗапроса;	
	/////
	МакетКомпоновки = КомпоновщикМакета.Выполнить(ЭтотОбъект.СхемаКомпоновкиДанных, НастройкиОтчета,,, Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	// Создадим и инициализируем процессор компоновки
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , , Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(ТаблицаДанные);
	
	// Обозначим начало вывода
	ПроцессорВывода.Вывести(ПроцессорКомпоновки, Истина);
	
	Макет =  ПолучитьМакет("ОсновнойМакет");
	
	ШапкаСудно                            = Макет.ПолучитьОбласть("Шапка|Судно");
	ШапкаПериод                           = Макет.ПолучитьОбласть("Шапка|МесяцN");
	ШапкаДокумента                        = Макет.ПолучитьОбласть("Шапка");
	СтрокаТаблицы                         = Макет.ПолучитьОбласть("СтрокаТЧ");		
	ОбластьСтрокаТаблицыБезЦвета          = Макет.ПолучитьОбласть("СтрокаТЧ|МесяцN");	
	ОбластьСудноБезЦвета                  = Макет.ПолучитьОбласть("СтрокаТЧ|Судно");
	
	ТабличныйДокументРезультат.Вывести(ШапкаСудно);
	
	ПараметрыОтчета =  МакетКомпоновки.ЗначенияПараметров;
	
	НачалоПериода   =  ПараметрыОтчета.НачалоПериода.Значение;
	КонецПериода    =  ПараметрыОтчета.КонецПериода.Значение;
	
	ГодНачало = Год(НачалоПериода); 
	ГодКонец  = Год(КонецПериода); 
	
	ИнМн =  Месяц(НачалоПериода);
	Период = НачалоПериода;
		
	ГодНачало = Год(НачалоПериода); 
	ГодКонец  = Год(КонецПериода); 
	
	ИнМн =  Месяц(НачалоПериода);
	Период = НачалоПериода;
	
	Если ГодНачало =  ГодКонец Тогда
		ФормироватьПо = Месяц(КонецПериода);
	ИначеЕсли ГодНачало < ГодКонец Тогда
		
		ЛетМеждуДатами = ГодКонец - ГодНачало;
		
		//ЛетМеждуДатами = ЛетМеждуДатами + 1;
		
		РезультатВМесяцах = (ЛетМеждуДатами * 12) - Месяц(НачалоПериода) + Месяц(КонецПериода);		
		
		ФормироватьПо = РезультатВМесяцах + ИнМн;
		
	КонецЕсли;
	
	Для Ин = ИнМн По ФормироватьПо Цикл
		
		Если Ин = ИнМн Тогда
			Период =  Период;		
		ИначеЕсли Ин > 1 Тогда
			Период = ДобавитьМесяц(Период, 1);
		КонецЕсли;
		
		ШапкаПериод.Параметры.Период = Формат(Период, "ДФ='MMMM yyyy'"); 		
		ТабличныйДокументРезультат.Присоединить(ШапкаПериод);
		
	КонецЦикла;
	
	ОбъектыПроверки = ТаблицаДанные.Скопировать();
	
	ОбъектыПроверки.Свернуть("ОбъектПроверки");
	
	ПодготовленнаяТаблицаДанных = Новый ТаблицаЗначений;
	ПодготовленнаяТаблицаДанных.Колонки.Добавить("ОбъектПроверки");
	ПодготовленнаяТаблицаДанных.Колонки.Добавить("ВидМероприятия");
	ПодготовленнаяТаблицаДанных.Колонки.Добавить("ПериодС");
	ПодготовленнаяТаблицаДанных.Колонки.Добавить("ПериодПо");
	ПодготовленнаяТаблицаДанных.Колонки.Добавить("Шрифт");
	ПодготовленнаяТаблицаДанных.Колонки.Добавить("Расшифровка");
	ПодготовленнаяТаблицаДанных.Колонки.Добавить("СодержаниеЯчейки");
	ПодготовленнаяТаблицаДанных.Колонки.Добавить("ЦветСтроки");
	
	Для Каждого СтрокаОбъектПроверки Из ОбъектыПроверки Цикл
		
		ОбластьСудноБезЦвета.Параметры.Судно = СтрокаОбъектПроверки.ОбъектПроверки;
		ТабличныйДокументРезультат.Вывести(ОбластьСудноБезЦвета);
		
		ДанныеПоОбъекту = ТаблицаДанные.НайтиСтроки(Новый Структура("ОбъектПроверки", СтрокаОбъектПроверки.ОбъектПроверки));
		
		ПодготовленнаяТаблицаДанных.Очистить();
		
		Для Инд = 0 По ДанныеПоОбъекту.ВГраница() Цикл
			
			ЭлМассива = ДанныеПоОбъекту[Инд];
			
			НоваяСтрокаТаблицы = ПодготовленнаяТаблицаДанных.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, ЭлМассива); 
			
			Если Не Год(ЭлМассива.ПериодС) =  ГодНачало Тогда
				
				Если Год(ЭлМассива.ПериодС) > ГодНачало Тогда
					МножительМесяцев = (Год(ЭлМассива.ПериодС) - ГодНачало)  * 12;
				Иначе 
					МножительМесяцев = (ГодНачало -  Год(ЭлМассива.ПериодС)) * 12;
				КонецЕсли;
				
				НоваяСтрокаТаблицы.ПериодС  = Месяц(ЭлМассива.ПериодС) + МножительМесяцев ;
				НоваяСтрокаТаблицы.ПериодПо = Месяц(ЭлМассива.ПериодПо) + МножительМесяцев ;
				
			Иначе		
				
				НоваяСтрокаТаблицы.ПериодС  = Месяц(ЭлМассива.ПериодС);
				НоваяСтрокаТаблицы.ПериодПо = Месяц(ЭлМассива.ПериодПо);
				
			КонецЕсли;
			
			ЭтоУчение = Ложь;					
			Если ЭлМассива.ВидМероприятия.ТипМероприятия = Перечисления.рарусТипыМероприятия.Учение Тогда
				ЭтоУчение = Истина;
			КонецЕсли;
			
			Если ЭлМассива.ДатаУчения <> Дата(1,1,1) Или ЭлМассива.ДатаИнспекции <> Дата(1,1,1) Тогда
				
				Если Не Год(ЭлМассива.ПериодС) =  ГодНачало Тогда
					
					Если Год(ЭлМассива.ПериодС) > ГодНачало Тогда
						МножительМесяцев = (Год(ЭлМассива.ПериодС) - ГодНачало)  * 12;
					Иначе 
						МножительМесяцев = (ГодНачало -  Год(ЭлМассива.ПериодС)) * 12;
					КонецЕсли;
					
					МесяцПериодС  = Месяц(ЭлМассива.ПериодС) + МножительМесяцев;
					МесяцДатаУчения = Месяц(ЭлМассива.ДатаУчения) + МножительМесяцев;	
					МесяцДатаИнспекции = Месяц(ЭлМассива.ДатаИнспекции)+ МножительМесяцев;
				Иначе
					МесяцПериодС  = Месяц(ЭлМассива.ПериодС);
					МесяцДатаУчения = Месяц(ЭлМассива.ДатаУчения);	
					МесяцДатаИнспекции = Месяц(ЭлМассива.ДатаИнспекции);
				КонецЕсли;
				Если ЭлМассива.ДатаИнспекции = Дата(1,1,1) Тогда
					МесяцДатаИнспекции = МесяцПериодС;
				КонецЕсли;
				
				Если ЭлМассива.ДатаУчения = Дата(1,1,1) Тогда
					МесяцДатаУчения	= МесяцПериодС;
				КонецЕсли;	
				
				Если МесяцПериодС <> МесяцДатаУчения Или МесяцПериодС <> МесяцДатаИнспекции Тогда
					
					Если ЗначениеЗаполнено(ЭлМассива.Учение) Тогда
						
						Если Не Год(ЭлМассива.ПериодС) =  ГодНачало Тогда
							
							Если Год(ЭлМассива.ПериодС) > ГодНачало Тогда
								МножительМесяцев = (Год(ЭлМассива.ПериодС) - ГодНачало)  * 12;
							Иначе 
								МножительМесяцев = (ГодНачало -  Год(ЭлМассива.ПериодС)) * 12;
							КонецЕсли;
							
							ПериодС  = Месяц(ЭлМассива.ДатаУчения)  + МножительМесяцев; 
							ПериодПо = Месяц(ЭлМассива.ДатаУчения) + МножительМесяцев;
						Иначе
							ПериодС  = Месяц(ЭлМассива.ДатаУчения); 
							ПериодПо = Месяц(ЭлМассива.ДатаУчения);
							
						КонецЕсли;
						
						РасшифровкаЯчейки = ЭлМассива.Учение;
						СодержаниеЯчейки = ЭлМассива.ОбозначениеПланГрафик + "; " 
						+ Строка(Формат(ЭлМассива.ДатаУчения, "ДФ=dd.MM.yy")) 
						+ "; " + ЭлМассива.КомментарийТч;
						Если ЭтоУчение Тогда				 
							СодержаниеЯчейкиНовойСтроки =  ЭлМассива.ОбозначениеПланГрафик + "; " + ЭлМассива.КомментарийТч;
						Иначе
							СодержаниеЯчейкиНовойСтроки = ЭлМассива.ОбозначениеПланГрафик
						КонецЕсли;						
						ЦветСтроки = ЭлМассива.ЦветУчения;		
					ИначеЕсли ЗначениеЗаполнено(ЭлМассива.Мероприятие) Тогда
						
						Если Не Год(ЭлМассива.ПериодС) =  ГодНачало Тогда
							
							Если Год(ЭлМассива.ПериодС) > ГодНачало Тогда
								МножительМесяцев = (Год(ЭлМассива.ПериодС) - ГодНачало)  * 12;
							Иначе 
								МножительМесяцев = (ГодНачало -  Год(ЭлМассива.ПериодС)) * 12;
							КонецЕсли;
							
							ПериодС  = Месяц(ЭлМассива.ДатаИнспекции) + МножительМесяцев;
							ПериодПо = Месяц(ЭлМассива.ДатаИнспекции) + МножительМесяцев;
						Иначе
							ПериодС  = Месяц(ЭлМассива.ДатаУчения); 
							ПериодПо = Месяц(ЭлМассива.ДатаУчения);
							
						КонецЕсли;
						
						
						РасшифровкаЯчейки = ЭлМассива.Мероприятие;
						СодержаниеЯчейки = ЭлМассива.ОбозначениеПланГрафик 
						+ "; " + Строка(Формат(ЭлМассива.ДатаИнспекции, "ДФ=dd.MM.yy"))
						+ "; " + Строка(ЭлМассива.ФиоИнспектора);
						Если ЭтоУчение Тогда				 
							СодержаниеЯчейкиНовойСтроки =  ЭлМассива.ОбозначениеПланГрафик + "; " + ЭлМассива.КомментарийТч;
						Иначе
							СодержаниеЯчейкиНовойСтроки = ЭлМассива.ОбозначениеПланГрафик
						КонецЕсли;						
						ЦветСтроки = ЭлМассива.ЦветМероприятий;
					КонецЕсли;
					
					ДополнительнаяСтрокаТаблицы = ПодготовленнаяТаблицаДанных.Добавить();
					ЗаполнитьЗначенияСвойств(ДополнительнаяСтрокаТаблицы, ЭлМассива);
					
					ДополнительнаяСтрокаТаблицы.ПериодС  = ПериодС;
					ДополнительнаяСтрокаТаблицы.ПериодПо = ПериодПо;
					
					ШрифтДопСтроки = Новый Шрифт("Arial", 8, Истина, , ,Ложь);		
					ШрфитОсновнойСтроки = Новый Шрифт("Arial", 8, , , ,Истина);					
					
					ДополнительнаяСтрокаТаблицы.Шрифт = ШрифтДопСтроки;
					НоваяСтрокаТаблицы.Шрифт =  ШрфитОсновнойСтроки;
					
					ДополнительнаяСтрокаТаблицы.Расшифровка = РасшифровкаЯчейки;
					ДополнительнаяСтрокаТаблицы.СодержаниеЯчейки = СодержаниеЯчейки; 
					НоваяСтрокаТаблицы.Расшифровка =  РасшифровкаЯчейки;
					НоваяСтрокаТаблицы.СодержаниеЯчейки = СодержаниеЯчейкиНовойСтроки; 
					
					ДополнительнаяСтрокаТаблицы.ЦветСтроки = ЦветСтроки; 
					НоваяСтрокаТаблицы.ЦветСтроки = ЦветСтроки;
					
				КонецЕсли;
				
			КонецЕсли;
			// Определим шрифт, если его еще не определили
			Если ПустаяСтрока(НоваяСтрокаТаблицы.Шрифт) Тогда			
				ШрфитОсновнойСтроки = Новый Шрифт("Arial",8,,,,Ложь);				
				НоваяСтрокаТаблицы.Шрифт = ШрфитОсновнойСтроки; 	
			КонецЕсли;
			// Определим содержание ячейки
			Если ПустаяСтрока(НоваяСтрокаТаблицы.СодержаниеЯчейки) Тогда
				
				Если ЗначениеЗаполнено(ЭлМассива.Учение) Тогда
					ОбозначениеПланГрафик = ЭлМассива.ОбозначениеПланГрафик + "; " 
					+ Строка(Формат(ЭлМассива.ДатаУчения, "ДФ=dd.MM.yy")) 
					+ "; " + ЭлМассива.КомментарийТч;	
				ИначеЕсли ЗначениеЗаполнено(ЭлМассива.Мероприятие) Тогда
					ОбозначениеПланГрафик = ЭлМассива.ОбозначениеПланГрафик 
					+ "; " + Строка(Формат(ЭлМассива.ДатаИнспекции, "ДФ=dd.MM.yy"))
					+ "; " + Строка(ЭлМассива.ФиоИнспектора);				
				Иначе																					  
					Если ЭтоУчение Тогда
						ОбозначениеПланГрафик = ЭлМассива.ОбозначениеПланГрафик + "; " + ЭлМассива.КомментарийТч; 
						ПодстрокаПоиска = "; ";
						АнкетированиеКлиентСервер.УдалитьПоследниеСимволыИзСтроки(ОбозначениеПланГрафик, ПодстрокаПоиска);
					Иначе	
						ОбозначениеПланГрафик = ЭлМассива.ОбозначениеПланГрафик;
					КонецЕсли;
					
				КонецЕсли;				
				НоваяСтрокаТаблицы.СодержаниеЯчейки = ОбозначениеПланГрафик; 			
			КонецЕсли;
			// Определим расшифровку, если ее еще не определили
			Если Не ЗначениеЗаполнено(НоваяСтрокаТаблицы.Расшифровка) Тогда 
				
				Если ЗначениеЗаполнено(ЭлМассива.Учение) Тогда
					РасшифровкаСтроки = ЭлМассива.Учение;
				ИначеЕсли ЗначениеЗаполнено(ЭлМассива.Мероприятие) Тогда
					РасшифровкаСтроки = ЭлМассива.Мероприятие;
				Иначе
					РасшифровкаСтроки =  ЭлМассива.ВидМероприятия;
				КонецЕсли;		
				
				НоваяСтрокаТаблицы.Расшифровка = РасшифровкаСтроки;		
			КонецЕсли;
			// Определим цвет строки, если он еще не заполнен
			Если ПустаяСтрока(НоваяСтрокаТаблицы.ЦветСтроки) Тогда
				
				Если Не ПустаяСтрока(ЭлМассива.ЦветУчения) Тогда	
					ЦветСтроки = ЭлМассива.ЦветУчения; 	
				ИначеЕсли Не ПустаяСтрока(ЭлМассива.Мероприятие) Тогда
					ЦветСтроки = ЭлМассива.ЦветМероприятий;
				Иначе
					ЦветСтроки = ЭлМассива.ЦветПланГрафик;
				КонецЕсли;	
				
				НоваяСтрокаТаблицы.ЦветСтроки = ЦветСтроки;		
			КонецЕсли;	
			
		КонецЦикла;
		
		ПодготовленнаяТаблицаДанных.Сортировать("ПериодС");
		
		// Определим порядок в таблице	
		КэшСтрока = "";	
		СтНом = 0;
		ТаблицаСтрок = Новый ТаблицаЗначений;
		ТаблицаСтрок.Колонки.Добавить("ПорядковыйНомерСтроки", Новый ОписаниеТипов("Число"));
		ТаблицаСтрок.Колонки.Добавить("ДанныеПоСтроке", Новый ОписаниеТипов("Массив"));
		
		
		//////////////Проверка на периоды///////////////
		МассиПодготовленнаяТаблицаДанных = Новый Массив;
		
		Для Каждого СТ Из ПодготовленнаяТаблицаДанных Цикл
			Если СТ.ПериодС >= ИнМн И СТ.ПериодПо <= ФормироватьПо Тогда
				МассиПодготовленнаяТаблицаДанных.Добавить(СТ);   
			КонецЕсли;	
		КонецЦикла;
		
		ПодготовленнаяТаблицаДанных = МассиПодготовленнаяТаблицаДанных;	
		
		///////////////////////////////////////////////
		
		Для Каждого СтТч Из ПодготовленнаяТаблицаДанных Цикл
			
			Если ПустаяСтрока(КэшСтрока) Тогда
				
				СтНом = СтНом + 1;
				МассивДанныСтрок = Новый Массив;
				МассивДанныСтрок.Добавить(СтТч);
				НоваяСтрокаТаблицы = ТаблицаСтрок.Добавить();
				НоваяСтрокаТаблицы.ПорядковыйНомерСтроки = СтНом;
				НоваяСтрокаТаблицы.ДанныеПоСтроке = МассивДанныСтрок;	
				
				КэшСтрока = СтТч;
				Продолжить;
				
			КонецЕсли;
			
			Если КэшСтрока.ПериодС < СтТч.ПериодС И КэшСтрока.ПериодПо <> СтТч.ПериодПо  Тогда
				
				Для Каждого СтрокаИзТабДанных Из ТаблицаСтрок Цикл
					
					МассивДанныхПоСтроке = СтрокаИзТабДанных.ДанныеПоСтроке;
					
					МаксИнд = МассивДанныхПоСтроке.Количество() - 1;
					
					ПоследняяСтрокаМассива = МассивДанныхПоСтроке[МаксИнд];
					
					// Если период не выходит за границы, тогда добавляем его в массив строки
					Если ПоследняяСтрокаМассива.ПериодС < СтТч.ПериодС И ПоследняяСтрокаМассива.ПериодПо <> СтТч.ПериодПо Тогда						  	  
						МассивДанныхПоСтроке.Добавить(СтТч);
						Прервать; 
					КонецЕсли;
					
				КонецЦикла;	
				
				КэшСтрока = СтТч;
				
			ИначеЕсли СтТч.ПериодС = КэшСтрока.ПериодС Или КэшСтрока.ПериодПо >= СтТч.ПериодС  Тогда
				
				//
				ЭлементДобавлен = Ложь;	
				
				Для Каждого СтрокаИзТабДанных Из ТаблицаСтрок Цикл
					
					МассивДанныхПоСтроке = СтрокаИзТабДанных.ДанныеПоСтроке;
					
					МаксИнд = МассивДанныхПоСтроке.Количество() - 1;
					
					ПоследняяСтрокаМассива = МассивДанныхПоСтроке[МаксИнд];
					
					// Если период не выходит за границы, тогда добавляем его в массив строки
					Если ПоследняяСтрокаМассива.ПериодС < СтТч.ПериодС И ПоследняяСтрокаМассива.ПериодПо <> СтТч.ПериодПо Тогда						  	  
						МассивДанныхПоСтроке.Добавить(СтТч);
						ЭлементДобавлен = Истина;
						Прервать; 
					КонецЕсли;
					
				КонецЦикла;	
				
				Если Не ЭлементДобавлен Тогда 
					
					СтНом = СтНом + 1;
					НоваяСтрокаТаблицы = ТаблицаСтрок.Добавить();
					МассивДанныСтрок = Новый Массив;
					МассивДанныСтрок.Добавить(СтТч);
					НоваяСтрокаТаблицы.ПорядковыйНомерСтроки = СтНом;
					НоваяСтрокаТаблицы.ДанныеПоСтроке = МассивДанныСтрок;
					
					КэшСтрока =  СтТч;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
		ДобавитьНовуюСтроку = Ложь; 
		
		Если ТаблицаСтрок.Количество() = 0 И ДанныеПоОбъекту.Количество() > 0 Тогда	
			Для Сч = 0 По ФормироватьПо Цикл
				ТабличныйДокументРезультат.Присоединить(ОбластьСтрокаТаблицыБезЦвета);
				Сч = Сч + 1;	
			КонецЦикла;
		КонецЕсли;	
		
		Для Каждого СтрокаТч Из ТаблицаСтрок Цикл
			
			ДанныеПоТекущейСтроке = СтрокаТч.ДанныеПоСтроке;
			
			КоличествоЗаполненныхЯчеек = ИнМн;
			//КоличествоЗаполненныхЯчеек = ФормироватьПо;
			ИнТекСт = 0;
			
			Для Каждого СтДанные Из ДанныеПоТекущейСтроке Цикл
				
				ИнТекСт = ИнТекСт +1;
				
				КоличествоСтрокПоМассиву = ДанныеПоТекущейСтроке.Количество();
				
				ПериодНачало = СтДанные.ПериодС;
				ПериодОкончание = СтДанные.ПериодПо;
				
				МассивРазницМесяцев = Новый Массив;
				СчетчикНачало = ПериодНачало;
				
				Пока СчетчикНачало <> ПериодОкончание + 1 Цикл 				
					МассивРазницМесяцев.Добавить(СчетчикНачало);
					СчетчикНачало = СчетчикНачало + 1;				
				КонецЦикла;
				
				Если КоличествоСтрокПоМассиву = ИнТекСт Тогда 
					КоличествоМесяцев = ФормироватьПо;								
				Иначе
					КоличествоМесяцев =  ПериодОкончание;				
				КонецЕсли;
				
				Для СчетчикМесяцев = КоличествоЗаполненныхЯчеек По КоличествоМесяцев Цикл
					
					ИнтерваБольшеМесяца = МассивРазницМесяцев.Найти(СчетчикМесяцев);
					
					Если ПериодНачало = СчетчикМесяцев Или ИнтерваБольшеМесяца <> Неопределено Тогда
						//
						Если ДобавитьНовуюСтроку Тогда					
							ТабличныйДокументРезультат.Вывести(ОбластьСтрокаТаблицыБезЦвета);	
							ДобавитьНовуюСтроку = Ложь; 
						КонецЕсли;
						//
						ИмяОбластиДляПрисоединения = ПодобратьОбластьВЗависимости(СтДанные.ЦветСтроки);						
						ОбластьДляПрисоединения = Макет.ПолучитьОбласть(ИмяОбластиДляПрисоединения);
						
						ОбластьДляПрисоединения.Параметры.МесяцN = СтДанные.СодержаниеЯчейки;
						ОбластьДляПрисоединения.ТекущаяОбласть.Шрифт = СтДанные.Шрифт;
						ОбластьДляПрисоединения.Параметры.МероприятиеСУБ = СтДанные.Расшифровка;
						
						ТабличныйДокументРезультат.Присоединить(ОбластьДляПрисоединения);
						
					ИначеЕсли ДобавитьНовуюСтроку Тогда
						
						ТабличныйДокументРезультат.Вывести(ОбластьСтрокаТаблицыБезЦвета);	
						ТабличныйДокументРезультат.Присоединить(ОбластьСтрокаТаблицыБезЦвета);
						
						ДобавитьНовуюСтроку = Ложь; 
						
					Иначе	
						
						ТабличныйДокументРезультат.Присоединить(ОбластьСтрокаТаблицыБезЦвета);	
						
					КонецЕсли;
					
					КоличествоЗаполненныхЯчеек = КоличествоЗаполненныхЯчеек + 1;
					
				КонецЦикла;			
				
			КонецЦикла;
			
			ДобавитьНовуюСтроку = Истина;
			
		КонецЦикла;
		
		// Объеденим области
		Для Строка = 5 По ТабличныйДокументРезультат.ВысотаТаблицы  Цикл
			
			Если Не ПустаяСтрока(ТабличныйДокументРезультат.Область("R"+Строка+"C1").Текст) Тогда 
				
				КешСтрокаОбласть = Строка;
				Продолжить;
			Иначе		
				ТабличныйДокументРезультат.Область("R"+КешСтрокаОбласть+"C1"+":"+"R"+Строка+"C1").Объединить();
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТабличныйДокументРезультат;
	
КонецФункции

Функция ПодобратьОбластьВЗависимости(ЦветСтроки)
	
	Если СоответствиеОбластей = Неопределено Тогда
		
		СоответствиеЦветовОбласти = Новый Соответствие;
		СоответствиеЦветовОбласти.Вставить("0, 255, 0",       "СтрокаТЧЦветЗеленый|МесяцN"); 
		СоответствиеЦветовОбласти.Вставить("0, 255, 255",     "СтрокаТЧЦветГолубой|МесяцN"); 
		СоответствиеЦветовОбласти.Вставить("250, 128, 114",   "СтрокаТЧЦветЛосось|МесяцN"); 
		СоответствиеЦветовОбласти.Вставить("255, 0, 0",       "СтрокаТЧЦветКрасный|МесяцN"); 
		СоответствиеЦветовОбласти.Вставить("204, 153, 255",   "СтрокаТЧЦветФиолетовый|МесяцN"); 
		СоответствиеЦветовОбласти.Вставить("192, 192, 192",   "СтрокаТЧЦветСерый|МесяцN"); 
		СоответствиеЦветовОбласти.Вставить("",                "СтрокаТЧЦветРасшифровка|МесяцN"); 
		
		СоответствиеОбластей =  СоответствиеЦветовОбласти;
		
	КонецЕсли;
	
	НайденнаяОбласть = СоответствиеОбластей.Получить(ЦветСтроки);
		
	Возврат НайденнаяОбласть; 
	
КонецФункции

Функция ДоработатьТекстЗапроса(ПарамтрыОтчета, Использовать)
	
	УсловиеОтбора = "Истина";
	
	Если ЗначениеЗаполнено(ПарамтрыОтчета) И Использовать Тогда
		УсловиеОтбора = " 
		|втДанныеПоПланГрафику.ОбъектПроверки В (ВЫБРАТЬ
		|vftГруппыСудовСуда.Судно КАК Судно
		| ИЗ
		|Справочник.vftГруппыСудов.Суда КАК vftГруппыСудовСуда
		|ГДЕ
		| 	vftГруппыСудовСуда.Ссылка = &ГруппаСудов)";
		
	КонецЕсли;
	
	Возврат УсловиеОтбора;
	
КонецФункции

Функция ПолучитьПараметр(ОбъектНастройки, Параметр) Экспорт
	
	ЗначениеПараметра = Неопределено;
	ПолеПараметр = ?(ТипЗнч(Параметр) = Тип("Строка"), Новый ПараметрКомпоновкиДанных(Параметр), Параметр);
	
	Если ТипЗнч(ОбъектНастройки) = Тип("НастройкиКомпоновкиДанных") Тогда
		ЗначениеПараметра = ОбъектНастройки.ПараметрыДанных.НайтиЗначениеПараметра(ПолеПараметр);
	ИначеЕсли ТипЗнч(ОбъектНастройки) = Тип("ПользовательскиеНастройкиКомпоновкиДанных") Тогда
		Для Каждого ЭлементНастройки Из ОбъектНастройки.Элементы Цикл
			Если ТипЗнч(ЭлементНастройки) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных")
			   И ЭлементНастройки.Параметр = ПолеПараметр Тогда
				ЗначениеПараметра = ЭлементНастройки;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ТипЗнч(ОбъектНастройки) = Тип("КомпоновщикНастроекКомпоновкиДанных") Тогда
		Для Каждого ЭлементНастройки Из ОбъектНастройки.ПользовательскиеНастройки.Элементы Цикл
			Если ТипЗнч(ЭлементНастройки) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных")
			   И ЭлементНастройки.Параметр = ПолеПараметр Тогда
				ЗначениеПараметра = ЭлементНастройки;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если ЗначениеПараметра = Неопределено Тогда
			ЗначениеПараметра = ОбъектНастройки.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(ПолеПараметр);
		КонецЕсли;
		Если ЗначениеПараметра = Неопределено Тогда
			ЗначениеПараметра = ОбъектНастройки.ФиксированныеНастройки.ПараметрыДанных.НайтиЗначениеПараметра(ПолеПараметр);
		КонецЕсли;
	ИначеЕсли ТипЗнч(ОбъектНастройки) = Тип("НастройкиВложенногоОбъектаКомпоновкиДанных") Тогда
		ЗначениеПараметра = ОбъектНастройки.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(ПолеПараметр);
	ИначеЕсли ТипЗнч(ОбъектНастройки) = Тип("ДанныеРасшифровкиКомпоновкиДанных") Тогда
		ЗначениеПараметра = ОбъектНастройки.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(ПолеПараметр);
	ИначеЕсли ТипЗнч(ОбъектНастройки) = Тип("КоллекцияЗначенийПараметровКомпоновкиДанных") Тогда
		ЗначениеПараметра = ОбъектНастройки.Найти(ПолеПараметр);
	ИначеЕсли ТипЗнч(ОбъектНастройки) = Тип("ОформлениеКомпоновкиДанных") Тогда
		ЗначениеПараметра = ОбъектНастройки.НайтиЗначениеПараметра(ПолеПараметр);
	КонецЕсли;
	
	Возврат ЗначениеПараметра;
	
КонецФункции

#КонецОбласти

#КонецЕсли