
Функция СформироватьТабДок(Документ) Экспорт
	
	Перем ИтогиГ;				// Итоги по груженому рейсу
	Перем ИтогиП;				// Итоги по порожнему рейсу
	Перем ИтогиС;				// Итоги по текущей строке
	Перем СписокПр;				// Список причин простоев
	Перем ПредставлениеППС;		// Общее представление причины стоянки
	Перем СчетчикСтрок;			// Счетчик строк, для объединения ячеек при выводе данных по грузам и секциям
	
	Таб = новый ТабличныйДокумент;
	
	ИтогиГ = Новый Массив(13);
	ИтогиП = Новый Массив(13);
	ИтогиС = Новый Массив(13);
	
	Для А = 3 по 12 Цикл
		ИтогиГ[А] = 0;
		ИтогиП[А] = 0;
	КонецЦикла;
	
	Судно		= Документ.Судно;
	ЭтоТолкач	= Судно.Проект.Толкач;
	// Выводим шапку
	//--------------
	Если ЭтоТолкач Тогда
		Макет = ЭтотОбъект.ПолучитьМакет("ПутевойЖурналБуксиры");
	Иначе
		Макет = ЭтотОбъект.ПолучитьМакет("ПутевойЖурнал");
	КонецЕсли;
	
	Таб.Очистить();
	Таб.ОбластьПечати			= Неопределено;
	Таб.ЧерноБелаяПечать		= Ложь;
	Таб.АвтоМасштаб				= Истина;
	Таб.ОриентацияСтраницы		= ОриентацияСтраницы.Ландшафт;
	Таб.ОтображатьСетку			= Ложь;
	Таб.ОтображатьЗаголовки		= Ложь;
	Таб.ОтображатьГруппировки	= Истина;
	Таб.ТолькоПросмотр			= Истина;
	
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	рарусПринадлежностьСуднаКБТОФСрезПоследних.БТОФ КАК БТОФ
	|ИЗ
	//|	РегистрСведений.рарусПринадлежностьСуднаКБТОФ.СрезПоследних(&Период, Судно = &Судно) КАК рарусПринадлежностьСуднаКБТОФСрезПоследних";
	|	РегистрСведений.рарусПринадлежностьСуднаКБТОФ.СрезПоследних(, Судно = &Судно) КАК рарусПринадлежностьСуднаКБТОФСрезПоследних";
	Запрос.УстановитьПараметр("Судно", Судно);
	Запрос.УстановитьПараметр("Период", новый Граница(Документ.Дата, ВидГраницы.Включая));
	Выборка = Запрос.Выполнить().Выбрать();
	БТОФ	= "";
	Если Выборка.Следующий() Тогда
		БТОФ = Выборка.БТОФ;
	КонецЕсли;
	
	МощностьДвигателя = Судно.МощностьДвигателя;
	Если НЕ ЗначениеЗаполнено(МощностьДвигателя) Тогда
		МощностьДвигателя = Судно.Проект.МощностьДвигателя;
	КонецЕсли;
	
	Область = Макет.ПолучитьОбласть("Шапка");
	// ++ rarus Чернавин Г.К 18.06.2020 № 22279
	//Область.Параметры.Номер				= Документ.Номер;
	Область.Параметры.Номер = Документы.vftРейс.НомерБезПрефикса(Документ.Номер);
	// -- rarus Чернавин Г.К 18.06.2020
	Область.Параметры.Судно				= Документ.Судно;
	Область.Параметры.НаименованиеРейса = рарусОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеНаименованияРейса(Документ);
	Область.Параметры.Дата				= Формат(Документ.Дата,"ДЛФ = DD");
	Область.Параметры.Приписка			= БТОФ;
	Область.Параметры.МощностьСудна		= МощностьДвигателя;
	Таб.Вывести(Область);
	
	// Выводим строки
	//---------------
	Для Каждого СтрП Из Документ.Пункты Цикл
		
		// Обнулим итоги по текущей строке
		//--------------------------------
		Для А = 3 по 12 Цикл
			ИтогиС[А] = 0;
		КонецЦикла;
		
		// Данные по ходовому и общему времени
		//------------------------------------
		ИтогиС[3] =  СтрП.ХодовоеВремяНаСтоянке;
		ИтогиС[4] =  СтрП.ХодовоеВремя + СтрП.ХодовоеВремяНаСтоянке;
		ИтогиС[12] = СтрП.ХодовоеВремя + СтрП.ВремяСтоянки;
		
		// К данным по прочим причинам стоянки добавляем данные реквизита "МаневрыВПункте", а также основную причину стоянки
		//------------------------------------------------------------------------------------------------------------------
		СписокПР = Документ.ПрочиеПричиныСтоянки.Выгрузить(Новый Структура("ИД",СтрП.ИД));
		
		Если СтрП.МаневрыВПункте <> 0 Тогда
			Стр = СписокПР.Добавить();
			Стр.ПричинаСтоянки = Справочники.vftТиповыеОперации.Маневры;
			Стр.Аналитика = СтрП.Аналитика;
			Стр.ВремяСтоянки = СтрП.МаневрыВПункте;
		КонецЕсли;
		
		Стр = СписокПР.Добавить();
		Стр.ПричинаСтоянки = СтрП.ПричинаСтоянки;
		Стр.ВремяСтоянки = СтрП.ВремяСтоянки - СтрП.ХодовоеВремяНаСтоянке - СписокПР.Итог("ВремяСтоянки");
		Стр.Аналитика = СтрП.Аналитика;
		
		СписокПР.Свернуть("ПричинаСтоянки,Аналитика","ВремяСтоянки");
		
		// Перебираем причины стоянки, формируем представление причины стоянки
		//--------------------------------------------------------------------
		ПредставлениеППС = "";
		
		Для Каждого Стр из СписокПР Цикл
			Если Стр.ПричинаСтоянки=Справочники.vftТиповыеОперации.ФормированиеСостава или
				 Стр.ПричинаСтоянки=Справочники.vftТиповыеОперации.Перевалка или
				 Стр.ПричинаСтоянки=Справочники.vftТиповыеОперации.Погрузка или
				 Стр.ПричинаСтоянки=Справочники.vftТиповыеОперации.Выгрузка или
				 Стр.ПричинаСтоянки=Справочники.vftТиповыеОперации.ПаузкаВыгрузка или
				 Стр.ПричинаСтоянки=Справочники.vftТиповыеОперации.ПаузкаДогрузка или
				 Стр.ПричинаСтоянки=Справочники.vftТиповыеОперации.ОжиданиеПогрузки или
				 Стр.ПричинаСтоянки=Справочники.vftТиповыеОперации.ОжиданиеВыгрузки или
				 Стр.ПричинаСтоянки=Справочники.vftТиповыеОперации.ОжиданиеПаузки или
				 Стр.ПричинаСтоянки=Справочники.vftТиповыеОперации.ОжиданиеДогрузки Тогда
				НомерКолонки=5;
			ИначеЕсли Стр.ПричинаСтоянки=Справочники.vftТиповыеОперации.Бункеровка или
					  Стр.ПричинаСтоянки=Справочники.vftТиповыеОперации.ПередачаТоплива Тогда
				НомерКолонки=6;
			ИначеЕсли Стр.ПричинаСтоянки=Справочники.vftТиповыеОперации.Маневры или 
					  Стр.ПричинаСтоянки=Справочники.vftТиповыеОперации.МаневрыНаПереходе Тогда
				НомерКолонки=7;
			ИначеЕсли Стр.ПричинаСтоянки=Справочники.vftТиповыеОперации.Ремонт Тогда
				НомерКолонки=8;
			ИначеЕсли Стр.ПричинаСтоянки=Справочники.vftТиповыеОперации.Шлюзование Тогда
				НомерКолонки=9;
			ИначеЕсли Стр.ПричинаСтоянки=Справочники.vftТиповыеОперации.МетеорологическиеПричины Тогда
				НомерКолонки=10;
			Иначе
				НомерКолонки=11;
			КонецЕсли;
			
			ИтогиС[НомерКолонки]	= ИтогиС[НомерКолонки] + Стр.ВремяСтоянки;
			
			// ++ rarus Чернавин Г.К 08.06.2020 № 22221
			Если ЗначениеЗаполнено(Стр.Аналитика) Тогда
				ТекстПричинаСтоянки = ""+Стр.ПричинаСтоянки + ", " + Стр.Аналитика;
			Иначе
				ТекстПричинаСтоянки = Стр.ПричинаСтоянки;
			КонецЕсли;
			// -- rarus Чернавин Г.К 08.06.2020
			ПредставлениеППС		= ПредставлениеППС + ?(ПустаяСтрока(ПредставлениеППС),"","; ") + ТекстПричинаСтоянки;
			
		КонецЦикла;
		
		// Заполняем строку отчета
		//------------------------
		Область = Макет.ПолучитьОбласть("Строка");
		Область.Параметры.НомерСтрокиДокумента	= "НомерСтрокиДокумента_УВ_" + Формат(СтрП.НомерСтроки,"ЧН = ; ЧГ = 0");
		Область.Параметры.Пункты				= рарусОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПункта(СтрП);
		Область.Параметры.Приход				= СтрП.Приход;
		Область.Параметры.Отход					= СтрП.Отход;
		Область.Параметры.Примечание			= СтрП.Примечание;
		Область.Параметры.ПричинаСтоянки		= ПредставлениеППС;
		
		Для А = 3 по 12 Цикл
			Область.Параметры["Время" + А]		= рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗП_Формат(ИтогиС[А]);
		КонецЦикла;
		
		Если СтрП.ГруженыйРейс Тогда
			Область.Параметры.Время4ВО = "Б";
			Для А = 3 по 12 Цикл
				ИтогиГ[А] = ИтогиГ[А] + ИтогиС[А];
			КонецЦикла;
		Иначе
			Область.Параметры.Время4ВО = "В";
			Для А = 3 по 12 Цикл
				ИтогиП[А] = ИтогиП[А] + ИтогиС[А];
			КонецЦикла;
		КонецЕсли;
		
		// Перебираем табл. часть "Баржи" для вывода данных по грузам и секциям
		//---------------------------------------------------------------------
		СчетчикСтрок = 0;
		Для Каждого СтрБ из Документ.Баржи.Выгрузить(Новый Структура("ИД",СтрП.ИД)) Цикл
			//Врем13 =  "";		// Груз
			Врем13 = СтрБ.Груз;
			Врем14 =  "";		// Вес груза
			Врем16 =  "";		// Секция
			Врем171 = "";		// Теплоход принявший
			Врем172 = "";		// Теплоход передавший
			
			// Для погрузки и маневров выводим данные о полученном грузе
			//----------------------------------------------------------
			Если СтрБ.ВесГруза<>0 Тогда
				//Врем13 = СтрБ.Груз;
				Врем14 = Формат(СтрБ.ВесГруза,"ЧН = ; ЧГ = 0");
			КонецЕсли;
			
			// Данные по баржам
			//-----------------
			Если ЭтоТолкач Тогда
				Врем16 = СтрБ.БаржаПриход;
				Если СтрП.ПричинаСтоянки = Справочники.vftТиповыеОперации.Погрузка или
					 СтрП.ПричинаСтоянки = Справочники.vftТиповыеОперации.Выгрузка или
					 СтрП.ПричинаСтоянки = Справочники.vftТиповыеОперации.Перевалка или
					 Справочники.vftТиповыеОперации.МанервыИлиОжидание(СтрП.ПричинаСтоянки) Тогда
					Врем171 = СтрБ.СудноПринявшее;
					Врем172 = СтрБ.СудноПередавшее;
				КонецЕсли;
			КонецЕсли;
			
			// Выводим данные по грузам и секциям
			//-----------------------------------
			Если ЗначениеЗаполнено(Врем13) или ЗначениеЗаполнено(Врем14) или ЗначениеЗаполнено(Врем16) Тогда
				СчетчикСтрок = СчетчикСтрок + 1;
				Область.Параметры.Груз = 					Врем13;
				Область.Параметры.ВесГруза = 				Врем14;
				Если ЭтоТолкач Тогда
					Область.Параметры.БуксируемыеСуда = 	Врем16;
					Область.Параметры.Принявший = 		Врем171;
					Область.Параметры.Передавший = 		Врем172;
				КонецЕсли;
				Таб.Вывести(Область);
			КонецЕсли;
		КонецЦикла;
		
		Если СчетчикСтрок = 0 Тогда
			// Область еще не выводилась
			//--------------------------
			Таб.Вывести(Область);
		ИначеЕсли СчетчикСтрок>1 Тогда
			// Объединим одинаковые ячейки отчета
			//-----------------------------------
			ВремКонСтр = Таб.ВысотаТаблицы;
			ВремНачСтр = Таб.ВысотаТаблицы-СчетчикСтрок + 1;
			
			Для А = 1 по 14 Цикл
				Таб.Область(ВремНачСтр,А,ВремКонСтр,А).Объединить();
			КонецЦикла;
			
			Если ЭтоТолкач Тогда
				Таб.Область(ВремНачСтр,17,ВремКонСтр,17).Объединить();
				Таб.Область(ВремНачСтр,21,ВремКонСтр,21).Объединить();
				Таб.Область(ВремНачСтр,22,ВремКонСтр,22).Объединить();
			Иначе
				Таб.Область(ВремНачСтр,17,ВремКонСтр,17).Объединить();
				Таб.Область(ВремНачСтр,18,ВремКонСтр,18).Объединить();
				Таб.Область(ВремНачСтр,19,ВремКонСтр,19).Объединить();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// Выводим итоги
	//--------------
	Область = Макет.ПолучитьОбласть("Итого");
	Область.Параметры.Пункты = "Итого за порожний рейс";
	Область.Параметры.Расстояние = Документ.РасстояниеПорожний;
	Для А = 3 по 12 Цикл
		Область.Параметры["Время" + А] = рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗП_Формат(ИтогиП[А]);
	КонецЦикла;
	Таб.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("Итого");
	Область.Параметры.Пункты = "Итого за груженый рейс";
	Область.Параметры.Расстояние = Документ.РасстояниеГруженый;
	Для А = 3 по 12 Цикл
		Область.Параметры["Время" + А] = рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗП_Формат(ИтогиГ[А]);
	КонецЦикла;
	Таб.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("Итого");
	Область.Параметры.Пункты = "Итого за круговой рейс";
	Область.Параметры.Расстояние = Документ.РасстояниеГруженый  +  Документ.РасстояниеПорожний;
	Для А = 3 по 12 Цикл
		Область.Параметры["Время" + А] = рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗП_Формат(ИтогиГ[А] + ИтогиП[А]);
	КонецЦикла;
	Таб.Вывести(Область);
	
	// Создадим группировку колонок
	//-----------------------------
	Область = Таб.Область(,Таб.ШиринаТаблицы,,Таб.ШиринаТаблицы);
	Область.Сгруппировать("Примечание",РасположениеЗаголовкаГруппировкиТабличногоДокумента.Начало);
	
	Если ЭтоТолкач Тогда
		Область = Таб.Область(,Таб.ШиринаТаблицы-4,,Таб.ШиринаТаблицы-2);
		Область.Сгруппировать("Буксируемые суда",РасположениеЗаголовкаГруппировкиТабличногоДокумента.Начало);
	КонецЕсли;
	
	Таб.ВерхнийКолонтитул.НачальнаяСтраница = 1;
	Таб.ВерхнийКолонтитул.ТекстСправа = "Стр.[&НомерСтраницы] из [&СтраницВсего]";
	Таб.ВерхнийКолонтитул.Выводить = Истина;
	
	Таб.НижнийКолонтитул.НачальнаяСтраница = 1;
	Таб.НижнийКолонтитул.ТекстСправа = "Отчет сформирован [&Дата] [&Время]";
	Таб.НижнийКолонтитул.Выводить = Истина;
	
	Возврат Таб
	
КонецФункции