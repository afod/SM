&НаКлиенте
Процедура Сформировать(Команда)
	
	// Проверка условий
	Если Отчет.НачДата = Дата(1,1,1) Тогда
		Оповещение = Новый ОписаниеОповещения();
		ПоказатьПредупреждение(Оповещение, "Не указана нач. дата!", 30);
		Возврат;
	ИначеЕсли Отчет.КонДата < Отчет.НачДата Тогда
		Оповещение = Новый ОписаниеОповещения();
		ПоказатьПредупреждение(Оповещение, "Конечная дата меньше начальной!", 30);
		Возврат;
	ИначеЕсли НЕ ЗначениеЗаполнено(Отчет.Судно) Тогда
		Оповещение = Новый ОписаниеОповещения();
		ПоказатьПредупреждение(Оповещение, "Не указано судно!", 30);
		Возврат;
	КонецЕсли;
	
	СформироватьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
	
	// Получаем данные отчета
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("НачДата"	, Отчет.НачДата);
	Запрос.УстановитьПараметр("КонДата"	, КонецДня(Отчет.КонДата));
	Запрос.УстановитьПараметр("Судно" 	, Отчет.Судно);
	Запрос.УстановитьПараметр("Капитан"	, СокрЛП(Отчет.Капитан));
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА рарусПрохождениеУчастковСОЛП.Участок = ЗНАЧЕНИЕ(справочник.рарусУчасткиСОЛП.РостовНаДону)
	|			ТОГДА 1
	|		КОГДА рарусПрохождениеУчастковСОЛП.Участок = ЗНАЧЕНИЕ(справочник.рарусУчасткиСОЛП.Азов)
	|			ТОГДА 2
	|		КОГДА рарусПрохождениеУчастковСОЛП.Участок = ЗНАЧЕНИЕ(справочник.рарусУчасткиСОЛП.КерчьЕникальскийКанал)
	|				И рарусПрохождениеУчастковСОЛП.ВариантПрохожденияКЕК = ЗНАЧЕНИЕ(Перечисление.рарусВариантыПрохожденияКЕК.ТСП)
	|			ТОГДА 3
	|		КОГДА рарусПрохождениеУчастковСОЛП.Участок = ЗНАЧЕНИЕ(справочник.рарусУчасткиСОЛП.КерчьЕникальскийКанал)
	|				И рарусПрохождениеУчастковСОЛП.ВариантПрохожденияКЕК = ЗНАЧЕНИЕ(Перечисление.рарусВариантыПрохожденияКЕК.КЕК)
	|			ТОГДА 4
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Район1,
	|	рарусПрохождениеУчастковСОЛП.Участок.НаименованиеДляПечати + ВЫБОР
	|		КОГДА рарусПрохождениеУчастковСОЛП.Участок = ЗНАЧЕНИЕ(справочник.рарусУчасткиСОЛП.КерчьЕникальскийКанал)
	|				И рарусПрохождениеУчастковСОЛП.ВариантПрохожденияКЕК = ЗНАЧЕНИЕ(Перечисление.рарусВариантыПрохожденияКЕК.ТСП)
	|			ТОГДА "" (Таманский судоходный путь)""
	|		КОГДА рарусПрохождениеУчастковСОЛП.Участок = ЗНАЧЕНИЕ(справочник.рарусУчасткиСОЛП.КерчьЕникальскийКанал)
	|				И рарусПрохождениеУчастковСОЛП.ВариантПрохожденияКЕК = ЗНАЧЕНИЕ(Перечисление.рарусВариантыПрохожденияКЕК.КЕК)
	|			ТОГДА "" (Керчь-Еникальский канал)""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Район,
	|	рарусПрохождениеУчастковСОЛП.НачДата КАК НачДата,
	|	рарусПрохождениеУчастковСОЛП.КонДата КАК КонДата,
	|	рарусПрохождениеУчастковСОЛП.СОЛП КАК СОЛП,
	|	рарусПрохождениеУчастковСОЛП.Лоцман КАК Лоцман,
	|	ВЫБОР
	|		КОГДА рарусПрохождениеУчастковСОЛП.СОЛП
	|			ТОГДА &Капитан
	|		ИНАЧЕ рарусПрохождениеУчастковСОЛП.Лоцман.Наименование
	|	КОНЕЦ КАК ЛоцманФИО,
	|	ВЫБОР
	|		КОГДА рарусПрохождениеУчастковСОЛП.СОЛП
	|			ТОГДА """"
	|		ИНАЧЕ рарусПрохождениеУчастковСОЛП.Лоцман.Владелец.Наименование
	|	КОНЕЦ КАК ЛоцманОрг
	|ИЗ
	|	РегистрСведений.рарусПрохождениеУчастковСОЛП КАК рарусПрохождениеУчастковСОЛП
	|ГДЕ
	|	рарусПрохождениеУчастковСОЛП.НачДата МЕЖДУ &НачДата И &КонДата
	|	И рарусПрохождениеУчастковСОЛП.Судно = &Судно
	|
	|УПОРЯДОЧИТЬ ПО
	|	Район1,
	|	НачДата";
		
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	// Подготовка поля табличного документа
	мОтчет	= РеквизитФормыВЗначение("Отчет");
	Макет	= мОтчет.ПолучитьМакет("Макет"); 

	Таб.Очистить();
	
	// Область подвала
	Подвал = Макет.ПолучитьОбласть("Подвал");
	Подвал.Параметры.Капитан = Отчет.Капитан;
	
	// Перебираем районы
	Счетчик		= 0;
	ТекРайон	= Неопределено;
	
	Для Каждого СтрТЗ из ТЗ Цикл
		Если ТекРайон <> СтрТЗ.Район Тогда
			Если ТекРайон <> Неопределено Тогда
				Таб.Вывести(Подвал);
				Таб.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ТекРайон	= СтрТЗ.Район;
			Счетчик		= 0;
			
			// Выводим шапку отчета
			Область = Макет.ПолучитьОбласть("Шапка");
			Область.Параметры.Судно		= Отчет.Судно;
			Область.Параметры.Район		= ТекРайон;
			Область.Параметры.Период	= "с " + Формат(Отчет.НачДата,"ДЛФ = DD") + " по " + Формат(Отчет.КонДата,"ДЛФ = DD");
			Таб.Вывести(Область);
		КонецЕсли;
		
		// Выводим строки отчета
		Счетчик = Счетчик + 1;
		
		Область = Макет.ПолучитьОбласть("Строка");
		Область.Параметры.Заполнить(СтрТЗ);
		Область.Параметры.Счетчик = Счетчик;
		Таб.Вывести(Область);
	КонецЦикла;
	
	Таб.Вывести(Подвал);
	
	Таб.АвтоМасштаб				= Истина;
	Таб.ОриентацияСтраницы		= ОриентацияСтраницы.Портрет;
	Таб.ОтображатьСетку			= Ложь;
	Таб.ОтображатьЗаголовки		= Ложь;
	Таб.ТолькоПросмотр			= Истина;
	Таб.ОтображатьГруппировки	= Ложь;
	
	ЭтаФорма.ТекущийЭлемент = Элементы.Таб;

КонецПроцедуры

&НаКлиенте
Процедура ВыбПериод(Команда)
	
	Диалог = Новый ДиалогРедактированияСтандартногоПериода();
	Диалог.Период = Новый СтандартныйПериод(Отчет.НачДата, ?(Отчет.КонДата = Дата(1,1,1), Отчет.КонДата, КонецДня(Отчет.КонДата)));
	Диалог.Показать(Новый ОписаниеОповещения("ВыборПериодаЗавершение", ЭтотОбъект, Новый Структура("Диалог", Диалог)));
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборПериодаЗавершение(Период, ДополнительныеПараметры) Экспорт
	
	Диалог = ДополнительныеПараметры.Диалог;
	
	Если Период <> Неопределено Тогда 
		Отчет.НачДата = Период.ДатаНачала;
		Отчет.КонДата = Период.ДатаОкончания;		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	Если ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда
		Отчет.Судно = vftОбщегоНазначения.ПолучитьЗначениеПоУмолчанию("ОсновноеСудно");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Отчет.НачДата = Дата(1,1,1) Тогда
		Отчет.НачДата = НачалоГода(ТекущаяДата());
		Отчет.КонДата = КонецГода(Отчет.НачДата);
	КонецЕсли;
	Отчет.Судно = vftОбщегоНазначения.ПолучитьЗначениеПоУмолчанию("ОсновноеСудно");
	Элементы.Судно.Доступность = ПланыОбмена.ГлавныйУзел() = Неопределено;
КонецПроцедуры
