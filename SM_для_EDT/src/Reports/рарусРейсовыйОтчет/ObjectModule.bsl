
Функция СформироватьТабДок(Документ) Экспорт
	
	Пункты = Документ.Пункты;
	
	// Выводим шапку
	Макет = Отчеты.рарусРейсовыйОтчет.ПолучитьМакет("РейсовыйОтчет");
	
	Таб = новый ТабличныйДокумент;
	Таб.Очистить();
	Таб.ОбластьПечати = Таб.Область(,1,,5);
	Таб.ЧерноБелаяПечать = Ложь;
	Таб.АвтоМасштаб = Истина;
	Таб.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	Таб.ОтображатьСетку = Ложь;
	Таб.ОтображатьЗаголовки = Ложь;
	Таб.ОтображатьГруппировки = Ложь;
	Таб.ТолькоПросмотр = Истина;
	
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Судно = Документ.Судно;
	Область.Параметры.НаименованиеОтчета = "Рейсовый отчет";
	Таб.Вывести(Область);
	// ++ rarus Камаев П.В. 02.10.2020 Задача № 24505
	Проект = Документ.Судно.Проект;
	// -- rarus Камаев П.В. 02.10.2020
	
	// Выводим строки рейсового отчета
	// ++ rarus Чернавин Г.К 18.06.2020	
	//Врем = Формат(Документ.Номер,"ЧН = ; ЧГ = 0") + " / " + Формат(Год(Документ.Дата),"ЧГ = 0");
	НомерДокумента = Документы.vftРейс.НомерБезПрефикса(Документ.Номер);
	Врем = Формат(НомерДокумента,"ЧН = ; ЧГ = 0") + " / " + Формат(Год(Документ.Дата),"ЧГ = 0");
	// -- rarus Чернавин Г.К 18.06.2020
	рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет,1,,Врем,"Номер рейса / год");
	
	рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет,2,,рарусОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеНаименованияРейса(Документ),"Порт выгрузки / порт погрузки / порт выгрузки");
	
	Врем = ?(Пункты.Количество() = 0,"",Формат(Пункты[0].Приход,"ДФ = 'dd.MM.yyyy / HH:mm'"));
	рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет,3,,Врем,"Дата/время выхода из порта выгрузки");
	
	Врем = рарусОтчеты.ПолучитьПредставлениеТопливо(Документ, "Н");
	рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет,4,,Врем,"Остаток на начало рейса: " + рарусОтчеты.ПолучитьПредставлениеТопливоШапка(Проект));
	
	// Груз
	Для Каждого Стр из рарусОтчеты.ПолучитьПредставлениеГрузы(Документ) Цикл
		Если Стр.ЭтоПерваяСтрока Тогда
			рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет,5,,Стр.Значение,Стр.Описание);
		Иначе
			рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет, ,,Стр.Значение,Стр.Описание);
		КонецЕсли;
	КонецЦикла;
	
	// Значения времени по рейсу
	ВремяРейса = ПолучитьЗначенияВремениПоРейсуДляРейсовогоОтчета(Документ);
	
	рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет,6,"А",рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗС_Формат(ВремяРейса.А,Истина),"Время рейса, сутки");
	рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет, ,"Б",рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗС_Формат(ВремяРейса.Б,Истина),"Ход с грузом, сутки");
	рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет, ,"В",рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗС_Формат(ВремяРейса.В,Истина),"Ход в балласте, сутки");
	рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет, ,"Г",рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗС_Формат(ВремяРейса.Г,Истина),"Всего стоянки, сутки");
	рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет, ,"Д",рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗС_Формат(ВремяРейса.ДП,Истина) + " / " + 
												 рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗС_Формат(ВремяРейса.ДВ,Истина),"Ожидание грузовых работ в порту погрузки / выгрузки");
	рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет, ,"Е",рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗС_Формат(ВремяРейса.Е,Истина),"Погрузка");
	рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет, ,"Ж",рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗС_Формат(ВремяРейса.Ж,Истина),"Выгрузка");
	рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет, ,"З",рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗС_Формат(ВремяРейса.З,Истина),"Маневры");
	рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет, ,"И",рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗС_Формат(ВремяРейса.И,Истина),"Метеостоянки");
	рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет, ,"К",рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗС_Формат(ВремяРейса.К,Истина),"Ремонт");
	рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет, ,"Л",рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗС_Формат(ВремяРейса.Л,Истина),"Бункеровка");
	рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет, ,"М",рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗС_Формат(ВремяРейса.М,Истина),"Ожидание экипажа");
	рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет, ,"Н",рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗС_Формат(ВремяРейса.Н,Истина),"Ожидание оформления прихода/отхода");
	
	// Шлюзование
	// ++ rarus Камаев П.В. 25.09.2020 Задача № 24411
	ВремяМаневровШлюзованияИтог = ВремяРейса.РасшифровкаМаневровШлюзования.Итог("ВремяСтоянки");
	Если ВремяМаневровШлюзованияИтог = 0 Тогда
		ВремяМаневровШлюзованияИтог = "";
	Иначе
		ВремяМаневровШлюзованияИтог = " / " + рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗС_Формат(ВремяМаневровШлюзованияИтог,Истина);
	КонецЕсли;
	рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет, ,"О",рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗС_Формат(ВремяРейса.О,Истина)+ВремяМаневровШлюзованияИтог,"Всего шлюзование / Маневры");
	// -- rarus Камаев П.В. 25.09.2020
	
	Для Каждого Стр из ВремяРейса.РасшифровкаШлюзования Цикл
		//Врем = СтрЗаменить("" + Стр.ПричинаСтоянки,"Шлюзование, ","") + " - " + рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗС_Формат(Стр.ВремяСтоянки,Истина);
		// ++ rarus Камаев П.В. 25.09.2020 Задача № 24411
		СтрокаМаневровШлюзования = ВремяРейса.РасшифровкаМаневровШлюзования.Найти(Стр.Аналитика, "Аналитика");
		ВремяМаневровШлюзования = "";
		Если СтрокаМаневровШлюзования <> Неопределено Тогда
			Если СтрокаМаневровШлюзования.ВремяСтоянки <> 0 Тогда
				ВремяМаневровШлюзования = " / " + рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗС_Формат(СтрокаМаневровШлюзования.ВремяСтоянки,Истина);
			КонецЕсли;
		КонецЕсли;
		Врем = "" + Стр.Аналитика + " - " + рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗС_Формат(Стр.ВремяСтоянки,Истина) + ВремяМаневровШлюзования;
		// -- rarus Камаев П.В. 25.09.2020
		
		рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет,,,Врем);
	КонецЦикла;
	
	// Питер
	рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет, ,"П",рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗС_Формат(ВремяРейса.П,Истина),"Ожидание разводки мостов в С.Петербурге, всего");
	Для Каждого Стр из ВремяРейса.РасшифровкаПитер Цикл
		Врем = "" + Формат(Стр.НачДата,"ДФ = 'dd.MM.yyyy / HH:mm'") + " / " + Стр.Пункт + " / " + рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗС_Формат(Стр.ВремяСтоянки,Истина);
		рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет,,,Врем,Символы.Таб + "(дата / время / место / суток)");
	КонецЦикла;
	
	// Ростов
	рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет, ,"Р",рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗС_Формат(ВремяРейса.Р,Истина),"Общее время нахождения в Ростове");
	Для Каждого Стр из ВремяРейса.РасшифровкаРостов Цикл
		Врем = "" + Формат(Стр.НачДата,"ДФ = 'dd.MM.yyyy / HH:mm'") + " / " + СтрЗаменить("" + Стр.ПричинаСтоянки,"Ростов, ","") + " / " + рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗС_Формат(Стр.ВремяСтоянки,Истина);
		рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет,,,Врем,Символы.Таб + "(дата / время / причина / суток)");
	КонецЦикла;
	
	// Ожидание паузки
	рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет, ,"С",рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗС_Формат(ВремяРейса.С,Истина),"Ожидание паузки, всего");
	Для Каждого Стр из ВремяРейса.РасшифровкаОжиданиеПаузки Цикл
		Врем = "" + Стр.Пункт + " / " + рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗС_Формат(Стр.ВремяСтоянки,Истина);
		рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет,,,Врем,Символы.Таб + "(место / суток)");
	КонецЦикла;
	
	// Паузка-выгрузка
	рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет, ,"Т",рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗС_Формат(ВремяРейса.Т,Истина),"Паузка, всего");
	Для Каждого Стр из ВремяРейса.РасшифровкаПаузки Цикл
		Врем = "" + Формат(Стр.Приход,"ДФ = 'dd.MM.yyyy / HH:mm'") + " - " + Формат(Стр.Отход,"ДФ = 'dd.MM.yyyy / HH:mm'") + " / " + Стр.Пункт + " / " + рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗС_Формат(Стр.ВремяСтоянки,Истина) + " / " + Стр.ВесГруза;
		рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет,,,Врем,Символы.Таб + "(время начала - время окончания / место / суток / количество отпауженного груза)");
	КонецЦикла;
	
	// Начинаем выводить прочие буквы "У" - "Я"
	КодТекБуквы = 1058;
	ТекПричинаСтоянки	= Справочники.vftТиповыеОперации.ПустаяСсылка();
	ТекАналитика		= Справочники.рарусАналитикиПростоя.ПустаяСсылка();
	
	// Паузка-догрузка
	Для Каждого Стр из ВремяРейса.РасшифровкаДогрузки Цикл
		Врем = "" + Формат(Стр.Приход,"ДФ = 'dd.MM.yyyy / HH:mm'") + " - " + Формат(Стр.Отход,"ДФ = 'dd.MM.yyyy / HH:mm'") + " / " + Стр.Пункт + " / " + рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗС_Формат(Стр.ВремяСтоянки,Истина) + " / " + Стр.ВесГруза;
		Если ТекПричинаСтоянки <> Стр.ПричинаСтоянки ИЛИ ТекАналитика <> Стр.Аналитика Тогда
			ТекПричинаСтоянки = Стр.ПричинаСтоянки;
			ТекАналитика = Стр.Аналитика;
			КодТекБуквы = Мин(1071,КодТекБуквы + 1);
			рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет,,Символ(КодТекБуквы),Врем,Символы.Таб + "(время начала - время окончания / место / суток / количество догруженного груза)");
		Иначе
			рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет,,,Врем,Символы.Таб + "(время начала - время окончания / место / суток / количество догруженного груза)");
		КонецЕсли;
	КонецЦикла;
	
	// Прочие причины
	Для Каждого Стр из ВремяРейса.РасшифровкаПрочие Цикл
		Врем = "" + Формат(Стр.НачДата,"ДФ = 'dd.MM.yyyy / HH:mm'") + " / " + Стр.ПричинаСтоянки + ?(ЗначениеЗаполнено(Стр.Аналитика), ", " + Стр.Аналитика ,"") + " / " + Стр.Пункт + " / " + рарусОбщегоНазначенияКлиентСервер.ПересчитатьВремя_ЗС_Формат(Стр.ВремяСтоянки,Истина);
		Если ТекПричинаСтоянки <> Стр.ПричинаСтоянки ИЛИ ТекАналитика <> Стр.Аналитика Тогда
			ТекПричинаСтоянки = Стр.ПричинаСтоянки;
			ТекАналитика = Стр.Аналитика;
			КодТекБуквы = Мин(1071,КодТекБуквы + 1);
			рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет,,Символ(КодТекБуквы),Врем,Символы.Таб + "(дата / время / причина / место / суток)");
		Иначе
			рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет,,,Врем,Символы.Таб + "(дата / время / причина / место / суток)");
		КонецЕсли;
	КонецЦикла;
	
	// Продолжаем выводить строки рейсового отчета
	Врем = ?(Пункты.Количество() = 0,"",Формат(Пункты[Пункты.Количество()-1].Отход,"ДФ = 'dd.MM.yyyy / HH:mm'"));
	рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет,7,,Врем,"Дата/время окончания рейса");
	
	Врем = рарусОтчеты.ПолучитьПредставлениеТопливо(Документ, "Р");
	рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет,8,,Врем,"Израсходовано топлива: " + рарусОтчеты.ПолучитьПредставлениеТопливоШапка(Проект));
	
	// Бункеровки
	Для Каждого Стр из рарусОтчеты.ПолучитьПредставлениеБункеровки(Документ) Цикл
		Если Стр.ЭтоПерваяСтрока Тогда
			рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет,9,,Стр.Значение,Стр.Описание);
		Иначе
			рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет, ,,Стр.Значение,Стр.Описание);
		КонецЕсли;
	КонецЦикла;
	
	// Продолжаем выводить строки рейсового отчета
	Врем = рарусОтчеты.ПолучитьПредставлениеТопливо(Документ, "К");
	рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет,10,,Врем,"Остаток на конец рейса: " + рарусОтчеты.ПолучитьПредставлениеТопливоШапка(Проект));
	
	// Прием / передача секций
	Для Каждого Стр из ПолучитьПредставлениеПередачаСекций(Документ) Цикл
		Если Стр.ЭтоПерваяСтрока Тогда
			рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет,11,,Стр.Значение,Стр.Описание);
		Иначе
			рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет, ,,Стр.Значение,Стр.Описание);
		КонецЕсли;
	КонецЦикла;
	
	// Буксировки
	Если Документ.Буксировки.Количество() = 0 Тогда
		рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет,12,,"НЕТ");
	Иначе
		ЭтоПерваяСтрока = Истина;
		Стр1 = "";
		Стр2 = "Наименование буксируемого судна / Пункт, дата/время начала буксировки - Пункт, дата/время окончания буксировки";
		Для Каждого Стр из Документ.Буксировки Цикл
			Стр1 = "" + Стр.БуксируемоеСудно + " / " + Стр.НачПункт + " " + Формат(Стр.НачДата,"ДФ = 'dd.MM.yyyy / HH:mm'") + " - " + Стр.КонПункт + " " + Формат(Стр.КонДата,"ДФ = 'dd.MM.yyyy / HH:mm'");
			Если ЭтоПерваяСтрока Тогда
				рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет,12,,Стр1,Стр2);
				ЭтоПерваяСтрока = Ложь;
			Иначе
				рарусОтчеты.ВывестиСтрокуРейсовогоОтчета(Таб,Макет,,,Стр1,Стр2);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Таб.ВерхнийКолонтитул.НачальнаяСтраница = 1;
	Таб.ВерхнийКолонтитул.ТекстСправа = "Стр.[&НомерСтраницы] из [&СтраницВсего]";
	Таб.ВерхнийКолонтитул.Выводить = Истина;
	
	Таб.НижнийКолонтитул.НачальнаяСтраница = 1;
	Таб.НижнийКолонтитул.ТекстСправа = "Отчет сформирован [&Дата] [&Время]";
	Таб.НижнийКолонтитул.Выводить = Истина;
	
	Возврат Таб
	
КонецФункции

Функция ПолучитьЗначенияВремениПоРейсуДляРейсовогоОтчета(Документ)
	
	//ПолучитьТЗТиповыхОперацийиАналитик()
	ТЗТиповыхОперацийиАналитик = рарусОтчеты.ПолучитьТЗТиповыхОперацийиАналитик();
	
	ВремяРейса = Новый Структура("А,Б,В,Г,ДП,ДВ,Е,Ж,З,И,К,Л,М,Н,О,П,Р,С,Т");
	Для Каждого Стр из ВремяРейса Цикл
		ВремяРейса[Стр.Ключ] = 0;
	КонецЦикла;
	
	РасшифровкаШлюзования = Новый ТаблицаЗначений;
	РасшифровкаШлюзования.Колонки.Добавить("ПричинаСтоянки", 			Новый ОписаниеТипов("СправочникСсылка.vftТиповыеОперации"));
	// ++ rarus Камаев П.В. 24.09.2020 Задача № 24409
	СписокТипов = Новый Массив;
    СписокТипов.Добавить("Строка");
    СписокТипов.Добавить("СправочникСсылка.рарусАналитикиПростоя");
	РасшифровкаШлюзования.Колонки.Добавить("Аналитика", 				Новый ОписаниеТипов(СписокТипов));
	// -- rarus Камаев П.В. 24.09.2020
	РасшифровкаШлюзования.Колонки.Добавить("ВремяСтоянки",				рарусОбщегоНазначенияКлиентСервер.ПолучитьОписаниеТиповЧисла(20,0));
	
	РасшифровкаПитер = Новый ТаблицаЗначений;
	РасшифровкаПитер.Колонки.Добавить("Пункт",					Новый ОписаниеТипов("СправочникСсылка.vftПунктыСледования"));
	РасшифровкаПитер.Колонки.Добавить("НачДата",				рарусОбщегоНазначенияКлиентСервер.ПолучитьОписаниеТиповДаты(ЧастиДаты.ДатаВремя));
	РасшифровкаПитер.Колонки.Добавить("ВремяСтоянки",			рарусОбщегоНазначенияКлиентСервер.ПолучитьОписаниеТиповЧисла(20,0));
	
	РасшифровкаРостов = Новый ТаблицаЗначений;
	РасшифровкаРостов.Колонки.Добавить("ПричинаСтоянки",		Новый ОписаниеТипов("СправочникСсылка.vftТиповыеОперации"));
	РасшифровкаРостов.Колонки.Добавить("Аналитика", 			Новый ОписаниеТипов("СправочникСсылка.рарусАналитикиПростоя"));
	РасшифровкаРостов.Колонки.Добавить("НачДата",				рарусОбщегоНазначенияКлиентСервер.ПолучитьОписаниеТиповДаты(ЧастиДаты.ДатаВремя));
	РасшифровкаРостов.Колонки.Добавить("ВремяСтоянки",			рарусОбщегоНазначенияКлиентСервер.ПолучитьОписаниеТиповЧисла(20,0));
	
	РасшифровкаОжиданиеПаузки = Новый ТаблицаЗначений;
	РасшифровкаОжиданиеПаузки.Колонки.Добавить("Пункт",			Новый ОписаниеТипов("СправочникСсылка.vftПунктыСледования"));
	РасшифровкаОжиданиеПаузки.Колонки.Добавить("ВремяСтоянки",	рарусОбщегоНазначенияКлиентСервер.ПолучитьОписаниеТиповЧисла(20,0));
	
	РасшифровкаПаузки = Новый ТаблицаЗначений;
	РасшифровкаПаузки.Колонки.Добавить("ИД");
	РасшифровкаПаузки.Колонки.Добавить("Пункт",					Новый ОписаниеТипов("СправочникСсылка.vftПунктыСледования"));
	РасшифровкаПаузки.Колонки.Добавить("Приход",				рарусОбщегоНазначенияКлиентСервер.ПолучитьОписаниеТиповДаты(ЧастиДаты.ДатаВремя));
	РасшифровкаПаузки.Колонки.Добавить("Отход",					рарусОбщегоНазначенияКлиентСервер.ПолучитьОписаниеТиповДаты(ЧастиДаты.ДатаВремя));
	РасшифровкаПаузки.Колонки.Добавить("ВремяСтоянки",			рарусОбщегоНазначенияКлиентСервер.ПолучитьОписаниеТиповЧисла(20,0));
	
	РасшифровкаДогрузки = Новый ТаблицаЗначений;
	РасшифровкаДогрузки.Колонки.Добавить("ИД");
	РасшифровкаДогрузки.Колонки.Добавить("ПричинаСтоянки",		Новый ОписаниеТипов("СправочникСсылка.vftТиповыеОперации"));
	РасшифровкаДогрузки.Колонки.Добавить("Аналитика", 			Новый ОписаниеТипов("СправочникСсылка.рарусАналитикиПростоя"));
	РасшифровкаДогрузки.Колонки.Добавить("Пункт",				Новый ОписаниеТипов("СправочникСсылка.vftПунктыСледования"));
	РасшифровкаДогрузки.Колонки.Добавить("Приход",				рарусОбщегоНазначенияКлиентСервер.ПолучитьОписаниеТиповДаты(ЧастиДаты.ДатаВремя));
	РасшифровкаДогрузки.Колонки.Добавить("Отход",				рарусОбщегоНазначенияКлиентСервер.ПолучитьОписаниеТиповДаты(ЧастиДаты.ДатаВремя));
	РасшифровкаДогрузки.Колонки.Добавить("ВремяСтоянки",		рарусОбщегоНазначенияКлиентСервер.ПолучитьОписаниеТиповЧисла(20,0));
	
	РасшифровкаПрочие = Новый ТаблицаЗначений;
	РасшифровкаПрочие.Колонки.Добавить("НачДата",				рарусОбщегоНазначенияКлиентСервер.ПолучитьОписаниеТиповДаты(ЧастиДаты.ДатаВремя));
	РасшифровкаПрочие.Колонки.Добавить("Пункт",					Новый ОписаниеТипов("СправочникСсылка.vftПунктыСледования"));
	РасшифровкаПрочие.Колонки.Добавить("ПричинаСтоянки",		Новый ОписаниеТипов("СправочникСсылка.vftТиповыеОперации"));
	РасшифровкаПрочие.Колонки.Добавить("Аналитика", 			Новый ОписаниеТипов("СправочникСсылка.рарусАналитикиПростоя"));
	РасшифровкаПрочие.Колонки.Добавить("ВремяСтоянки",			рарусОбщегоНазначенияКлиентСервер.ПолучитьОписаниеТиповЧисла(20,0));
	
	// ++ rarus Камаев П.В. 25.09.2020 Задача № 24411
	РасшифровкаМаневровШлюзования = Новый ТаблицаЗначений;
	РасшифровкаМаневровШлюзования.Колонки.Добавить("Аналитика",		новый ОписаниеТипов("Строка"));
	РасшифровкаМаневровШлюзования.Колонки.Добавить("ВремяСтоянки",	рарусОбщегоНазначенияКлиентСервер.ПолучитьОписаниеТиповЧисла(20,0));
	// -- rarus Камаев П.В. 25.09.2020
	
	// Получение общего времени по рейсу
	//----------------------------------
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",Документ.Ссылка);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Данные.БукваА, 0) КАК БукваА,
	|	ЕСТЬNULL(Данные.БукваБ, 0) КАК БукваБ,
	|	ЕСТЬNULL(Данные.БукваВ, 0) КАК БукваВ,
	|	ЕСТЬNULL(Данные.БукваГ, 0) КАК БукваГ
	|ИЗ
	|	(ВЫБРАТЬ
	|		СУММА(Пункты.ХодовоеВремя + Пункты.ВремяСтоянки) КАК БукваА,
	|		СУММА(ВЫБОР
	|				КОГДА Пункты.ГруженыйРейс
	|					ТОГДА Пункты.ХодовоеВремя + Пункты.ХодовоеВремяНаСтоянке
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК БукваБ,
	|		СУММА(ВЫБОР
	|				КОГДА Пункты.ГруженыйРейс
	|					ТОГДА 0
	|				ИНАЧЕ Пункты.ХодовоеВремя + Пункты.ХодовоеВремяНаСтоянке
	|			КОНЕЦ) КАК БукваВ,
	|		СУММА(Пункты.ВремяСтоянки - Пункты.ХодовоеВремяНаСтоянке) КАК БукваГ
	|	ИЗ
	|		Документ.vftРейс.Пункты КАК Пункты
	|	ГДЕ
	|		Пункты.Ссылка = &Ссылка) КАК Данные";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ВремяРейса.А = Выборка.БукваА;
		ВремяРейса.Б = Выборка.БукваБ;
		ВремяРейса.В = Выборка.БукваВ;
		ВремяРейса.Г = Выборка.БукваГ;
	КонецЕсли;
	
	// Перебираем ТЧ "Пункты"
	Для Каждого Стр из Документ.Пункты Цикл
		Если Стр.ВремяСтоянки = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		// К данным по прочим причинам стоянки добавляем данные реквизита "МаневрыВПункте", а также основную причину стоянки
		СписокПР = Документ.ПрочиеПричиныСтоянки.Выгрузить(Новый Структура("ИД",Стр.ИД));
		
		СтрПР = СписокПР.Добавить();
		СтрПР.ПричинаСтоянки	= Стр.ПричинаСтоянки;
		СтрПР.Аналитика			= Стр.Аналитика;
		СтрПР.ВремяСтоянки		= Стр.ВремяСтоянки-Стр.ХодовоеВремяНаСтоянке-СписокПР.Итог("ВремяСтоянки")-Стр.МаневрыВПункте;
		СтрПР.НачДата			= Стр.Приход;
		
		// ++ rarus Камаев П.В. 25.09.2020 Задача № 24411
		Если Стр.МаневрыВПункте <> 0 Тогда
			Если рарусОтчеты.УсловиеВыполнено(ТЗТиповыхОперацийиАналитик, "О", Стр.ПричинаСтоянки, Стр.Аналитика) Тогда
				СтрР = РасшифровкаМаневровШлюзования.Добавить();
				Если (Стр.Аналитика = Справочники.рарусАналитикиПростоя.НайтиПоНаименованию("ВБК (шлюзы №1-6)",,,Справочники.vftТиповыеОперации.Шлюзование)
					ИЛИ Стр.Аналитика = Справочники.рарусАналитикиПростоя.НайтиПоНаименованию("ВБК (шлюзы №7-8)",,,Справочники.vftТиповыеОперации.Шлюзование)) Тогда
					СтрР.Аналитика = "ВБК (шлюзы №1-8)";
				Иначе
					СтрР.Аналитика = Строка(Стр.Аналитика);
				КонецЕсли;
				СтрР.ВремяСтоянки		= Стр.МаневрыВПункте;
			Иначе
				СтрПР = СписокПР.Добавить();
				СтрПР.ПричинаСтоянки	= Справочники.vftТиповыеОперации.Маневры;
				СтрПР.Аналитика			= Справочники.рарусАналитикиПростоя.ПустаяСсылка();
				СтрПР.ВремяСтоянки		= Стр.МаневрыВПункте;
				СтрПР.НачДата			= Стр.Приход;
			КонецЕсли;
		КонецЕсли;
		// -- rarus Камаев П.В. 25.09.2020
		
		СписокПР.Свернуть("НачДата,ПричинаСтоянки, Аналитика","ВремяСтоянки");
		СписокПР.Сортировать("НачДата,ПричинаСтоянки, Аналитика");
		
		// Перебираем все причины стоянки
		Для Каждого СтрПР из СписокПР Цикл
			ДобавитьВРасшивровкаПрочее = Истина;
			
			Если рарусОтчеты.УсловиеВыполнено(ТЗТиповыхОперацийиАналитик, "ДП", СтрПР.ПричинаСтоянки, СтрПР.Аналитика) Тогда
				//СтрПР.ПричинаСтоянки = Справочники.vftТиповыеОперации.ОжиданиеПогрузки Тогда
				ВремяРейса.ДП = ВремяРейса.ДП + СтрПР.ВремяСтоянки;
				ДобавитьВРасшивровкаПрочее = Ложь;
			КонецЕсли;
			
			Если рарусОтчеты.УсловиеВыполнено(ТЗТиповыхОперацийиАналитик, "ДВ", СтрПР.ПричинаСтоянки, СтрПР.Аналитика) Тогда
				//СтрПР.ПричинаСтоянки = Справочники.vftТиповыеОперации.ОжиданиеВыгрузки Тогда
				ВремяРейса.ДВ = ВремяРейса.ДВ + СтрПР.ВремяСтоянки;
				ДобавитьВРасшивровкаПрочее = Ложь;
			КонецЕсли;
			
			Если рарусОтчеты.УсловиеВыполнено(ТЗТиповыхОперацийиАналитик, "Е", СтрПР.ПричинаСтоянки, СтрПР.Аналитика) Тогда
				//СтрПР.ПричинаСтоянки = Справочники.vftТиповыеОперации.Погрузка или
				//СтрПР.ПричинаСтоянки = Справочники.vftТиповыеОперации.Перевалка Тогда
				ВремяРейса.Е = ВремяРейса.Е + СтрПР.ВремяСтоянки;
				ДобавитьВРасшивровкаПрочее = Ложь;
			КонецЕсли;
			
			Если рарусОтчеты.УсловиеВыполнено(ТЗТиповыхОперацийиАналитик, "Ж", СтрПР.ПричинаСтоянки, СтрПР.Аналитика) Тогда
				//СтрПР.ПричинаСтоянки = Справочники.vftТиповыеОперации.Выгрузка Тогда
				ВремяРейса.Ж = ВремяРейса.Ж + СтрПР.ВремяСтоянки;
				ДобавитьВРасшивровкаПрочее = Ложь;
			КонецЕсли;	
				
			Если рарусОтчеты.УсловиеВыполнено(ТЗТиповыхОперацийиАналитик, "З", СтрПР.ПричинаСтоянки, СтрПР.Аналитика) Тогда
				//СтрПР.ПричинаСтоянки = Справочники.vftТиповыеОперации.МаневрыНаПереходе Тогда
				ВремяРейса.З = ВремяРейса.З + СтрПР.ВремяСтоянки;
				ДобавитьВРасшивровкаПрочее = Ложь;
			КонецЕсли;	
				
			Если рарусОтчеты.УсловиеВыполнено(ТЗТиповыхОперацийиАналитик, "И", СтрПР.ПричинаСтоянки, СтрПР.Аналитика) Тогда
				//СтрПР.ПричинаСтоянки = Справочники.vftТиповыеОперации.МетеорологическиеПричины Тогда
				ВремяРейса.И = ВремяРейса.И + СтрПР.ВремяСтоянки;
				ДобавитьВРасшивровкаПрочее = Ложь;
			КонецЕсли;	
				
			Если рарусОтчеты.УсловиеВыполнено(ТЗТиповыхОперацийиАналитик, "К", СтрПР.ПричинаСтоянки, СтрПР.Аналитика) Тогда
				//СтрПР.ПричинаСтоянки = Справочники.vftТиповыеОперации.Ремонт Тогда
				ВремяРейса.К = ВремяРейса.К + СтрПР.ВремяСтоянки;
				ДобавитьВРасшивровкаПрочее = Ложь;
			КонецЕсли;	
				
			Если рарусОтчеты.УсловиеВыполнено(ТЗТиповыхОперацийиАналитик, "Л", СтрПР.ПричинаСтоянки, СтрПР.Аналитика) Тогда
				//СтрПР.ПричинаСтоянки = Справочники.vftТиповыеОперации.Бункеровка или
				//	  СтрПР.ПричинаСтоянки = Справочники.vftТиповыеОперации.ПередачаТоплива Тогда
				ВремяРейса.Л = ВремяРейса.Л + СтрПР.ВремяСтоянки;
				ДобавитьВРасшивровкаПрочее = Ложь;
			КонецЕсли;	
				
			Если рарусОтчеты.УсловиеВыполнено(ТЗТиповыхОперацийиАналитик, "М", СтрПР.ПричинаСтоянки, СтрПР.Аналитика) Тогда
				//СтрПР.ПричинаСтоянки = Справочники.vftТиповыеОперации.ОжиданиеЭкипажа Тогда
				ВремяРейса.М = ВремяРейса.М + СтрПР.ВремяСтоянки;
				ДобавитьВРасшивровкаПрочее = Ложь;
			КонецЕсли;	
				
			Если рарусОтчеты.УсловиеВыполнено(ТЗТиповыхОперацийиАналитик, "Н", СтрПР.ПричинаСтоянки, СтрПР.Аналитика) Тогда
				//СтрПР.ПричинаСтоянки = Справочники.vftТиповыеОперации.ОжиданиеОформленияПрихода или
				//	  СтрПР.ПричинаСтоянки = Справочники.vftТиповыеОперации.ОжиданиеОформленияОтхода Тогда
				ВремяРейса.Н = ВремяРейса.Н + СтрПР.ВремяСтоянки;
				ДобавитьВРасшивровкаПрочее = Ложь;
			КонецЕсли;	
				
			Если рарусОтчеты.УсловиеВыполнено(ТЗТиповыхОперацийиАналитик, "О", СтрПР.ПричинаСтоянки, СтрПР.Аналитика) Тогда
				//СтрПР.ПричинаСтоянки = Справочники.vftТиповыеОперации.Шлюзование Тогда
				ВремяРейса.О = ВремяРейса.О + СтрПР.ВремяСтоянки;
				ДобавитьВРасшивровкаПрочее = Ложь;
				ЗаполнитьЗначенияСвойств(РасшифровкаШлюзования.Добавить(),СтрПР);
			КонецЕсли;
			
			Если рарусОтчеты.УсловиеВыполнено(ТЗТиповыхОперацийиАналитик, "П", СтрПР.ПричинаСтоянки, СтрПР.Аналитика) Тогда
				//СтрПР.ПричинаСтоянки = Справочники.vftТиповыеОперации.ОжиданиеРазводкиМостов	и СтрПР.Аналитика = Справочники.рарусАналитикиПростоя.НайтиПоНаименованию("Санкт-Петербург",,,Справочники.vftТиповыеОперации.ОжиданиеРазводкиМостов) Тогда//питер
				ВремяРейса.П = ВремяРейса.П + СтрПР.ВремяСтоянки;
				ДобавитьВРасшивровкаПрочее = Ложь;
				СтрР = РасшифровкаПитер.Добавить();
				ЗаполнитьЗначенияСвойств(СтрР,СтрПР);
				СтрР.Пункт = Стр.Пункт;
			КонецЕсли;	
				
			Если рарусОтчеты.УсловиеВыполнено(ТЗТиповыхОперацийиАналитик, "Р", СтрПР.ПричинаСтоянки, СтрПР.Аналитика) Тогда
				//СтрПР.ПричинаСтоянки = Справочники.vftТиповыеОперации.ОжиданиеРазводкиМостов	и СтрПР.Аналитика = Справочники.рарусАналитикиПростоя.НайтиПоНаименованию("Ростов-на-Дону",,,Справочники.vftТиповыеОперации.ОжиданиеРазводкиМостов) ИЛИ
				//СтрПР.ПричинаСтоянки = Справочники.vftТиповыеОперации.РазрешениеНаДвижение	и СтрПР.Аналитика = Справочники.рарусАналитикиПростоя.НайтиПоНаименованию("Ростов-на-Дону",,,Справочники.vftТиповыеОперации.РазрешениеНаДвижение) ИЛИ
				//СтрПР.ПричинаСтоянки = Справочники.vftТиповыеОперации.Ремонт					и СтрПР.Аналитика = Справочники.рарусАналитикиПростоя.НайтиПоНаименованию("Ростов-на-Дону",,,Справочники.vftТиповыеОперации.Ремонт) ИЛИ
				//СтрПР.ПричинаСтоянки = Справочники.vftТиповыеОперации.ОжиданиеОформленияОтходаи СтрПР.Аналитика = Справочники.рарусАналитикиПростоя.НайтиПоНаименованию("Ростов-на-Дону",,,Справочники.vftТиповыеОперации.ОжиданиеОформленияОтхода) ИЛИ
				//СтрПР.ПричинаСтоянки = Справочники.vftТиповыеОперации.ОжиданиеОформленияПриходаи СтрПР.Аналитика = Справочники.рарусАналитикиПростоя.НайтиПоНаименованию("Ростов-на-Дону",,,Справочники.vftТиповыеОперации.ОжиданиеОформленияПрихода) Тогда
				ВремяРейса.Р = ВремяРейса.Р + СтрПР.ВремяСтоянки;
				ДобавитьВРасшивровкаПрочее = Ложь;
				ЗаполнитьЗначенияСвойств(РасшифровкаРостов.Добавить(),СтрПР);
			КонецЕсли;	
				
			Если рарусОтчеты.УсловиеВыполнено(ТЗТиповыхОперацийиАналитик, "С", СтрПР.ПричинаСтоянки, СтрПР.Аналитика) Тогда
				//СтрПР.ПричинаСтоянки = Справочники.vftТиповыеОперации.ОжиданиеПаузки Тогда
				ВремяРейса.С = ВремяРейса.С + СтрПР.ВремяСтоянки;
				ДобавитьВРасшивровкаПрочее = Ложь;
				СтрР = РасшифровкаОжиданиеПаузки.Добавить();
				СтрР.Пункт = Стр.Пункт;
				СтрР.ВремяСтоянки = СтрПР.ВремяСтоянки;
			КонецЕсли;	
				
			Если рарусОтчеты.УсловиеВыполнено(ТЗТиповыхОперацийиАналитик, "Т", СтрПР.ПричинаСтоянки, СтрПР.Аналитика) Тогда
				//СтрПР.ПричинаСтоянки = Справочники.vftТиповыеОперации.ПаузкаВыгрузка Тогда
				ВремяРейса.Т = ВремяРейса.Т + СтрПР.ВремяСтоянки;
				ДобавитьВРасшивровкаПрочее = Ложь;
				СтрР = РасшифровкаПаузки.Добавить();
				ЗаполнитьЗначенияСвойств(СтрР,Стр);
				СтрР.ВремяСтоянки = СтрПР.ВремяСтоянки;
			КонецЕсли;	
				
			Если СтрПР.ПричинаСтоянки = Справочники.vftТиповыеОперации.ПаузкаДогрузка Тогда
				ДобавитьВРасшивровкаПрочее = Ложь;
				СтрР = РасшифровкаДогрузки.Добавить();
				ЗаполнитьЗначенияСвойств(СтрР,Стр,"ИД,Пункт,Приход,Отход");
				ЗаполнитьЗначенияСвойств(СтрР,СтрПР,"ПричинаСтоянки,Аналитика, ВремяСтоянки");
			КонецЕсли;	
			
			Если ДобавитьВРасшивровкаПрочее Тогда
				СтрР = РасшифровкаПрочие.Добавить();
				ЗаполнитьЗначенияСвойств(СтрР,СтрПР);
				СтрР.Пункт = Стр.Пункт;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// Обработка таблицы шлюзования
	// ++ rarus Камаев П.В. 24.09.2020 Задача № 24409
	Для Каждого Стр из РасшифровкаШлюзования Цикл
		Если Стр.ПричинаСтоянки = Справочники.vftТиповыеОперации.Шлюзование И
			(Стр.Аналитика = Справочники.рарусАналитикиПростоя.НайтиПоНаименованию("ВБК (шлюзы №1-6)",,,Справочники.vftТиповыеОперации.Шлюзование)
			ИЛИ Стр.Аналитика = Справочники.рарусАналитикиПростоя.НайтиПоНаименованию("ВБК (шлюзы №7-8)",,,Справочники.vftТиповыеОперации.Шлюзование)) Тогда
			Стр.Аналитика = "ВБК (шлюзы №1-8)";
		Иначе
			Стр.Аналитика = Строка(Стр.Аналитика);
		КонецЕсли;
	КонецЦикла;
	мРасшифровкаШлюзования = РасшифровкаШлюзования.Скопировать();
	мРасшифровкаШлюзования.Свернуть("Аналитика","ВремяСтоянки");
	мРасшифровкаШлюзования.Сортировать("Аналитика");
	ВремяРейса.Вставить("РасшифровкаШлюзования",мРасшифровкаШлюзования);
	// -- rarus Камаев П.В. 24.09.2020
	
	// ++ rarus Камаев П.В. 25.09.2020 Задача № 24411
	РасшифровкаМаневровШлюзования.Свернуть("Аналитика","ВремяСтоянки");
	РасшифровкаМаневровШлюзования.Сортировать("Аналитика");
	ВремяРейса.Вставить("РасшифровкаМаневровШлюзования",РасшифровкаМаневровШлюзования);
	// -- rarus Камаев П.В. 25.09.2020
		
	// Обработка таблицы ожидания паузки
	РасшифровкаОжиданиеПаузки.Свернуть("Пункт","ВремяСтоянки");
	РасшифровкаОжиданиеПаузки.Сортировать("Пункт");
	ВремяРейса.Вставить("РасшифровкаОжиданиеПаузки",РасшифровкаОжиданиеПаузки);
	
	// Обработка таблицы паузки
	РасшифровкаПаузки.Колонки.Добавить("ВесГруза",рарусОбщегоНазначенияКлиентСервер.ПолучитьОписаниеТиповЧисла(10,3));
	Для Каждого Стр из РасшифровкаПаузки Цикл
		Стр.ВесГруза = Документ.Баржи.Выгрузить(Новый Структура("ИД",Стр.ИД),"ВесГруза").Итог("ВесГруза");
	КонецЦикла;
	ВремяРейса.Вставить("РасшифровкаПаузки",РасшифровкаПаузки);
	
	// Обработка таблицы догрузки
	РасшифровкаДогрузки.Колонки.Добавить("ВесГруза",рарусОбщегоНазначенияКлиентСервер.ПолучитьОписаниеТиповЧисла(10,3));
	Для Каждого Стр из РасшифровкаДогрузки Цикл
		Стр.ВесГруза = Документ.Баржи.Выгрузить(Новый Структура("ИД",Стр.ИД),"ВесГруза").Итог("ВесГруза");
	КонецЦикла;
	ВремяРейса.Вставить("РасшифровкаДогрузки",РасшифровкаДогрузки);
	
	// Остальные таблицы
	ВремяРейса.Вставить("РасшифровкаПитер",РасшифровкаПитер);
	ВремяРейса.Вставить("РасшифровкаРостов",РасшифровкаРостов);
	ВремяРейса.Вставить("РасшифровкаПрочие",РасшифровкаПрочие);
	
	Возврат ВремяРейса;
	
КонецФункции

Функция ПолучитьПредставлениеПередачаСекций(Документ)
	
	СписокОБ = Новый Соответствие;
	
	// Таблица для полученных данных
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("ЭтоПерваяСтрока",Новый ОписаниеТипов("Булево"));
	ТЗ.Колонки.Добавить("Значение",Новый ОписаниеТипов("Строка"));
	ТЗ.Колонки.Добавить("Описание",Новый ОписаниеТипов("Строка"));
	
	// Перебираем ТЧ "Пункты"
	Для Каждого СтрП из Документ.Пункты Цикл
		
		// Перебираем ТЧ "Баржи"
		Для Каждого СтрБ из Документ.Баржи Цикл
			Если СтрБ.ИД<>СтрП.ИД Тогда
				Продолжить;
			ИначеЕсли НЕ ЗначениеЗаполнено(СтрБ.БаржаПриход) Тогда
				Продолжить;
			ИначеЕсли НЕ ЗначениеЗаполнено(СтрБ.БаржаОперация) Тогда
				Продолжить;
			КонецЕсли;
			
			Если СтрБ.БаржаОперация = Перечисления.рарусБаржиОперации.ОжиданиеБуксира Тогда
				СписокОБ.Вставить(СтрБ.БаржаПриход,Истина);		// Баржа оставлена на рейде
			КонецЕсли;
			
			Если СтрБ.БаржаОперация = Перечисления.рарусБаржиОперации.Прием или СтрБ.БаржаОперация = Перечисления.рарусБаржиОперации.ПриемПередача Тогда
				Если СписокОБ[СтрБ.БаржаПриход] = Истина Тогда	// Ранее баржа была оставлена на рейде, нужно сбросить признак
					СписокОБ.Вставить(СтрБ.БаржаПриход,Ложь);
				Иначе											// Добавляем данные в ТЗ
					Стр = ТЗ.Добавить();
					Если НЕ ЗначениеЗаполнено(СтрБ.СудноПередавшее) Тогда
						Стр.Значение = "" + Формат(СтрБ.ДатаПриемаСекции,"ДФ = 'dd.MM.yyyy / HH:mm'") + " / " + СтрП.Пункт + " / " + СтрБ.БаржаПриход + " / принято";
					Иначе
						Стр.Значение = "" + Формат(СтрБ.ДатаПриемаСекции,"ДФ = 'dd.MM.yyyy / HH:mm'") + " / " + СтрП.Пункт + " / " + СтрБ.БаржаПриход + " / принято от " + СтрБ.СудноПередавшее;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если СтрБ.БаржаОперация = Перечисления.рарусБаржиОперации.Передача или СтрБ.БаржаОперация = Перечисления.рарусБаржиОперации.ПриемПередача Тогда
				Стр = ТЗ.Добавить();
				Стр.Значение = "" + Формат(СтрБ.ДатаПередачиСекции,"ДФ = 'dd.MM.yyyy / HH:mm'") + " / " + СтрП.Пункт + " / " + СтрБ.БаржаПриход + " / передано " + СтрБ.СудноПринявшее;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// Одна строка обязательно должна быть
	Если ТЗ.Количество() = 0 Тогда
		Стр = ТЗ.Добавить();
		Стр.Значение = "НЕТ";
	КонецЕсли;
	
	ТЗ[0].ЭтоПерваяСтрока = Истина;
	ТЗ[0].Описание = "Дата/время передачи / место/ номер секции / судно";
	
	Возврат ТЗ;
	
КонецФункции
