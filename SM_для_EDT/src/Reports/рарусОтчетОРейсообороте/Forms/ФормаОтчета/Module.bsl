
&НаКлиенте
Процедура Сформировать(Команда)
	
	Если НЕ ЗначениеЗаполнено(Документ) Тогда
		Сообщение = новый СообщениеПользователю;
		Сообщение.Текст = "Необходимо выбрать документ.";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		Оповещение = Новый ОписаниеОповещения("ВопросМодифицированностьЗавершение", ЭтотОбъект, "ОтчетОРейсообороте");
		ПоказатьВопрос(Оповещение, НСтр("ru = '""Необходимо записать документ перед формированием отчета!"+Символы.ПС+"Записать документ?""'"),РежимДиалогаВопрос.ОКОтмена,30,,"Внимание!")
	Иначе
		СформироватьОтчет();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СформироватьНаСервере()
	
	мОтчет = Отчеты.рарусОтчетОРейсообороте.Создать();
	мТабДок = мОтчет.СформироватьТабДок(Объект); 
	Возврат мТабДок
	
КонецФункции

&НаКлиенте
Функция СформироватьОтчет()
	
	ТабДок = СформироватьНаСервере();
	
	рарусОтчетыКлиент.ПересчетЯчеек(ТабДок);
	
	Если ТолькоПросмотр Тогда
		// Закрываем все ячейки от изменений
		Для Каждого Эл из ТабДок.Области Цикл
			Если не Эл.Защита Тогда
				Эл.Защита = Истина;
			КонецЕсли;
		КонецЦикла;
	Иначе
		// Кнопка "Заполнить" на поле табличного документа
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ВопросМодифицированностьЗавершение(Ответ, ДопПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		Если ЗаписатьВДокНаСервере() Тогда
			СформироватьОтчет();	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабДокПриИзмененииСодержимогоОбласти(Элемент, Область)
	
	МассивМета = рарусОтчеты.ПолучитьМассивРеквизитов("Документы", "vftРейс");
	
	// Сохраним новое значение в реквизите документа
	ИмяРеквизита	= Область.Имя;
	Значение		= Область.Значение;
	Если МассивМета.Найти(ИмяРеквизита) <> Неопределено Тогда
		Объект[ИмяРеквизита] = Значение;
	КонецЕсли;
	
	рарусОтчетыКлиент.ПересчетЯчеек(ТабДок);
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ДокументПриИзмененииНаСервере()
	
	ЗначениеВРеквизитФормы(Документ.ПолучитьОбъект(),"Объект");
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументПриИзменении(Элемент)
	
	ДокументПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Если ЗначениеЗаполнено(Документ) Тогда
		ДокументПриИзмененииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьВДокНаСервере()
	Если Модифицированность Тогда
		ДокументОбъект = Документ.ПолучитьОбъект();
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Объект);
		Попытка
			ДокументОбъект.Записать();
			Модифицированность = Ложь;
			Возврат Истина
		Исключение
			Сообщение = новый СообщениеПользователю;
			Сообщение.Текст = "Не удалось записать документ " + Документ;
			Сообщение.Сообщить();
			Возврат Ложь
		КонецПопытки;
	КонецЕсли;
	Возврат Ложь
КонецФункции

&НаКлиенте
Процедура ЗаписатьВДок(Команда)
	ЗаписатьВДокНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ТабДокПриАктивизации(Элемент)
	ИмяОбласти = Элемент.ТекущаяОбласть.Имя;
	Если ИмяОбласти = "КнопкаЗаполнить" Тогда
		рарусОтчетыКлиент.ЗаполнитьДанныеДокумента(Объект, ТабДок);
		СформироватьОтчет();
	ИначеЕсли Прав(ИмяОбласти, 13) = "КнопкаОчистки" Тогда
		Область = ТабДок.Области[СтрЗаменить(ИмяОбласти,"КнопкаОчистки","")];
		Область.Значение = "";
		ТабДокПриИзмененииСодержимогоОбласти(Неопределено, Область);
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТабДокВыбор(Элемент, Область, СтандартнаяОбработка)
	
	Если Область.Защита Тогда
		Возврат;
	КонецЕсли;
	
	Если Лев(Область.Имя,8)="ОР_Порт_" Тогда
		СтандартнаяОбработка = Ложь;
		ВыборПорта(Элемент);
	ИначеЕсли ТипЗнч(Область.Значение)=Тип("Дата") Тогда
		СтандартнаяОбработка = Ложь;
		РедактированиеДатыВОтдельнойФорме(Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборПорта(Элемент)
	
	ПараметрФормы = Новый Структура;
	Отбор = Новый Структура;
	Отбор.Вставить("Тип", ПредопределенноеЗначение("Справочник.рарусТипыПунктовСледования.Порт"));
	ПараметрФормы.Вставить("Отбор", Отбор);
	
	ДопПараметры = новый Структура;
	ДопПараметры.Вставить("ТекущаяОбласть", Элемент.ТекущаяОбласть);
	
	Оповещение = Новый ОписаниеОповещения("ВыборПортаЗавершение", ЭтаФорма, ДопПараметры);
	ОткрытьФорму("Справочник.vftПунктыСледования.ФормаВыбора",ПараметрФормы,Элементы.ТабДок,,,,Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

&НаКлиенте
Процедура ВыборПортаЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ДопПараметры.ТекущаяОбласть.Значение = Результат;
		ТабДокПриИзмененииСодержимогоОбласти(Неопределено, ДопПараметры.ТекущаяОбласть);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеДатыВОтдельнойФорме(Элемент, Заголовок="")
	
	ПараметрФормы = Новый Структура;
	ПараметрФормы.Вставить("Дата", Элемент.ТекущаяОбласть.Значение);
	
	ДопПараметры = новый Структура;
	ДопПараметры.Вставить("ТекущаяОбласть", Элемент.ТекущаяОбласть);
	
	Оповещение = Новый ОписаниеОповещения("РедактированиеДатыВОтдельнойФормеЗавершение", ЭтаФорма, ДопПараметры);
	ОткрытьФорму("ОбщаяФорма.рарусРедактированиеДатаЧасыМинуты",ПараметрФормы,Элементы.ТабДок,,,,Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеДатыВОтдельнойФормеЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ДопПараметры.ТекущаяОбласть.Значение = Результат.Результат;
		ТабДокПриИзмененииСодержимогоОбласти(Неопределено, ДопПараметры.ТекущаяОбласть);
	КонецЕсли;
	
КонецПроцедуры
