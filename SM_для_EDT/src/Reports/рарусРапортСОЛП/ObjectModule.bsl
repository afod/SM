
Функция СформироватьТабДок(Документ) Экспорт
	
	Таб   =   новый ТабличныйДокумент;
	
	Макет = ЭтотОбъект.ПолучитьМакет("РапортСОЛП");
	
	Таб.Очистить();
	Таб.ЧерноБелаяПечать		= Ложь;
	Таб.АвтоМасштаб				= Истина;
	Таб.ОриентацияСтраницы		= ОриентацияСтраницы.Портрет;
	Таб.ОтображатьСетку			= Ложь;
	Таб.ОтображатьЗаголовки		= Ложь;
	Таб.ОтображатьГруппировки	= Ложь;
	Таб.ТолькоПросмотр			= Истина;
	
	Область = Макет.ПолучитьОбласть("Шапка");
	
	Область.Параметры.ДиректорФИО		= Справочники.рарусСправочникСсылок.ДиректоруПоЭксплуатации.Значение;
	Область.Параметры.Судно				= Документ.Судно;
	// ++ rarus Чернавин Г.К 18.06.2020 № 22279
	//Область.Параметры.Номер				= Документ.Номер;
	Область.Параметры.Номер = Документы.vftРейс.НомерБезПрефикса(Документ.Номер);
	// -- rarus Чернавин Г.К 18.06.2020
	Область.Параметры.НаименованиеРейса = рарусОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеНаименованияРейса(Документ);
	Таб.Вывести(Область);
	
	// Получение данных
	//-----------------
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Участок");
	ТЗ.Колонки.Добавить("ВариантПрохожденияКЕК");
	ТЗ.Колонки.Добавить("ДатаГ",рарусОбщегоНазначенияКлиентСервер.ПолучитьОписаниеТиповДаты(ЧастиДаты.Дата));
	ТЗ.Колонки.Добавить("ДатаП",рарусОбщегоНазначенияКлиентСервер.ПолучитьОписаниеТиповДаты(ЧастиДаты.Дата));
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Документ);
	Запрос.Текст = "ВЫБРАТЬ
	|	1 КАК Сортировка,
	|	Рейс.Участок КАК Участок,
	|	Рейс.НачДата КАК НачДата,
	|	Рейс.ГруженыйРейс КАК ГруженыйРейс,
	|	Рейс.ВариантПрохожденияКЕК КАК ВариантПрохожденияКЕК
	|ИЗ
	|	Документ.vftРейс.ПрохождениеУчастковСОЛП КАК Рейс
	|ГДЕ
	|	Рейс.Ссылка = &Ссылка
	|	И Рейс.СОЛП
	|	И Рейс.Участок = ЗНАЧЕНИЕ(Справочник.рарусУчасткиСОЛП.РостовНаДону)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	Рейс.Участок,
	|	Рейс.НачДата,
	|	Рейс.ГруженыйРейс,
	|	Рейс.ВариантПрохожденияКЕК
	|ИЗ
	|	Документ.vftРейс.ПрохождениеУчастковСОЛП КАК Рейс
	|ГДЕ
	|	Рейс.Ссылка = &Ссылка
	|	И Рейс.СОЛП
	|	И Рейс.Участок = ЗНАЧЕНИЕ(Справочник.рарусУчасткиСОЛП.Азов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	Рейс.Участок,
	|	Рейс.НачДата,
	|	Рейс.ГруженыйРейс,
	|	Рейс.ВариантПрохожденияКЕК
	|ИЗ
	|	Документ.vftРейс.ПрохождениеУчастковСОЛП КАК Рейс
	|ГДЕ
	|	Рейс.Ссылка = &Ссылка
	|	И Рейс.СОЛП
	|	И Рейс.Участок = ЗНАЧЕНИЕ(Справочник.рарусУчасткиСОЛП.КерчьЕникальскийКанал)
	|	И Рейс.ВариантПрохожденияКЕК = ЗНАЧЕНИЕ(Перечисление.рарусВариантыПрохожденияКЕК.ТСП)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4,
	|	Рейс.Участок,
	|	Рейс.НачДата,
	|	Рейс.ГруженыйРейс,
	|	Рейс.ВариантПрохожденияКЕК
	|ИЗ
	|	Документ.vftРейс.ПрохождениеУчастковСОЛП КАК Рейс
	|ГДЕ
	|	Рейс.Ссылка = &Ссылка
	|	И Рейс.СОЛП
	|	И Рейс.Участок = ЗНАЧЕНИЕ(Справочник.рарусУчасткиСОЛП.КерчьЕникальскийКанал)
	|	И Рейс.ВариантПрохожденияКЕК = ЗНАЧЕНИЕ(Перечисление.рарусВариантыПрохожденияКЕК.КЕК)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сортировка,
	|	ГруженыйРейс УБЫВ,
	|	НачДата";
		
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.ГруженыйРейс Тогда
			СтрТЗ				= ТЗ.Добавить();
			СтрТЗ.Участок		= Выборка.Участок;
			СтрТЗ.ВариантПрохожденияКЕК		= Выборка.ВариантПрохожденияКЕК;
			СтрТЗ.ДатаГ			= Выборка.НачДата;
		Иначе
			Врем = ТЗ.НайтиСтроки(Новый Структура("Участок, ВариантПрохожденияКЕК, ДатаП", Выборка.Участок, Выборка.ВариантПрохожденияКЕК, Дата(1,1,1)));
			Если Врем.Количество() = 0 Тогда
				СтрТЗ			= ТЗ.Добавить();
				СтрТЗ.Участок	= Выборка.Участок;
				СтрТЗ.ВариантПрохожденияКЕК		= Выборка.ВариантПрохожденияКЕК;
			Иначе
				СтрТЗ			= Врем[0];
			КонецЕсли;
			СтрТЗ.ДатаП			= Выборка.НачДата;
		КонецЕсли;
	КонецЦикла;
	
	// Вывод полученных данных
	//------------------------
	Счетчик = 0;
	Для Каждого СтрТЗ из ТЗ Цикл
		Счетчик = Счетчик + 1;
		Область = Макет.ПолучитьОбласть("Строка");
		Область.Параметры.Счетчик	= Счетчик;
		
		Если ЗначениеЗаполнено(СтрТЗ.Участок.НаименованиеДляПечати) Тогда
			Участок = СтрТЗ.Участок.НаименованиеДляПечати;
		Иначе
			Участок = СтрТЗ.Участок.Наименование;
		КонецЕсли;
		
		Если СтрТЗ.ВариантПрохожденияКЕК = Перечисления.рарусВариантыПрохожденияКЕК.КЕК Тогда
			ВариантПрохожденияКЕКНаименование = " (Керчь-Еникальский канал)";
		ИначеЕсли СтрТЗ.ВариантПрохожденияКЕК = Перечисления.рарусВариантыПрохожденияКЕК.ТСП Тогда
			ВариантПрохожденияКЕКНаименование = " (Таманский судоходный путь)";
		Иначе
			ВариантПрохожденияКЕКНаименование = "";
		КонецЕсли;
		
		Область.Параметры.Участок	= Участок + ВариантПрохожденияКЕКНаименование;
		Область.Параметры.ДатаГ		= СтрТЗ.ДатаГ;
		Область.Параметры.ДатаП		= СтрТЗ.ДатаП;
		Таб.Вывести(Область);
	КонецЦикла;
	
	// Выводим подвал
	//---------------
	Область = Макет.ПолучитьОбласть("Подвал");
	Таб.Вывести(Область);
	
	Таб.ВерхнийКолонтитул.НачальнаяСтраница = 1;
	Таб.ВерхнийКолонтитул.ТекстСправа		= "Стр.[&НомерСтраницы] из [&СтраницВсего]";
	Таб.ВерхнийКолонтитул.Выводить			= Истина;
	
	Таб.НижнийКолонтитул.НачальнаяСтраница	= 1;
	Таб.НижнийКолонтитул.ТекстСправа		= "Рапорт сформирован [&Дата] [&Время]";
	Таб.НижнийКолонтитул.Выводить			= Истина;
	
	Возврат Таб
	
КонецФункции
