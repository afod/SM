#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

//Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)

//	Префикс =  Судно.КодБыстрогоВвода;
//	
//КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ТипЗамечания            = ОбъектКопирования.ТипЗамечания;
	ВопросАнкетирования     = ОбъектКопирования.ВопросАнкетирования;
	ОписаниеНесоответствия  = ОбъектКопирования.ОписаниеНесоответствия;
	ПричинаНесоответствия   = ОбъектКопирования.ПричинаНесоответствия;
	КорректирующиеДействия  = ОбъектКопирования.КорректирующиеДействия;
	ПредупреждающиеДействия = ОбъектКопирования.ПредупреждающиеДействия; 
	КодЗамечаний            = ОбъектКопирования.КодЗамечаний;
	КодУстраненияЗамечания  = ОбъектКопирования.КодУстраненияЗамечания;
	СсылкаНаДокумент        = ОбъектКопирования.СсылкаНаДокумент;
	ОписаниеССайтаOCIMF     = ОбъектКопирования.ОписаниеССайтаOCIMF;
	ДополнительныйКомментарийНесоответствие = ОбъектКопирования.ДополнительныйКомментарийНесоответствие;
	
	ЗоныОтветственности.Очистить();	
	ДокументыПоЗамечанию.Очистить();
	ТребуютсяПредупреждающиеДействия = Ложь;
	
	ОтветственныйЗаПредупреждающиеДействия = Справочники.рарусЗоныОтветственности.ПустаяСсылка();
	ПланируемыеСрокиВыполнения = Дата(1,1,1);
	ДатаВыполнения = Дата(1,1,1);
	ДолжностьОтветственныйПредупреждающиеДействия = "";
	ФИООтветственныйПредупреждающиеДействия = "";
	МерыПоПредотвращениюПовторенияЗамечаний = "";	
	ДействияПринятыеДляУстранения = "";	
	ДатаУстранения = Дата(1,1,1);
	ЗамечаниеЗакрыто = Ложь;
	ФиоОтветственногоЗаЗакрытиеЗамечания = "";
	ОтчетОВыполненииПКДОтправлен = Ложь;
	ДатаОтправкиОтчета = Дата(1,1,1);
	ПКДОтправлен = Ложь;
	ДатаПКД =  Дата(1,1,1);
	ПредписанныеСрокиУстранения = "";
	ПланируемыеСрокиУстранения = Дата(1,1,1);
	ДолжностьОтветственныйРешение = "";
	ФИООтветственныйРешение = "";
	ТребуетсяРешениеКомпании = Ложь;
		
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка  Тогда	
		Возврат;	
	КонецЕсли; 
	
	//++ rarus zalikh 2021-04-30 [28543]
	//отслеживаем статус замечания, если не Черновик, тогда помечать на удаление нельзя
	Если Ссылка.ПометкаУдаления = Ложь И ПометкаУдаления Тогда
		Если ЗначениеЗаполнено(Ссылка.ВладелецЗамечания) И НЕ Ссылка.ВладелецЗамечания.ПометкаУдаления Тогда
			Если Статус <> Перечисления.vftСтатусыДокументовСообщений.Черновик  Тогда
				Отказ = Истина;
				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Невозможно пометить документ со статусом, отличным от Черновик";
				Сообщение.Сообщить();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//-- rarus zalikh 2021-04-30 [28543]	
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	ИспользоватьФункционалСУБ = ПолучитьФункциональнуюОпцию("рарусИспользоватьФункционалСУБ");
	
	Если Статус = Перечисления.vftСтатусыДокументовСообщений.Черновик Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ОписаниеНесоответствия");
		МассивНепроверяемыхРеквизитов.Добавить("ПричинаНесоответствия");
		МассивНепроверяемыхРеквизитов.Добавить("КорректирующиеДействия");
		МассивНепроверяемыхРеквизитов.Добавить("КодНесоответствия");
		МассивНепроверяемыхРеквизитов.Добавить("СсылкаНаДокумент");
		МассивНепроверяемыхРеквизитов.Добавить("Ответственный");
		
	КонецЕсли;    
	
	Если Статус = Перечисления.vftСтатусыДокументовСообщений.Черновик Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ТипЗамечания");	
	КонецЕсли;

	Если Статус = Перечисления.vftСтатусыДокументовСообщений.Черновик
		Или Статус = Перечисления.vftСтатусыДокументовСообщений.Отправлен
		                                  Или Не ТребуетсяРешениеКомпании 
		                                      Или ИспользоватьФункционалСУБ Тогда
	
		МассивНепроверяемыхРеквизитов.Добавить("КраткоеОписаниеНесоответствия");
		МассивНепроверяемыхРеквизитов.Добавить("СодержаниеКорректирующийхДействий");
		МассивНепроверяемыхРеквизитов.Добавить("ПредписанныеСрокиУстранения");
		МассивНепроверяемыхРеквизитов.Добавить("ПланируемыеСрокиУстранения");
		МассивНепроверяемыхРеквизитов.Добавить("ДолжностьОтветственныйРешение");
		МассивНепроверяемыхРеквизитов.Добавить("ФИООтветственныйРешение");
		МассивНепроверяемыхРеквизитов.Добавить("КодНесоответствия");                                                                
	Иначе 
				
	     Если ОтветственныеПодразделения.Количество() = 0 Тогда
				
				ТекстОшибки = НСтр("ru = 'Не выбрано подразделение ответственное за выполнение корректирующих действий.'");
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект,,, Отказ);
				
		 КонецЕсли;
				
	КонецЕсли;
	
	Если  Статус = Перечисления.vftСтатусыДокументовСообщений.Черновик 
		Или Статус = Перечисления.vftСтатусыДокументовСообщений.Отправлен
	                             	Или	Не ТребуютсяПредупреждающиеДействия
		                                        Или ИспользоватьФункционалСУБ Тогда 
		
		МассивНепроверяемыхРеквизитов.Добавить("МерыПоПредотвращениюПовторенияНесоответствия");
		МассивНепроверяемыхРеквизитов.Добавить("ПредписанныеСрокиПредупреждающихДействий");
		МассивНепроверяемыхРеквизитов.Добавить("ПланируемыеСрокиВыполнения");
		//МассивНепроверяемыхРеквизитов.Добавить("ДолжностьОтветственныйПредупреждающиеДействия");
		//МассивНепроверяемыхРеквизитов.Добавить("ФИООтветственныйПредупреждающиеДействия");
		МассивНепроверяемыхРеквизитов.Добавить("ОтветственныйЗаПредупреждающиеДействия");

	//rarus_AfoD 26.08.2021 < 	
	ИначеЕсли (НЕ ИспользоватьФункционалСУБ) И Статус = Перечисления.vftСтатусыДокументовСообщений.Закрыт Тогда 
	
		МассивНепроверяемыхРеквизитов.Добавить("МерыПоПредотвращениюПовторенияНесоответствия");
		МассивНепроверяемыхРеквизитов.Добавить("ПредписанныеСрокиПредупреждающихДействий");
		МассивНепроверяемыхРеквизитов.Добавить("ПланируемыеСрокиВыполнения");
		МассивНепроверяемыхРеквизитов.Добавить("ДолжностьОтветственныйПредупреждающиеДействия");
		МассивНепроверяемыхРеквизитов.Добавить("ФИООтветственныйПредупреждающиеДействия");
		МассивНепроверяемыхРеквизитов.Добавить("ОтветственныйЗаПредупреждающиеДействия");
	//rarus_AfoD 26.08.2021 > 
	
	Иначе
		
		Если ОтветственныеПодразделенияЗаПредупреждающиеДействия.Количество() = 0 Тогда
			
			ТекстОшибки = НСтр("ru = 'Не выбрано подразделение ответственное за выполнение корректирующих действий.'");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект,,, Отказ);
			
		КонецЕсли;
		
	КонецЕсли;
		
	
	Если ИспользоватьФункционалСУБ Тогда		
		МассивНепроверяемыхРеквизитов.Добавить("ФИООтветственныйПредупреждающиеДействия");
		МассивНепроверяемыхРеквизитов.Добавить("ДолжностьОтветственныйПредупреждающиеДействия");
	Иначе 
		Если Не ТребуютсяПредупреждающиеДействия Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ДолжностьОтветственныйПредупреждающиеДействия");
			МассивНепроверяемыхРеквизитов.Добавить("ФИООтветственныйПредупреждающиеДействия");			
		КонецЕсли;	
	КонецЕсли;
			
	Если Статус = Перечисления.vftСтатусыДокументовСообщений.Черновик
		Или Статус = Перечисления.vftСтатусыДокументовСообщений.Отправлен 
		Или Статус = Перечисления.vftСтатусыДокументовСообщений.Получен 
		Или Статус = Перечисления.vftСтатусыДокументовСообщений.ОтправленНаСудно Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ДействияПринятыеДляУстранения");
		МассивНепроверяемыхРеквизитов.Добавить("ДатаУстранения");
		МассивНепроверяемыхРеквизитов.Добавить("ДатаДонесенияОбУстранении");
		
	КонецЕсли; 	
	
	Если Не ИспользоватьФункционалСУБ Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Ответственный");	
		МассивНепроверяемыхРеквизитов.Добавить("ВладелецЗамечания");
		МассивНепроверяемыхРеквизитов.Добавить("КодУстраненияЗамечания");
		МассивНепроверяемыхРеквизитов.Добавить("КодЗамечаний");			
		МассивНепроверяемыхРеквизитов.Добавить("ОтветственныйЗаПредупреждающиеДействия");
	Иначе
		МассивНепроверяемыхРеквизитов.Добавить("ДатаДонесенияОбУстранении");
	КонецЕсли;
	
	Если Статус = Перечисления.vftСтатусыДокументовСообщений.Закрыт ИЛИ 
		//rarus_AfoD 30.08.2021 < 
		Статус = Перечисления.vftСтатусыДокументовСообщений.Черновик ИЛИ
		Статус = Перечисления.vftСтатусыДокументовСообщений.Получен ИЛИ
		Статус = Перечисления.vftСтатусыДокументовСообщений.ОтправленНаСудно Тогда
		//rarus_AfoD 30.08.2021 > 
		МассивНепроверяемыхРеквизитов.Добавить("КорректирующиеДействия");			
	КонецЕсли;
	// 	
	Если ИспользоватьФункционалСУБ Тогда
			
		ДобавитьВМассивНепроверяемыхРеквизитов = Истина;
		
		Если ТипЗнч(ВладелецЗамечания) = Тип("ДокументСсылка.рарусМероприятиеСУБ") Тогда
			
			Если Статус = Перечисления.vftСтатусыДокументовСообщений.Отправлен Тогда
				
				ИспользуютсяКоды 
				= Справочники.vftНесоответствия.ПолучитьЗначениеРеквзитовПоверкиПоВидуМероприятийСУБ(ВладелецЗамечания);
				
				Если ИспользуютсяКоды Тогда
					ДобавитьВМассивНепроверяемыхРеквизитов = Ложь;	
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ДобавитьВМассивНепроверяемыхРеквизитов Тогда
			МассивНепроверяемыхРеквизитов.Добавить("КодЗамечаний");	
			МассивНепроверяемыхРеквизитов.Добавить("КодУстраненияЗамечания");			
		КонецЕсли;
		
	    КонтролирующиОрганРМРС 
			         = Справочники.vftНесоответствия.ПроверитьВхождениеКонтролирующегоОрганаВГруппуРМРС(ЭтотОбъект);
		
		Если КонтролирующиОрганРМРС Тогда
		   МассивНепроверяемыхРеквизитов.Добавить("КорректирующиеДействия");				 
		КонецЕсли;
		
		//rarus_AfoD 30.08.2021 < 
		ЭтоАудитор =  рарусОбщегоНазначенияПовтИсп.ПолномочияАудитораСУБ();
		Если НЕ ЭтоАудитор И Статус = Перечисления.vftСтатусыДокументовСообщений.Отправлен Тогда
		Иначе
			МассивНепроверяемыхРеквизитов.Добавить("КорректирующиеДействия");			
		КонецЕсли;
		//rarus_AfoD 30.08.2021 > 
		
		Если ТребуетсяРешениеКомпании Тогда
			
			//ЭтоАудитор =  рарусОбщегоНазначенияПовтИсп.ПолномочияАудитораСУБ();
								 				 				 
			Если ЭтоАудитор  Тогда
				
				МассивНепроверяемыхРеквизитов.Добавить("КорректирующиеДействия");	
				
				Если Статус <> Перечисления.vftСтатусыДокументовСообщений.Черновик Тогда
					
					Если ЗоныОтветственности.Количество() = 0 Тогда
						ТекстОшибки = НСтр("ru = 'Необходимо указать ""Ответственные подразделения""';
						|en = 'It is necessary to indicate the Responsible department'");
						
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстОшибки,
						ЭтотОбъект,
						"ЗоныОтветственности",
						,
						Отказ);
						
					КонецЕсли;
					
					Для ТекИндекс = 0 По ЗоныОтветственности.Количество()-1 Цикл
						
						АдресОшибки = " " + НСтр("ru = 'в строке %НомерСтроки% списка ""Ответственные подразделения""';
						|en = 'in line %НомерСтроки% of the ""Goods"" list'");
						АдресОшибки = СтрЗаменить(АдресОшибки, "%НомерСтроки%", ЗоныОтветственности[ТекИндекс].НомерСтроки);
						
						СтрокаТч = ЗоныОтветственности[ТекИндекс];
						
						Если Не ЗначениеЗаполнено(СтрокаТч.ЗанаОтветственности) Тогда
							
							ТекстОшибки = НСтр("ru = 'Необходимо указать подразделение';
							|en = ' '");
							
							ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
							ТекстОшибки + АдресОшибки,
							ЭтотОбъект,
							ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ЗоныОтветственности", ЗоныОтветственности[ТекИндекс].НомерСтроки, "ЗанаОтветственности"),
							,
							Отказ);
							
						КонецЕсли;
						
						Если Не ЗначениеЗаполнено(СтрокаТч.КорректирующиеДействия) Тогда
							
							ТекстОшибки = НСтр("ru = 'Необходимо указать корректирующие действия';
							|en = ''");
							
							ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
							ТекстОшибки + АдресОшибки,
							ЭтотОбъект,
							ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ЗоныОтветственности", ЗоныОтветственности[ТекИндекс].НомерСтроки, "КорректирующиеДействия"),
							,
							Отказ);
							
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	//
		
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);	
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	//Если Не ЗначениеЗаполнено(ТипЗамечания) Тогда		
	//	ТипЗамечания = Перечисления.рарусТипыЗамечания.Замечание;			
	//КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТипЗамечания) Тогда
		//rarus_AfoD 30.08.2021 < 
		ТипЗамечания = Перечисления.рарусТипыЗамечания.Замечание;	
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") 
			И ДанныеЗаполнения.Свойство("ВладелецЗамечания")
			И ЗначениеЗаполнено(ДанныеЗаполнения.ВладелецЗамечания)
			И ТипЗнч(ДанныеЗаполнения.ВладелецЗамечания) = Тип("ДокументСсылка.рарусМероприятиеСУБ") Тогда
			
			ДоступныеТипыЗамечаний = ДанныеЗаполнения.ВладелецЗамечания.ВидМероприятия.Конвенция.ДоступныеТипыЗамечаний;
			Если ДоступныеТипыЗамечаний.Найти(ТипЗамечания, "ТипЗамечания") = Неопределено Тогда
				
				ТипЗамечания = Перечисления.рарусТипыЗамечания.ПустаяСсылка();
				
			КонецЕсли; 
			
		КонецЕсли; 
		
		//rarus_AfoD 30.08.2021 > 
	КонецЕсли;

	
	Если Не ЗначениеЗаполнено(ОбластьСоздания) Тогда
		ОбластьСоздания = Перечисления.рарусОбластиРедактирования.Судно;
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("рарусИспользоватьФункционалСУБ") тогда		
		рарусСУБСервер.ОбработкаЗаполнениеДокументовСУБ(ЭтотОбъект);
	КонецЕсли;
	
	//rarus_AfoD 30.08.2021 < 
	Если Не ЗначениеЗаполнено(Судно) И ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("Судно") Тогда
	
		Судно = ДанныеЗаполнения.Судно;
	
	КонецЕсли; 
	//rarus_AfoD 30.08.2021 > 
	
//++ rarus zalikh 2021-05-05 
	Если Не ЗначениеЗаполнено(Владелец) Тогда
		Владелец = Справочники.vftДокладыОНесоответствии.рарусВременныйДоклад;
	КонецЕсли;
//-- rarus zalikh 2021-05-05	

КонецПроцедуры

Процедура ПриУстановкеНовогоКода(СтандартнаяОбработка, Префикс)
	СтандартнаяОбработка= Ложь;
	УстановитьПривилегированныйРежим(Истина);
	
	Если ЗначениеЗаполнено(ВладелецЗамечания) ИЛИ ЗначениеЗаполнено(Владелец) Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("ВладелецЗамечания", ?(ЗначениеЗаполнено(ВладелецЗамечания), ВладелецЗамечания, Владелец));
		Запрос.Текст = "ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ vftНесоответствия.Ссылка) КАК КоличествоЭлементов
		|ИЗ
		|	Справочник.vftНесоответствия КАК vftНесоответствия
		|ГДЕ
		|	vftНесоответствия.Ссылка <> &Ссылка
		|	И (vftНесоответствия.ВладелецЗамечания = &ВладелецЗамечания ИЛИ vftНесоответствия.Владелец = &ВладелецЗамечания)";
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			
			НовыйКод = Прав("000" + Формат(Выборка.КоличествоЭлементов + 1, "ЧРД=; ЧРГ=; ЧГ="), 3);
			Если Код <> НовыйКод Тогда
				
				Код = НовыйКод;
				
			КонецЕсли; 
			
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
