
#Область События_Формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	vftОбщиеПроцедурыДокументовСервер.ПриСозданииНаСервере(Отказ,Объект);
	
	vftОбщиеПроцедурыДокументовСервер.УстановитьКнопкиИзмененияСтатуса(ЭтаФорма,Элементы.ПодменюСтатус,Объект.Статус);	
	
	vftОбщиеПроцедурыДокументовСервер.УстановитьДоступностьЭлементовФормы(ЭтаФорма);

	ГлавныйУзел = ПланыОбмена.ГлавныйУзел() = Неопределено;
	
	ЭтаФорма.ТолькоПросмотр =  НЕ vftОбщиеПроцедурыДокументовСервер.ПолучитьВозможностьРедактироватьФормуПоСтатусу(Объект.Статус);
	
	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
		
	//////////////
	// новые требования
	// ++ rarus ilshil 
	ЗаполнитьДопРеквизиты();
	// -- rarus ilshil
	/////////////
		
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьДоступностьРеквизитов();
	
	УстановитьЗаголовокЗакладок();
	
	// ++ rarus kloa 08.01.2019 
	УстановитьДоступностьРешения();
	УстановитьДоступностьПредупреждающихДействий();
	// -- rarus kloa 08.01.2019 
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗаголовокЗакладок()
	
	Если Объект.ТребуетсяРешениеКомпании Тогда
		
		Элементы.ГруппаСтраницаРешениеКомпании.Заголовок = "Решение компании";
	Иначе
		
		Элементы.ГруппаСтраницаРешениеКомпании.Заголовок = "Решение компании не требуется";
		
	КонецЕсли;
	
	// ++ rarus kloa 08.01.2019 
	Если Объект.ТребуютсяПредупреждающиеДействия Тогда
		
		Элементы.ГруппаСтраницаПредупреждающиеДействия.Заголовок = "Предупреждающие действия";
	Иначе
		
		Элементы.ГруппаСтраницаПредупреждающиеДействия.Заголовок = "Предупреждающие действия не требуются";
		
	КонецЕсли;	
	// -- rarus kloa 08.01.2019 
	
КонецПроцедуры

#КонецОбласти


#Область События_Элементов_Формы

&НаКлиенте
Процедура СодержаниеКорректирующийхДействийПриИзменении(Элемент)
	
	Объект.ФИООтветственныйРешение = ТекущийПользователь;
	СброситьФлагРешение();

КонецПроцедуры

&НаКлиенте
Процедура ТребуетсяРешениеКомпанииПриИзменении(Элемент)
	
	Если Объект.ТребуетсяРешениеКомпании = ложь Тогда
		
		Объект.КраткоеОписаниеНесоответствия 		= "";
		Объект.СодержаниеКорректирующийхДействий 	= "";
		Объект.ОтветственныеПодразделения.Очистить();
		Объект.ПредписанныеСрокиУстранения 			= "";
		Объект.ПланируемыеСрокиУстранения 			= "";
		Объект.ДолжностьОтветственныйРешение 		= "";
		Объект.ФИООтветственныйРешение 				= "";
		
	КонецЕсли; 
 	УстановитьДоступностьРешения();
	УстановитьЗаголовокЗакладок();	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьРешения()
	Элементы.ГруппаРешениеБлокировка.ТолькоПросмотр = НЕ Объект.ТребуетсяРешениеКомпании;
КонецПроцедуры
 
&НаКлиенте
Процедура СброситьФлагРешение()
	
	Если Объект.КраткоеОписаниеНесоответствия 			<> ""
		ИЛИ	Объект.СодержаниеКорректирующийхДействий 	<> ""
		ИЛИ 	Объект.ОтветственныеПодразделения.Количество() <> 0
		ИЛИ	Объект.ПредписанныеСрокиУстранения 			<> ""
		ИЛИ	Объект.ПланируемыеСрокиУстранения 			<> ""
		ИЛИ	Объект.ДолжностьОтветственныйРешение 		<> ""
		ИЛИ	Объект.ФИООтветственныйРешение 				<> ""
		Тогда
		Объект.ТребуетсяРешениеКомпании = Истина;
	КонецЕсли; 
	
	
КонецПроцедуры

// ++ rarus kloa 08.01.2019 
&НаКлиенте
Процедура СброситьФлагПредупреждающихДействий()
	
	Если Объект.МерыПоПредотвращениюПовторенияНесоответствия 	<> ""
		ИЛИ Объект.ОтветственныеПодразделенияЗаПредупреждающиеДействия.Количество() <> 0
		ИЛИ	Объект.ПредписанныеСрокиПредупреждающихДействий 			<> ""
		ИЛИ	Объект.ПланируемыеСрокиВыполнения			<> ""
		ИЛИ	Объект.ДолжностьОтветственныйПредупреждающиеДействия 		<> ""
		ИЛИ	Объект.ФИООтветственныйПредупреждающиеДействия 				<> ""
		Тогда
		Объект.ТребуютсяПредупреждающиеДействия = Истина;
	КонецЕсли; 
	
	
КонецПроцедуры
// -- rarus kloa 08.01.2019 

&НаКлиенте
Процедура КраткоеОписаниеНесоответствияПриИзменении(Элемент)
	
	СброситьФлагРешение();

КонецПроцедуры

&НаКлиенте
Процедура ПредписанныеСрокиУстраненияПриИзменении(Элемент)
	
	СброситьФлагРешение();
	
КонецПроцедуры

&НаКлиенте
Процедура ПланируемыеСрокиУстраненияПриИзменении(Элемент)
	
	СброситьФлагРешение();
	
КонецПроцедуры

&НаКлиенте
Процедура ДолжностьОтветственныйРешениеПриИзменении(Элемент)
	
	СброситьФлагРешение();
	
КонецПроцедуры

&НаКлиенте
Процедура ФИООтветственныйРешениеПриИзменении(Элемент)
	
	СброситьФлагРешение();
	
КонецПроцедуры

&НаКлиенте
Процедура КодНесоответствияПриИзменении(Элемент)
	Объект.КодУстраненияЗамечания = ПолучитьКодНесоответствияПриИзмененииНаСервере(Объект.КодНесоответствия);
КонецПроцедуры

#КонецОбласти

#Область Управление_Доступностью

&НаСервере
Процедура УстановитьДоступностьРеквизитов();
	
	МассивНедоступныхДляРедатированияРеквизитов = ПолучитьЗапрещенныеРеквизиты();
	
	vftОбщиеПроцедурыДокументовСервер.УстановитьДоступностьРеквизитов(ЭтаФорма,МассивНедоступныхДляРедатированияРеквизитов,Истина);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьЗапрещенныеРеквизиты()
	
	Возврат	ПолучитьСоответствиеСтатусаИЗапрещенныхРеквизитов().Получить(Объект.Статус);
	
КонецФункции

&НаСервере
Функция ПолучитьСоответствиеСтатусаИЗапрещенныхРеквизитов() Экспорт
	
	Соответствие = Новый Соответствие;  

	МассивВсеРеквизиты = vftОбщиеПроцедурыДокументовСервер.ПолучитьВсеЭлементыФормыДокумента(Объект,Ложь);
	
	Если ГлавныйУзел тогда
		
		Соответствие.Вставить(Перечисления.vftСтатусыДокументовСообщений.Черновик,МассивВсеРеквизиты);	
		
		// ++ rarus kloa 08.01.2019  
		//МассивОтправлен = vftОбщиеПроцедурыДокументовСервер.СкопироватьМассивСтрок(МассивВсеРеквизиты,"#ГруппаСтраницаРешениеКомпании#");		
		МассивОтправлен = vftОбщиеПроцедурыДокументовСервер.СкопироватьМассивСтрок(МассивВсеРеквизиты,"#ГруппаСтраницаРешениеКомпании#ГруппаСтраницаПредупреждающиеДействия#");		
		// -- rarus kloa 08.01.2019 
		Соответствие.Вставить(Перечисления.vftСтатусыДокументовСообщений.Отправлен	,МассивОтправлен);
		
		Соответствие.Вставить(Перечисления.vftСтатусыДокументовСообщений.Получен	,МассивВсеРеквизиты);
		Соответствие.Вставить(Перечисления.vftСтатусыДокументовСообщений.Закрыт		,МассивВсеРеквизиты);

	Иначе
		
		МассивЧерновик = vftОбщиеПроцедурыДокументовСервер.СкопироватьМассивСтрок(МассивВсеРеквизиты,"#ГруппаСтраницаНесоответствие#");
		Соответствие.Вставить(Перечисления.vftСтатусыДокументовСообщений.Черновик	,МассивЧерновик);
		
		Соответствие.Вставить(Перечисления.vftСтатусыДокументовСообщений.Отправлен	,МассивВсеРеквизиты);
		
		МассивПолучен = vftОбщиеПроцедурыДокументовСервер.СкопироватьМассивСтрок(МассивВсеРеквизиты,"#ГруппаСтраницаДонесениеОбУсранении#");
		Соответствие.Вставить(Перечисления.vftСтатусыДокументовСообщений.Получен	,МассивПолучен);
		Соответствие.Вставить(Перечисления.vftСтатусыДокументовСообщений.Закрыт		,МассивВсеРеквизиты);
		
	КонецЕсли;
	
	Возврат  Соответствие;
	
КонецФункции

&НаКлиенте
Процедура РазрешитьРедактированиеВсехРеквизитов(Команда)
	
РазрешитьРедактированиеВсехРеквизитовСервер();	

КонецПроцедуры

&НаСервере
Процедура РазрешитьРедактированиеВсехРеквизитовСервер()
	
vftОбщиеПроцедурыДокументовСервер.РазрешитьРедактированиеВсехРеквизитов(ЭтаФорма);	

КонецПроцедуры

#КонецОбласти

#Область Кнопки_Изменения_Статуса

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИзмененияСтатуса(Команда)
	
	Объект.Статус = vftОбщиеПроцедурыДокументовКлиент.ПолучитьСтатусПоИмениКоманды(Команда.Имя);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьВозможныеСтатусы() Экспорт
	
	Возврат vftОбщиеПроцедурыДокументовСервер.ПолучитьВозможныеСтатусы();
	
КонецФункции

// +++ rarus plotks 16.12.2016 
&НаКлиенте
Процедура ОписаниеНесоответствияПриИзменении(Элемент)
	Объект.КраткоеОписаниеНесоответствия = Объект.ОписаниеНесоответствия;
КонецПроцедуры
// --- rarus plotks 16.12.2016

// ++ rarus kloa 29.12.2019  
&НаКлиенте
Процедура ТребуютсяПредупреждающиеДействияПриИзменении(Элемент)
	
	Если Объект.ТребуютсяПредупреждающиеДействия = Ложь Тогда
		
		Объект.МерыПоПредотвращениюПовторенияНесоответствия 	= "";
		Объект.ОтветственныеПодразделенияЗаПредупреждающиеДействия.Очистить();
		Объект.ПредписанныеСрокиПредупреждающихДействий 			= "";
		Объект.ПланируемыеСрокиВыполнения 			= "";
		Объект.ДолжностьОтветственныйПредупреждающиеДействия 		= "";
		Объект.ФИООтветственныйПредупреждающиеДействия 				= "";
		
	КонецЕсли; 
	УстановитьДоступностьПредупреждающихДействий();
	УстановитьЗаголовокЗакладок();	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьПредупреждающихДействий()
	Элементы.ГруппаПредупреждающиеДействияБлокировка.ТолькоПросмотр = НЕ Объект.ТребуютсяПредупреждающиеДействия;	
КонецПроцедуры
 
&НаКлиенте
Процедура МерыПоПредотвращениюПовторенияНесоответствияПриИзменении(Элемент)
	Объект.ФИООтветственныйПредупреждающиеДействия = ТекущийПользователь;
	СброситьФлагПредупреждающихДействий();
КонецПроцедуры

&НаКлиенте
Процедура ПредписанныеСрокиПредупреждающихДействийПриИзменении(Элемент)
	СброситьФлагПредупреждающихДействий();
КонецПроцедуры

&НаКлиенте
Процедура ПланируемыеСрокиВыполненияПриИзменении(Элемент)
	СброситьФлагПредупреждающихДействий();
КонецПроцедуры

&НаКлиенте
Процедура ДолжностьОтветственныйПредупреждающиеДействияПриИзменении(Элемент)
	СброситьФлагПредупреждающихДействий();
КонецПроцедуры

&НаКлиенте
Процедура ФИООтветственныйПредупреждающиеДействияПриИзменении(Элемент)
	СброситьФлагПредупреждающихДействий();
КонецПроцедуры
// -- rarus kloa 29.12.2019  

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьКодНесоответствияПриИзмененииНаСервере(КодНесоответствияСтрока)

	Если НЕ ЗначениеЗаполнено(КодНесоответствияСтрока) Тогда
		
		Возврат Неопределено;
		
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("КодНесоответствия", СокрЛП(КодНесоответствияСтрока));
		Запрос.Текст ="ВЫБРАТЬ ПЕРВЫЕ 1
		              |	рарусКлассификаторыКодовУстраненияЗамечаний.Ссылка КАК КодУстраненияЗамечания
		              |ИЗ
		              |	Справочник.рарусКлассификаторыКодовУстраненияЗамечаний КАК рарусКлассификаторыКодовУстраненияЗамечаний
		              |ГДЕ
		              |	рарусКлассификаторыКодовУстраненияЗамечаний.ПроверкаPSCFSC
		              |	И рарусКлассификаторыКодовУстраненияЗамечаний.КодНесоответствия = &КодНесоответствия
		              |	И НЕ рарусКлассификаторыКодовУстраненияЗамечаний.ПометкаУдаления";
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
		
			Возврат Выборка.КодУстраненияЗамечания;
		
		КонецЕсли; 
	
	КонецЕсли; 
	
	Возврат Неопределено;

КонецФункции // ПолучитьКодНесоответствияПриИзмененииНаСервере()

&НаСервере
Процедура ЗаполнитьДопРеквизиты()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ЗначениеЗаполнено(Объект.Ссылка) И ЗначениеЗаполнено(Объект.Судно) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	рарусДополнительныеДанныеЗамечаний.ФИООтветственногоЗаПредупреждающиеДействия КАК ФИООтветственногоЗаПредупреждающиеДействия,
		|	рарусДополнительныеДанныеЗамечаний.ДолжностьОтветственныйПредупреждающиеДействия КАК ДолжностьОтветственныйПредупреждающиеДействия
		|ИЗ
		|	РегистрСведений.рарусДополнительныеДанныеЗамечаний КАК рарусДополнительныеДанныеЗамечаний
		|ГДЕ
		|	рарусДополнительныеДанныеЗамечаний.Замечание = &Замечание
		|	И рарусДополнительныеДанныеЗамечаний.Судно = &Судно";
		
		Запрос.УстановитьПараметр("Замечание", Объект.Ссылка);
		Запрос.УстановитьПараметр("Судно", Объект.Судно);
		
		Результат = Запрос.Выполнить();
		
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		Если Объект.ФИООтветственныйПредупреждающиеДействия <> Выборка.ФИООтветственногоЗаПредупреждающиеДействия Тогда
			Объект.ФИООтветственныйПредупреждающиеДействия = Выборка.ФИООтветственногоЗаПредупреждающиеДействия;
		КонецЕсли;
		
		Если Объект.ДолжностьОтветственныйПредупреждающиеДействия <> Выборка.ДолжностьОтветственныйПредупреждающиеДействия Тогда
			Объект.ДолжностьОтветственныйПредупреждающиеДействия = Выборка.ДолжностьОтветственныйПредупреждающиеДействия;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда) Экспорт
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды() Экспорт
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
