
// + Устарела
Функция ДополнительныеРеквизитыСтрокойУдалить(Источник, Разделитель = Неопределено) Экспорт
	
	Возврат рарусОбщегоНазначенияСервер.ДополнительныеРеквизитыСтрокой(Источник, Разделитель);
	
КонецФункции
//

////////////////////////////////////////////////////////////////////////////////
//
// Функция 
//
// Описание: 
//	Формирует представление дополнительных реквизитов для списка номенклатуры
//
// Параметры:
//   Номенклатура - Массив, СправочникСсылка.Номенклатура - объекты по которым необходимо построить представление.
//
// Возвращаемое значение: Соответствие
//
Функция ДополнительныеРеквизитыСтрокой(Номенклатура) Экспорт
			
	Если ТипЗнч(Номенклатура) <> Тип("Массив") тогда
		МассивОбъектов = Новый Массив;
		МассивОбъектов.Добавить(Номенклатура);
	Иначе
		МассивОбъектов = Номенклатура;
	КонецЕсли;
	
	Возврат рарусОбщегоНазначенияСервер.ДополнительныеРеквизитыСтрокойПоСпискуОбъектов(МассивОбъектов);
	
КонецФункции

Функция ОписаниеДополнительныхРеквизитовНоменклатуры(Номенклатура) Экспорт

	Если Не ЗначениеЗаполнено(Номенклатура) тогда
		Возврат "";
	КонецЕсли;
	
	СоотвествтиеНоменклатураСтрока = Справочники.Номенклатура.ДополнительныеРеквизитыСтрокой(Номенклатура);
	
	СтрокаПредставления = СоотвествтиеНоменклатураСтрока[Номенклатура];
	
	Возврат ?(ЗначениеЗаполнено(СтрокаПредставления), СтрокаПредставления, "");

КонецФункции

Функция НепроверяемыеРеквизиты(Объект) Экспорт
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	РеквизитыСПереопределеннойОбязательностьюЗаполнения = РеквизитыСПереопределеннойОбязательностьюЗаполнения(Объект.ТипНоменклатуры, Неопределено, Объект);

	Для Каждого КлючЗначение Из РеквизитыСПереопределеннойОбязательностьюЗаполнения Цикл
		
		Если Не КлючЗначение.Значение Тогда
			МассивНепроверяемыхРеквизитов.Добавить(КлючЗначение.Ключ);
		КонецЕсли;
		
	КонецЦикла;
		
	Возврат МассивНепроверяемыхРеквизитов;
	
КонецФункции

Функция РеквизитыСПереопределеннойОбязательностьюЗаполнения(ТипНоменклатуры, ОсобенностьУчета, Объект) Экспорт
	
	РеквизитыСПереопределеннойОбязательностьюЗаполнения = Новый Соответствие;
		
	РеквизитыСПереопределеннойОбязательностьюЗаполнения.Вставить("Наименование", Истина);
		
	Если Объект = Неопределено Тогда
		РеквизитыСПереопределеннойОбязательностьюЗаполнения.Вставить("НаборУпаковок", Ложь);
	Иначе
		РеквизитыСПереопределеннойОбязательностьюЗаполнения.Вставить("НаборУпаковок", Объект.ИспользоватьУпаковки);
	КонецЕсли;
	
	РеквизитыСПереопределеннойОбязательностьюЗаполнения.Вставить("ЕдиницаИзмерения", ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар
																			Или ТипНоменклатуры = Перечисления.ТипыНоменклатуры.МногооборотнаяТара
																			Или ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Набор);
																			
	ПереопределитьОбязательностьЗаполненияРеквизитовМеры(Объект, РеквизитыСПереопределеннойОбязательностьюЗаполнения, "Вес");
	ПереопределитьОбязательностьЗаполненияРеквизитовМеры(Объект, РеквизитыСПереопределеннойОбязательностьюЗаполнения, "Объем");
	ПереопределитьОбязательностьЗаполненияРеквизитовМеры(Объект, РеквизитыСПереопределеннойОбязательностьюЗаполнения, "Площадь");
	ПереопределитьОбязательностьЗаполненияРеквизитовМеры(Объект, РеквизитыСПереопределеннойОбязательностьюЗаполнения, "Длина");		
	
	Возврат РеквизитыСПереопределеннойОбязательностьюЗаполнения;
	
КонецФункции

Процедура ПереопределитьОбязательностьЗаполненияРеквизитовМеры(Объект, РеквизитыСПереопределеннойОбязательностьюЗаполнения, Мера)
	
	Если Объект = Неопределено Тогда
		РеквизитыСПереопределеннойОбязательностьюЗаполнения.Вставить(Мера + "Числитель", Ложь);	
		РеквизитыСПереопределеннойОбязательностьюЗаполнения.Вставить(Мера + "Знаменатель", Ложь);	
	Иначе
		РеквизитыСПереопределеннойОбязательностьюЗаполнения.Вставить(Мера + "Числитель", Объект[Мера + "Использовать"]);	
		РеквизитыСПереопределеннойОбязательностьюЗаполнения.Вставить(Мера + "Знаменатель", Объект[Мера + "Использовать"]);	
	КонецЕсли;	
	
КонецПроцедуры

// ++ rarus yukuzi 25.02.2021   // ФТ.СНБ.02. Задача_Штрихкодирование
#Область Печать

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	Судно=vftОбщегоНазначения.ПолучитьЗначениеПоУмолчанию("ОсновноеСудно");
	Если ЗначениеЗаполнено(Судно) тогда
		ПараметрыФО= Новый Структура("Период, Судно", ТекущаяДата(), Судно);
	иначе
		ПараметрыФО= Новый Структура("Период", ТекущаяДата());
	КонецЕсли;
	Если ПолучитьФункциональнуюОпцию("рарусИспользоватьШтрихкодирование",  ПараметрыФО) Тогда
				
		// Этикетки
		КомандаПечати = КомандыПечати.Добавить();	
		КомандаПечати.Идентификатор = "ЭтикеткиОтдельные";
		КомандаПечати.Представление = НСтр("ru = 'Этикетки';
		|en = 'Labels'");
		
		КомандаПечати = КомандыПечати.Добавить();	
		КомандаПечати.Идентификатор = "ЭтикеткиА4";
		КомандаПечати.Представление = НСтр("ru = 'Этикетки (формат А4)';
		|en = 'Labels A4'");	

	КонецЕсли;
	
	// -- rarus yukuzi 15.02.2021
	
КонецПроцедуры
// ++ rarus yukuzi 17.02.2021   // ФТ.СНБ.02. Задача_Штрихкодирование
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЭтикеткиОтдельные") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ЭтикеткиОтдельные",
		НСтр("ru = 'Этикетки';
		|en = 'Labels'"),
		рарусШтрихкодирование.СформироватьПечатнуюФормуЭтикетка(  ДанныеДляПечатиЭтикетки(МассивОбъектов), "ОбщиеМакеты.ПФ_MXL_Этикетки", Истина)
		,
		,
		"ОбщиеМакеты.ПФ_MXL_Этикетки"
		);
		
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЭтикеткиА4") Тогда
		 ОтображатьКоличество=Ложь;

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ЭтикеткиА4",
		НСтр("ru = 'Этикетки';
		|en = 'Labels'"),
		рарусШтрихкодирование.СформироватьПечатнуюФормуЭтикетка(   ДанныеДляПечатиЭтикетки(МассивОбъектов), "Документ.впПриходТМЦ.ПФ_MXL_Этикетки")
		,
		,
		"Документ.впПриходТМЦ.ПФ_MXL_Этикетки"
		);
		
	КонецЕсли;		    	    	

КонецПроцедуры

Функция ДанныеДляПечатиЭтикетки(Ссылки) Экспорт
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	Номенклатура.рспбКодMDG КАК рспбКодMDG,
	|	&ОсновноеСудно КАК Судно
	|ПОМЕСТИТЬ втНомен
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка В(&Ссылки)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(рарусШтрихкодыНоменклатуры.Штрихкод) КАК Штрихкод,
	|	рарусШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ втШК
	|ИЗ
	|	втНомен КАК втНомен
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.рарусШтрихкодыНоменклатуры КАК рарусШтрихкодыНоменклатуры
	|		ПО втНомен.Номенклатура = рарусШтрихкодыНоменклатуры.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	рарусШтрихкодыНоменклатуры.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураДополнительныеРеквизиты.Ссылка КАК Номенклатура,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НоменклатураДополнительныеРеквизиты.Свойство В (&СвойствоКаталожныйНомер)
	|				ТОГДА НоменклатураДополнительныеРеквизиты.Значение
	|		КОНЕЦ) КАК ДопРекв_КаталожныйНомер,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НоменклатураДополнительныеРеквизиты.Свойство В (&СвойствоМодель)
	|				ТОГДА НоменклатураДополнительныеРеквизиты.Значение
	|		КОНЕЦ) КАК ДопРекв_Модель,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НоменклатураДополнительныеРеквизиты.Свойство В (&СвойствоПроизводитель)
	|				ТОГДА НоменклатураДополнительныеРеквизиты.Значение
	|		КОНЕЦ) КАК ДопРекв_Производитель,
	|	НоменклатураДополнительныеРеквизиты.Ссылка.ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ втДопРеквизиты
	|ИЗ
	|	Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	|ГДЕ
	|	НоменклатураДополнительныеРеквизиты.Ссылка В
	|			(ВЫБРАТЬ
	|				втНомен.Номенклатура КАК Номенклатура
	|			ИЗ
	|				втНомен КАК втНомен)
	|	И (НоменклатураДополнительныеРеквизиты.Свойство В (&СвойствоКаталожныйНомер)
	|			ИЛИ НоменклатураДополнительныеРеквизиты.Свойство В (&СвойствоМодель)
	|			ИЛИ НоменклатураДополнительныеРеквизиты.Свойство В (&СвойствоПроизводитель))
	|
	|СГРУППИРОВАТЬ ПО
	|	НоменклатураДополнительныеРеквизиты.Ссылка,
	|	НоменклатураДополнительныеРеквизиты.Ссылка.ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНомен.Номенклатура КАК Номенклатура,
	|	втНомен.Судно КАК Судно,
	|	ПРЕДСТАВЛЕНИЕ(втНомен.Номенклатура) КАК НоменклатураПредставление,
	|	ПРЕДСТАВЛЕНИЕ(втНомен.Судно) КАК СудноПредставление,
	|	ЕСТЬNULL(втШК.Штрихкод, """") КАК Штрихкод,
	|	1 КАК Количество,
	|	1 КАК КоличествоПечати,
	|	втДопРеквизиты.ДопРекв_КаталожныйНомер КАК НомерКаталога,
	|	втДопРеквизиты.ДопРекв_Модель КАК ОборудованиеПредставление,
	|	втДопРеквизиты.ДопРекв_Производитель КАК ПроизводительПредставление,
	|	ПРЕДСТАВЛЕНИЕ(втДопРеквизиты.ВидНоменклатуры) КАК ТипОборудованияПредставление
	|ИЗ
	|	втНомен КАК втНомен
	|		ЛЕВОЕ СОЕДИНЕНИЕ втШК КАК втШК
	|		ПО втНомен.Номенклатура = втШК.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ втДопРеквизиты КАК втДопРеквизиты
	|		ПО втНомен.Номенклатура = втДопРеквизиты.Номенклатура");
	
	Запрос.УстановитьПараметр("Ссылки", Ссылки);
	Запрос.УстановитьПараметр("ОсновноеСудно", vftОбщегоНазначения.ПолучитьЗначениеПоУмолчанию("ОсновноеСудно"));
	рарусШтрихкодирование.ПараметрыЗапросаПоДопреквизитам(Запрос);
	
	
	УстановитьПривилегированныйРежим(Истина);
	//Возврат Запрос.Выполнить().Выбрать();
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// -- rarus yukuzi 17.02.2021

#КонецОбласти

// -- rarus yukuzi 25.02.2021




