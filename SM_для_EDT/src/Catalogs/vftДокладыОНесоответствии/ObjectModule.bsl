#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс
	
Процедура ПриКопировании(ОбъектКопирования)
	
	vftОбщиеПроцедурыДокументовСервер.ПриКопировании(ЭтотОбъект, ОбъектКопирования);
	
	Код = "";
	Дата = ТекущаяДата();
	
КонецПроцедуры
	
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
		
		Если ОбменДанными.Загрузка  Тогда
			
			Возврат;
			
		КонецЕсли; 
		
		//Установим новый номер
		Если Код = "" Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЕСТЬNULL(МАКСИМУМ(vftДокладыОНесоответствии.НомерДоклада), 0) КАК НомерДоклада
			|ИЗ
			|	Справочник.vftДокладыОНесоответствии КАК vftДокладыОНесоответствии
			|ГДЕ
			|	vftДокладыОНесоответствии.Судно = &Судно
			|	И НАЧАЛОПЕРИОДА(vftДокладыОНесоответствии.Дата, ГОД) = НАЧАЛОПЕРИОДА(&Дата, ГОД)";
			
			Запрос.УстановитьПараметр("Дата", Дата);
			Запрос.УстановитьПараметр("Судно", Судно);
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			Если Выборка.Следующий() Тогда
				НомерДоклада = Выборка.НомерДоклада + 1;
			КонецЕсли; 
			
			Код = Строка(НомерДоклада) + "/" + Формат(дата,"ДФ=yy");
			
		КонецЕсли; 
		
		// ++ ilshill 15.01.2021 
		
		// Проверки перенесены в обработчик
		
		//МассивРеквизитовДляОбязательногоЗаполнения = Новый Массив;
		//
		//Если Статус <> Перечисления.vftСтатусыДокументовСообщений.Черновик Тогда
		//	
		//	МассивРеквизитовДляОбязательногоЗаполнения.Добавить("ФИОКапитана");
		//	МассивРеквизитовДляОбязательногоЗаполнения.Добавить("ФИОИнспектора");
		//	МассивРеквизитовДляОбязательногоЗаполнения.Добавить("ИнспектирующийОрган");
		//	МассивРеквизитовДляОбязательногоЗаполнения.Добавить("МестоИнспекции");
		//	МассивРеквизитовДляОбязательногоЗаполнения.Добавить("ДатаИнспекции");
		//			
		//КонецЕсли; 
		
		//Отказ = НЕ ПроверитьЗаполнение();
		//
		//vftОбщиеПроцедурыДокументовСервер.ПроверитьЗаполнениеРеквизитов(ЭтотОбъект,МассивРеквизитовДляОбязательногоЗаполнения,Отказ);
		//
		//Если Статус <> Перечисления.vftСтатусыДокументовСообщений.Черновик Тогда
		//	
		//	//Проверим что есть несоответствия и их статус <= статусу документа
		//	Запрос = Новый Запрос;
		//	Запрос.Текст = 
		//	"ВЫБРАТЬ
		//	|	ВЫБОР
		//	|		КОГДА vftНесоответствия.Статус = ЗНАЧЕНИЕ(Перечисление.vftСтатусыДокументовСообщений.Черновик)
		//	|			ТОГДА 0
		//	|		КОГДА vftНесоответствия.Статус = ЗНАЧЕНИЕ(Перечисление.vftСтатусыДокументовСообщений.Отправлен)
		//	|			ТОГДА 1
		//	|		КОГДА vftНесоответствия.Статус = ЗНАЧЕНИЕ(Перечисление.vftСтатусыДокументовСообщений.Получен)
		//	|			ТОГДА 2
		//	|		КОГДА vftНесоответствия.Статус = ЗНАЧЕНИЕ(Перечисление.vftСтатусыДокументовСообщений.Закрыт)
		//	|			ТОГДА 3
		//	|	КОНЕЦ КАК СтатусНесоответствия,
		//	|	vftНесоответствия.Ссылка
		//	|ИЗ
		//	|	Справочник.vftНесоответствия КАК vftНесоответствия
		//	|ГДЕ
		//	|	vftНесоответствия.ПометкаУдаления = ЛОЖЬ
		//	|	И vftНесоответствия.Владелец = &Владелец";
		//	
		//	Если ЭтотОбъект.Статус = Перечисления.vftСтатусыДокументовСообщений.Черновик Тогда
		//		СтатусДокумента = 0;
		//	ИначеЕсли ЭтотОбъект.Статус = Перечисления.vftСтатусыДокументовСообщений.Отправлен Тогда
		//		СтатусДокумента = 1;
		//	ИначеЕсли ЭтотОбъект.Статус = Перечисления.vftСтатусыДокументовСообщений.Получен Тогда
		//		СтатусДокумента = 2;
		//	Иначе
		//		СтатусДокумента = 3;
		//	КонецЕсли;
		//	//		"ВЫБРАТЬ
		//	//|	ВЫБОР
		//	//|		КОГДА vftНесоответствия.Статус = ЗНАЧЕНИЕ(Перечисление.vftСтатусыДокументовСообщений.Черновик)
		//	//|			ТОГДА 0
		//	//|		КОГДА vftНесоответствия.Статус = ЗНАЧЕНИЕ(Перечисление.vftСтатусыДокументовСообщений.Отправлен)
		//	//|			ТОГДА 1
		//	//|		КОГДА vftНесоответствия.Статус = ЗНАЧЕНИЕ(Перечисление.vftСтатусыДокументовСообщений.Получен)
		//	//|			ТОГДА 2
		//	//|		КОГДА vftНесоответствия.Статус = ЗНАЧЕНИЕ(Перечисление.vftСтатусыДокументовСообщений.Закрыт)
		//	//|			ТОГДА 3
		//	//|	КОНЕЦ КАК СтатусНесоответствия,
		//	//|	ВЫБОР
		//	//|		КОГДА vftНесоответствия.Владелец.Статус = ЗНАЧЕНИЕ(Перечисление.vftСтатусыДокументовСообщений.Черновик)
		//	//|			ТОГДА 0
		//	//|		КОГДА vftНесоответствия.Владелец.Статус = ЗНАЧЕНИЕ(Перечисление.vftСтатусыДокументовСообщений.Отправлен)
		//	//|			ТОГДА 1
		//	//|		КОГДА vftНесоответствия.Владелец.Статус = ЗНАЧЕНИЕ(Перечисление.vftСтатусыДокументовСообщений.Получен)
		//	//|			ТОГДА 2
		//	//|		КОГДА vftНесоответствия.Владелец.Статус = ЗНАЧЕНИЕ(Перечисление.vftСтатусыДокументовСообщений.Закрыт)
		//	//|			ТОГДА 3
		//	//|	КОНЕЦ КАК СтатусДоклада,
		//	//|	vftНесоответствия.Ссылка
		//	//|ИЗ
		//	//|	Справочник.vftНесоответствия КАК vftНесоответствия
		//	//|ГДЕ
		//	//|	vftНесоответствия.ПометкаУдаления = ЛОЖЬ
		//	//|	И vftНесоответствия.Владелец = &Владелец";
		
		//	Запрос.УстановитьПараметр("Владелец", Ссылка);
		//	
		//	Выборка =  Запрос.Выполнить().Выбрать();
		//	
		//	Если Выборка.Количество() = 0  Тогда
		//		Сообщение = Новый СообщениеПользователю;
		//		Сообщение.Текст = "В докладе отсутствуют несоответствия.";
		//		//Сообщение.Поле = "СписокНесоответствий";
		//		//Сообщение.ПутьКДанным = "СписокНесоответствий";   		
		//		Сообщение.Сообщить(); 
		//		Отказ = Истина;
		//	КонецЕсли; 
		//	
		//	Пока Выборка.Следующий() Цикл
		//		
		//		Если СтатусДокумента > Выборка.СтатусНесоответствия Тогда
		//			
		//			Сообщение = Новый СообщениеПользователю;
		//			Сообщение.Текст = "Статус несоответствия " + Строка(Выборка.Ссылка) + "ниже статуса доклада.Документ не будет записан.";
		//			//Сообщение.Поле = "СписокНесоответствий";
		//			//Сообщение.ПутьКДанным = "СписокНесоответствий";
		//			Сообщение.Сообщить(); 
		//			Отказ = Истина;
		//			
		//		КонецЕсли; 
		//		
		//	КонецЦикла; 
		//	
		//	
		//КонецЕсли;
		// -- ilshill 15.01.2021 
		
	КонецПроцедуры
	
Процедура ПриУстановкеНовогоКода(СтандартнаяОбработка, Префикс)
		
		Префикс =  Судно.КодБыстрогоВвода;
		
КонецПроцедуры
	
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
			
	Если ПолучитьФункциональнуюОпцию("рарусИспользоватьФункционалСУБ") Тогда
		рарусСУБСервер.ОбработкаЗаполнениеДокументовСУБ(ЭтотОбъект);			
	КонецЕсли;
		
КонецПроцедуры
	
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
		
		МассивНепроверяемыхРеквизитов = Новый Массив;
				
		ИспользоватьФункционалСУБ = ПолучитьФункциональнуюОпцию("рарусИспользоватьФункционалСУБ");
				
		Если ИспользоватьФункционалСУБ Тогда
			
			МассивНепроверяемыхРеквизитов.Добавить("ФИОКапитана");
			МассивНепроверяемыхРеквизитов.Добавить("ФИОИнспектора");
			МассивНепроверяемыхРеквизитов.Добавить("ИнспектирующийОрган");
			МассивНепроверяемыхРеквизитов.Добавить("МестоИнспекции");
			МассивНепроверяемыхРеквизитов.Добавить("ДатаИнспекции");
			
		Иначе
			
			Если Статус = Перечисления.vftСтатусыДокументовСообщений.Черновик Тогда
				
				МассивНепроверяемыхРеквизитов.Добавить("ФИОКапитана");
				МассивНепроверяемыхРеквизитов.Добавить("ФИОИнспектора");
				МассивНепроверяемыхРеквизитов.Добавить("ИнспектирующийОрган");
				МассивНепроверяемыхРеквизитов.Добавить("МестоИнспекции");
				МассивНепроверяемыхРеквизитов.Добавить("ДатаИнспекции");
				
			КонецЕсли;
			
		КонецЕсли;
				
			Если Статус <> Перечисления.vftСтатусыДокументовСообщений.Черновик Тогда
				
				Запрос = Новый Запрос;
				ТекстЗапроса = 
				"ВЫБРАТЬ
				|	ВЫБОР
				|		КОГДА vftНесоответствия.Статус = ЗНАЧЕНИЕ(Перечисление.vftСтатусыДокументовСообщений.Черновик)
				|			ТОГДА 0
				|		КОГДА vftНесоответствия.Статус = ЗНАЧЕНИЕ(Перечисление.vftСтатусыДокументовСообщений.Отправлен)
				|			ТОГДА 1
				|		КОГДА vftНесоответствия.Статус = ЗНАЧЕНИЕ(Перечисление.vftСтатусыДокументовСообщений.Получен)
				|			ТОГДА 2
				|		КОГДА vftНесоответствия.Статус = ЗНАЧЕНИЕ(Перечисление.vftСтатусыДокументовСообщений.Закрыт)
				|			ТОГДА 3
				|	КОНЕЦ КАК СтатусНесоответствия,
				|	vftНесоответствия.Ссылка КАК Ссылка
				|ИЗ
				|	Справочник.vftНесоответствия КАК vftНесоответствия
				|ГДЕ
				|	vftНесоответствия.ПометкаУдаления = ЛОЖЬ
				|	И (vftНесоответствия.Владелец = &ВладелецЗамечания
				|			ИЛИ vftНесоответствия.ВладелецЗамечания = &ВладелецЗамечания)";
							
				//|	И &УсловиеЗапроса = &ВладелецЗамечания";
				
				//Если ИспользоватьФункционалСУБ Тогда
				//	ТекстЗапроса = СтрЗаменить(ТекстЗапроса , "&УсловиеЗапроса", "vftНесоответствия.ВладелецЗамечания");
				//Иначе
				//	ТекстЗапроса = СтрЗаменить(ТекстЗапроса , "&УсловиеЗапроса", "vftНесоответствия.Владелец");				
				//КонецЕсли;
				
				Запрос.Текст =  ТекстЗапроса;
				
				Запрос.УстановитьПараметр("ВладелецЗамечания", Ссылка);
				
				Если ЭтотОбъект.Статус = Перечисления.vftСтатусыДокументовСообщений.Черновик Тогда
					СтатусДокумента = 0;
				ИначеЕсли ЭтотОбъект.Статус = Перечисления.vftСтатусыДокументовСообщений.Отправлен Тогда
					СтатусДокумента = 1;
				ИначеЕсли ЭтотОбъект.Статус = Перечисления.vftСтатусыДокументовСообщений.Получен Тогда
					СтатусДокумента = 2;
				Иначе
					СтатусДокумента = 3;
				КонецЕсли;
				
				РезультатЗапроса = Запрос.Выполнить();
				
				Если Не РезультатЗапроса.Пустой() Тогда
					
					Выборка = РезультатЗапроса.Выбрать();
					
					//Если Не ИспользоватьФункционалСУБ Тогда
											
						Пока Выборка.Следующий() Цикл
							
							Если СтатусДокумента > Выборка.СтатусНесоответствия Тогда
								
								ТекстОшибки = НСтр("ru = 'Статус несоответствия %НомерСтроки% ниже статуса доклада.Документ не будет записан'");
								ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НомерСтроки%", Выборка.Ссылка);
								
								ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
								ТекстОшибки,
								ЭтотОбъект
								,
								,
								,Отказ);
								
							КонецЕсли;
							
						КонецЦикла;
						
					//КонецЕсли;
					
				Иначе
					
					ТекстОшибки = НСтр("ru = 'В докладе отсутствуют несоответствия.'");
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект,,, Отказ);
					
				КонецЕсли;
				
			КонецЕсли;
				
		
		ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);	
		
	КонецПроцедуры
	
#КонецОбласти
	
#КонецЕсли
