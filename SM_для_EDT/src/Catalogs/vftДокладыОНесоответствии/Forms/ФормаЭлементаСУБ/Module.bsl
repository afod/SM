#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	
	НастроитьФормуИОбновитьРеквизиты(ЭтотОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ГруппаГлобальные;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтаФорма, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//СтандартныеПодсистемы.РаботаСФайлами
	ПараметрыГиперссылки = РаботаСФайлами.ГиперссылкаФайлов();
	ПараметрыГиперссылки.Размещение = "КоманднаяПанель";
	РаботаСФайлами.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыГиперссылки);
	//Конец СтандартныеПодсистемы.РаботаСФайлами

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
			
	ДополнительныеПараметры = рарусСУБСервер.ПараметрыПриСозданииНаСервере();
	ДополнительныеПараметры.Форма = ЭтотОбъект;
	ИспользоватьКоманду = рарусСУБСервер.ПолучитьПризнакОтображенияКомандыСменыСтатусов(Объект.Статус);
	ДополнительныеПараметры.ИспользоватьКоманду = ИспользоватьКоманду;	
	ДополнительныеПараметры.МестоРазмещенияКоманд =  Элементы.ПодменюСтатус;

	рарусСУБСервер.РазместитьКомандуОтменыСтатусаНаФорме(ДополнительныеПараметры);
	
	Если Объект.Статус = Перечисления.vftСтатусыДокументовСообщений.Отправлен
		Или Объект.Статус = Перечисления.vftСтатусыДокументовСообщений.Получен
		Или Объект.Статус = Перечисления.vftСтатусыДокументовСообщений.Закрыт Тогда  	
		ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	СобытияФорм.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	
	Если Объект.Статус = Перечисления.vftСтатусыДокументовСообщений.Отправлен 
		Или Объект.Статус = Перечисления.vftСтатусыДокументовСообщений.Получен
		Или Объект.Статус = Перечисления.vftСтатусыДокументовСообщений.Закрыт Тогда  
		
		ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ОбновитьЖурналДокументов"); 
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,"ВладелецЗамечания",Объект.Ссылка,ВидСравненияКомпоновкиДанных.Равно,,Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.РаботаСФайлами
	РаботаСФайламиКлиент.ПриОткрытии(ЭтотОбъект, Отказ);
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.РаботаСФайлами
	РаботаСФайламиКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия);
	// Конец СтандартныеПодсистемы.РаботаСФайлами

КонецПроцедуры
	
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы



#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
		
	СтандартнаяОбработка = Ложь;
	
	ИзменитьЭлемент(Элемент);

КонецПроцедуры

&НаКлиенте
Процедура СписокНесоответствийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;	
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда	
						
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Ключ", Объект.Ссылка);
		
		ПараметрыЗаполнения = Новый Структура;
		ПараметрыЗаполнения.Вставить("ВладелецЗамечания", Объект.Ссылка);
		////  - временно
		ПараметрыЗаполнения.Вставить("Владелец", Объект.Ссылка);
		////  - временно
		ПараметрыЗаполнения.Вставить("Судно", Объект.Судно);
		
		Если Копирование Тогда  
			
			ТекущаяСтрока = Элемент.ТекущиеДанные;
			
			ПараметрыКопирования = ПолучитьЗначениеРеквизитовЗамечанияДляКопирования(ТекущаяСтрока.Ссылка);
			
			ПараметрыЗаполнения.Вставить("ТипЗамечания",            ПараметрыКопирования.ТипЗамечания);
			ПараметрыЗаполнения.Вставить("ВопросАнкетирования",     ПараметрыКопирования.ВопросАнкетирования);
			ПараметрыЗаполнения.Вставить("ОписаниеНесоответствия",  ПараметрыКопирования.ОписаниеНесоответствия);
			ПараметрыЗаполнения.Вставить("ПричинаНесоответствия",   ПараметрыКопирования.ПричинаНесоответствия);
			ПараметрыЗаполнения.Вставить("КорректирующиеДействия",  ПараметрыКопирования.КорректирующиеДействия);
			ПараметрыЗаполнения.Вставить("ПредупреждающиеДействия", ПараметрыКопирования.ПредупреждающиеДействия);
			ПараметрыЗаполнения.Вставить("КодЗамечаний",            ПараметрыКопирования.КодЗамечаний);
			ПараметрыЗаполнения.Вставить("КодУстраненияЗамечания",  ПараметрыКопирования.КодУстраненияЗамечания);
			ПараметрыЗаполнения.Вставить("СсылкаНаДокумент",        ПараметрыКопирования.СсылкаНаДокумент);
			ПараметрыЗаполнения.Вставить("ОписаниеССайтаOCIMF",     ПараметрыКопирования.ОписаниеССайтаOCIMF);
			ПараметрыЗаполнения.Вставить("ДополнительныйКомментарийНесоответствие", ПараметрыКопирования.ДополнительныйКомментарийНесоответствие);
			
		КонецЕсли;
		
		ОписаниеОповещения  = Новый ОписаниеОповещения("ДобавлениеЗамечаниеЗавершение", ЭтотОбъект);
				
		ОткрытьФорму("Справочник.vftНесоответствия.ФормаОбъекта",
		              Новый Структура("ЗначенияЗаполнения, ДополнительныеПараметры",
					                   ПараметрыЗаполнения, ДополнительныеПараметры), ЭтотОбъект,,,,ОписаниеОповещения);		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Доклад не записан. Для добавления несоответствий запишите документ.';
		                                               |en = 'You must fill in the Corrective Action field on the page: Remarks'"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуСменыСтатуса(Команда)

	рарусСУБКлиент.ПриИзмененииСменыСтатуса(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуВзаимодействияСБерегом(Команда)
	
	Если Команда.Имя = "ОтправитьВБереговоеПодразделение" Тогда
		Если ПроверитьПодчиненныыеЗамечанияПередОтправкой() Тогда
			Объект.Статус = ПредопределенноеЗначение("Перечисление.vftСтатусыДокументовСообщений.Отправлен");
			ПараметрыЗаписи = Новый Структура;
			ПараметрыЗаписи.Вставить("РежимЗаписи", РежимЗаписиДокумента.Запись);
			Если ЭтотОбъект.Записать(ПараметрыЗаписи) Тогда
				ЭтотОбъект.Закрыть();
			КонецЕсли		
		КонецЕсли;	
	Иначе	
		рарусСУБКлиент.ПриИзмененииСтатусаВзаимодействияСБерегом(ЭтотОбъект, Команда.Имя);	
	КонецЕсли;
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда) Экспорт
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды() Экспорт
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
    ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.РаботаСФайлами
&НаКлиенте
Процедура Подключаемый_КомандаПанелиПрисоединенныхФайлов(Команда)
	
	РаботаСФайламиКлиент.КомандаУправленияПрисоединеннымиФайлами(ЭтотОбъект, Команда);

КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраНажатие(Элемент, СтандартнаяОбработка)
	РаботаСФайламиКлиент.ПолеПредпросмотраНажатие(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	РаботаСФайламиКлиент.ПолеПредпросмотраПеретаскивание(ЭтотОбъект, Элемент,ПараметрыПеретаскивания, СтандартнаяОбработка);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	РаботаСФайламиКлиент.ПолеПредпросмотраПроверкаПеретаскивания(ЭтотОбъект, Элемент,ПараметрыПеретаскивания, СтандартнаяОбработка);
КонецПроцедуры
// СтандартныеПодсистемы.РаботаСФайлами

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	рарусСУБСервер.УстановитьУсловноеОформление(ЭтотОбъект);
	
	УстановитьОтборДинамическогоСпискаФормы(ЭтотОбъект);
	
КонецПроцедуры


&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборДинамическогоСпискаФормы(Форма)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Форма.Список.Отбор, "ВладелецЗамечания",
	     ?(ЗначениеЗаполнено(Объект.Ссылка), Объект.Ссылка, 
	         ПредопределенноеЗначение("Справочник.vftДокладыОНесоответствии.ПустаяСсылка")
	          ),ВидСравненияКомпоновкиДанных.Равно,,Истина);
	
	
КонецПроцедуры

#КонецОбласти

#Область ПриИзмененииРеквизитов

#КонецОбласти

#Область Прочее

&НаСервере
Функция ПроверитьПодчиненныыеЗамечанияПередОтправкой()

	ТаблицаЗамечаний = Справочники.vftДокладыОНесоответствии.ПолучитьТаблицуЗначенийЗамечаний(Объект.Ссылка);
	
	Для Каждого СтрокаТч Из ТаблицаЗамечаний Цикл
		
		ОбъектЗамечание = СтрокаТч.Ссылка.ПолучитьОбъект();
		ОбъектЗамечание.Статус = Перечисления.vftСтатусыДокументовСообщений.Отправлен;
		
		Отказ = Не ОбъектЗамечание.ПроверитьЗаполнение();
		
		Если Отказ Тогда			
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Не Отказ Тогда
		
		Для Каждого СтрокаТч Из ТаблицаЗамечаний Цикл
			
			ОбъектЗамечание = СтрокаТч.Ссылка.ПолучитьОбъект();
			ОбъектЗамечание.Статус = Перечисления.vftСтатусыДокументовСообщений.Отправлен;
			
			НачатьТранзакцию();	
			
			Попытка
					
				ОбъектЗамечание.Записать();	
				ЗафиксироватьТранзакцию();
				
			Исключение
				
				ОтменитьТранзакцию();
				ВызватьИсключение;
				
			КонецПопытки;
			
		КонецЦикла;
		
	Иначе
		Возврат Ложь;				
	КонецЕсли;
	
	Возврат Истина;	
	
КонецФункции

&НаКлиенте
Процедура ДобавлениеЗамечаниеЗавершение(Результат, ДополнительныеПараметры) Экспорт 
	
	УстановитьОтборДинамическогоСпискаФормы(ЭтотОбъект);
	
	НастроитьФормуИОбновитьРеквизиты(ЭтотОбъект);
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьФормуИОбновитьРеквизиты(Форма)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	Объект.ДатаЗакрытияДоклада = ПолучитьДатуЗакрытияДоклада(Объект.Ссылка);
	
 КонецПроцедуры
 
&НаСервереБезКонтекста
Функция ПолучитьДатуЗакрытияДоклада(Владелец)
	
	ВсеЗамечанияЗакрыты = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	vftНесоответствия.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.vftНесоответствия КАК vftНесоответствия
	               |ГДЕ
	               |	vftНесоответствия.Статус <> ЗНАЧЕНИЕ(Перечисление.vftСтатусыДокументовСообщений.Закрыт)
	               |	И vftНесоответствия.ВладелецЗамечания = &ВладелецЗамечания";
	
	Запрос.УстановитьПараметр("ВладелецЗамечания", Владелец);
	
	Если Запрос.Выполнить().Пустой() Тогда
		ВсеЗамечанияЗакрыты = Истина;	
	КонецЕсли;
	
	Если ВсеЗамечанияЗакрыты Тогда	
			
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	МАКСИМУМ(vftНесоответствия.ДатаУстранения) КАК ДатаУстранения
		|ИЗ
		|	Справочник.vftНесоответствия КАК vftНесоответствия
		|ГДЕ
		|	vftНесоответствия.ВладелецЗамечания = &ВладелецЗамечания";
		
		Запрос.УстановитьПараметр("ВладелецЗамечания",Владелец);
		
		РезультатЗапроса = Запрос.Выполнить();	
		Выборка = РезультатЗапроса.Выбрать();	
		Выборка.Следующий();
		
		ДатаЗакрытия = Выборка.ДатаУстранения;	
	Иначе		
		ДатаЗакрытия = Дата(1,1,1);
	КонецЕсли;
	
	Возврат  ДатаЗакрытия;
	
КонецФункции

&НаКлиенте
Процедура ИзменитьЭлемент(Список) Экспорт
	
	ТекущиеДанные = Список.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.Ссылка) Тогда
		ПоказатьЗначение(Неопределено, ТекущиеДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЗначениеРеквизитовЗамечанияДляКопирования(Замечание)
	
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	|	vftНесоответствия.ОписаниеНесоответствия КАК ОписаниеНесоответствия,
	|	vftНесоответствия.ПричинаНесоответствия КАК ПричинаНесоответствия,
	|	vftНесоответствия.КорректирующиеДействия КАК КорректирующиеДействия,
	|	vftНесоответствия.СсылкаНаДокумент КАК СсылкаНаДокумент,
	|	vftНесоответствия.ПредупреждающиеДействия КАК ПредупреждающиеДействия,
	|	vftНесоответствия.КодУстраненияЗамечания КАК КодУстраненияЗамечания,
	|	vftНесоответствия.КодЗамечаний КАК КодЗамечаний,
	|	vftНесоответствия.ОписаниеССайтаOCIMF КАК ОписаниеССайтаOCIMF,
	|	vftНесоответствия.ДополнительныйКомментарийНесоответствие КАК ДополнительныйКомментарийНесоответствие,
	|	vftНесоответствия.ТипЗамечания КАК ТипЗамечания,
	|	vftНесоответствия.ВопросАнкетирования КАК ВопросАнкетирования
	|ИЗ
	|	Справочник.vftНесоответствия КАК vftНесоответствия
	|ГДЕ
	|	vftНесоответствия.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Замечание);
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Выборка.Следующий();
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ОписаниеНесоответствия",                  Выборка.ОписаниеНесоответствия); 
	СтруктураПараметров.Вставить("ПричинаНесоответствия",                   Выборка.ПричинаНесоответствия); 
	СтруктураПараметров.Вставить("КорректирующиеДействия",                  Выборка.КорректирующиеДействия); 
	СтруктураПараметров.Вставить("СсылкаНаДокумент",                        Выборка.СсылкаНаДокумент); 
	СтруктураПараметров.Вставить("ПредупреждающиеДействия",                 Выборка.ПредупреждающиеДействия); 
	СтруктураПараметров.Вставить("КодУстраненияЗамечания",                  Выборка.КодУстраненияЗамечания); 
	СтруктураПараметров.Вставить("КодЗамечаний",                            Выборка.КодЗамечаний); 
	СтруктураПараметров.Вставить("ОписаниеССайтаOCIMF",                     Выборка.ОписаниеССайтаOCIMF); 
	СтруктураПараметров.Вставить("ДополнительныйКомментарийНесоответствие", Выборка.ДополнительныйКомментарийНесоответствие); 
	СтруктураПараметров.Вставить("ТипЗамечания",                            Выборка.ТипЗамечания); 
	СтруктураПараметров.Вставить("ВопросАнкетирования",                     Выборка.ВопросАнкетирования); 
 
	Возврат СтруктураПараметров;
		
КонецФункции

#КонецОбласти




