#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ИнициализироватьПоказатели(Результат = Неопределено) Экспорт
	
	ТаблицаПоставляемыхПоказателей = ТаблицаПоставляемыхПоказателей();
	
	ВыборкаОтсутствующиеПоказатели = ВыборкаОтсутствующиеПоказатели(ТаблицаПоставляемыхПоказателей);
	
	// В Результат будет возвращена таблица с признаком успешного создания элемента.  
	// Если параметр не передан, результат заполняться не будет
	Если Результат <> Неопределено Тогда
		ПроверитьПодготовитьТаблицуРезультата(Результат);
	КонецЕсли;
	
	СоздатьОтсутствующиеПоказатели(ВыборкаОтсутствующиеПоказатели, Результат);
	
КонецПроцедуры

Функция ТаблицаПоставляемыхПоказателей()
	
	ТаблицаПоказателей = Новый ТаблицаЗначений;
	ТаблицаПоказателей.Колонки.Добавить("Владелец", 		Новый ОписаниеТипов("СправочникСсылка.рарусВиджеты"));
	ТаблицаПоказателей.Колонки.Добавить("Код", 				Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(9)));
	ТаблицаПоказателей.Колонки.Добавить("Наименование", 	Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(50)));
	ТаблицаПоказателей.Колонки.Добавить("УчитыватьПериод", 	Новый ОписаниеТипов("Булево"));
	
	//Показатель = ТаблицаПоказателей.Добавить();
	//Показатель.Владелец 		= ПредопределенноеЗначение("Справочник.рарусВиджеты.ПлановыеВнеплановыеРемонты");
	//Показатель.Код 				= "С01.2";
	//Показатель.Наименование 	= "Плановые ремонты";
	//Показатель.УчитыватьПериод 	= Истина;
	//
	//Показатель = ТаблицаПоказателей.Добавить();
	//Показатель.Владелец 		= ПредопределенноеЗначение("Справочник.рарусВиджеты.ПлановыеВнеплановыеРемонты");
	//Показатель.Код 				= "С01.3";
	//Показатель.Наименование 	= "Плановые критические ремонты";
	//Показатель.УчитыватьПериод 	= Истина;

	//Показатель = ТаблицаПоказателей.Добавить();
	//Показатель.Владелец 		= ПредопределенноеЗначение("Справочник.рарусВиджеты.ПлановыеВнеплановыеРемонты");
	//Показатель.Код 				= "С01.4";
	//Показатель.Наименование 	= "Внеплановые ремонты";
	//Показатель.УчитыватьПериод 	= Истина;

	//Показатель = ТаблицаПоказателей.Добавить();
	//Показатель.Владелец 		= ПредопределенноеЗначение("Справочник.рарусВиджеты.ПлановыеВнеплановыеРемонты");
	//Показатель.Код 				= "С01.5";
	//Показатель.Наименование 	= "Внеплановые критические ремонты";
	//Показатель.УчитыватьПериод 	= Истина;

	//Показатель = ТаблицаПоказателей.Добавить();
	//Показатель.Владелец 		= ПредопределенноеЗначение("Справочник.рарусВиджеты.ПлановыеВнеплановыеРемонты");
	//Показатель.Код 				= "С01.6";
	//Показатель.Наименование 	= "Перенесенные ремонты";
	//Показатель.УчитыватьПериод 	= Истина;

	//Показатель = ТаблицаПоказателей.Добавить();
	//Показатель.Владелец 		= ПредопределенноеЗначение("Справочник.рарусВиджеты.ПросроченныеРемонты");
	//Показатель.Код 				= "С02.1";
	//Показатель.Наименование 	= "Просроченные ремонты";
	//Показатель.УчитыватьПериод 	= Истина;

	//Показатель = ТаблицаПоказателей.Добавить();
	//Показатель.Владелец 		= ПредопределенноеЗначение("Справочник.рарусВиджеты.ПросроченныеРемонты");
	//Показатель.Код 				= "С02.2";
	//Показатель.Наименование 	= "Просроченные критические ремонты";
	//Показатель.УчитыватьПериод 	= Истина;
	//
	//Показатель = ТаблицаПоказателей.Добавить();
	//Показатель.Владелец 		= ПредопределенноеЗначение("Справочник.рарусВиджеты.ОстаткиСудовогоСклада");
	//Показатель.Код 				= "С03.3";
	//Показатель.Наименование 	= "Необходимо заказать";
	//Показатель.УчитыватьПериод 	= Истина;

	//Показатель = ТаблицаПоказателей.Добавить();
	//Показатель.Владелец 		= ПредопределенноеЗначение("Справочник.рарусВиджеты.ЗапланированныеМероприятияСУБ");
	//Показатель.Код 				= "С04.2";
	//Показатель.Наименование 	= "Запланированные мероприятия";
	//Показатель.УчитыватьПериод 	= Истина;

	//Показатель = ТаблицаПоказателей.Добавить();
	//Показатель.Владелец 		= ПредопределенноеЗначение("Справочник.рарусВиджеты.ЗапланированныеМероприятияСУБ");
	//Показатель.Код 				= "С04.3";
	//Показатель.Наименование 	= "Проосроченные мероприятия";
	//Показатель.УчитыватьПериод 	= Истина;
	//
	//Показатель = ТаблицаПоказателей.Добавить();
	//Показатель.Владелец 		= ПредопределенноеЗначение("Справочник.рарусВиджеты.НеустраненныеЗамечанияСУБ");
	//Показатель.Код 				= "С05.1";
	//Показатель.Наименование 	= "Неустраненные замечания";
	//Показатель.УчитыватьПериод 	= Истина;
	//
	//Показатель = ТаблицаПоказателей.Добавить();
	//Показатель.Владелец 		= ПредопределенноеЗначение("Справочник.рарусВиджеты.ПриближениеСрокаДействияСудовыхДокументов");
	//Показатель.Код 				= "С06.2";
	//Показатель.Наименование 	= "Приближается срок";
	//Показатель.УчитыватьПериод 	= Истина;
	//
	//Показатель = ТаблицаПоказателей.Добавить();
	//Показатель.Владелец 		= ПредопределенноеЗначение("Справочник.рарусВиджеты.ОтслеживаниеПоказанийНаработки");
	//Показатель.Код 				= "С09.2";
	//Показатель.Наименование 	= "Количество объектов с наработкой";
	//Показатель.УчитыватьПериод 	= Истина;

	Возврат ТаблицаПоказателей;
	
КонецФункции

Функция ВыборкаОтсутствующиеПоказатели(ТаблицаПоставляемыхПоказателей)
	
	Перем ВыборкаОтсутствующиеПоказатели;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаПоставляемых.Владелец КАК Владелец,
		|	ТаблицаПоставляемых.Код КАК Код,
		|	ТаблицаПоставляемых.Наименование КАК Наименование,
		|	ТаблицаПоставляемых.УчитыватьПериод КАК УчитыватьПериод
		|ПОМЕСТИТЬ ВТ_ПараметрПоставляемыеПоказатели
		|ИЗ
		|	&ТаблицаПоставляемых КАК ТаблицаПоставляемых
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПараметрПоставляемыеПоказатели.Владелец КАК Владелец,
		|	ВТ_ПараметрПоставляемыеПоказатели.Код КАК Код,
		|	ВТ_ПараметрПоставляемыеПоказатели.Наименование КАК Наименование,
		|	ВТ_ПараметрПоставляемыеПоказатели.УчитыватьПериод КАК УчитыватьПериод,
		|	ВЫБОР
		|		КОГДА рарусПоказателиВиджетов.Ссылка ССЫЛКА Справочник.рарусПоказателиВиджетов
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Отсутствует
		|ПОМЕСТИТЬ ВТ_ВсеПоставляемыеПоказатели
		|ИЗ
		|	ВТ_ПараметрПоставляемыеПоказатели КАК ВТ_ПараметрПоставляемыеПоказатели
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.рарусПоказателиВиджетов КАК рарусПоказателиВиджетов
		|		ПО ВТ_ПараметрПоставляемыеПоказатели.Код = рарусПоказателиВиджетов.Код
		|			И ВТ_ПараметрПоставляемыеПоказатели.Владелец = рарусПоказателиВиджетов.Владелец
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВсеПоставляемыеПоказатели.Владелец КАК Владелец,
		|	ВТ_ВсеПоставляемыеПоказатели.Код КАК Код,
		|	ВТ_ВсеПоставляемыеПоказатели.Наименование КАК Наименование,
		|	ВТ_ВсеПоставляемыеПоказатели.УчитыватьПериод КАК УчитыватьПериод
		|ИЗ
		|	ВТ_ВсеПоставляемыеПоказатели КАК ВТ_ВсеПоставляемыеПоказатели
		|ГДЕ
		|	ВТ_ВсеПоставляемыеПоказатели.Отсутствует = ИСТИНА";
	
	Запрос.УстановитьПараметр("ТаблицаПоставляемых", ТаблицаПоставляемыхПоказателей);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ВыборкаОтсутствующиеПоказатели = РезультатЗапроса.Выбрать();
		
	КонецЕсли;
	
	Возврат ВыборкаОтсутствующиеПоказатели;
	
КонецФункции

Процедура ПроверитьПодготовитьТаблицуРезультата(Результат)
	
	Если ТипЗнч(Результат) = Тип("ТаблицаЗначений") Тогда
		
		Если Результат.Колонки.Найти("Владелец") = Неопределено Тогда
			Результат.Колонки.Добавить("Владелец", Новый ОписаниеТипов("СправочникСсылка.рарусВиджеты"));;
		КонецЕсли;
		
		Если Результат.Колонки.Найти("Код") = Неопределено Тогда
			Результат.Колонки.Добавить("Код", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(9)));
		КонецЕсли;
		
		Если Результат.Колонки.Найти("Наименование") = Неопределено Тогда
			Результат.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(50)));
		КонецЕсли;
		
		Если Результат.Колонки.Найти("Успешно") = Неопределено Тогда
			Результат.Колонки.Добавить("Успешно", Новый ОписаниеТипов("Булево"));
		КонецЕсли;
		
	Иначе
		
		ВызватьИсключение("Ожидаемый тип параметра ""Результат"" - ТаблицаЗначений - отличается от переданного " + Строка(ТипЗнч(Результат)));
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьОтсутствующиеПоказатели(ВыборкаОтсутствующиеПоказатели, Результат)
	
	Если ВыборкаОтсутствующиеПоказатели <> Неопределено Тогда
		
		Пока ВыборкаОтсутствующиеПоказатели.Следующий() Цикл
			ДобавляемыйПоказатель = Справочники.рарусПоказателиВиджетов.СоздатьЭлемент();
			ДобавляемыйПоказатель.Заполнить(ВыборкаОтсутствующиеПоказатели);
			Попытка
				ДобавляемыйПоказатель.Записать();
				
				Если Результат <> Неопределено Тогда
					СтрокаРезультата = Результат.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРезультата, ВыборкаОтсутствующиеПоказатели);
					СтрокаРезультата.Успешно = Истина;
				КонецЕсли;
				
				ЖурналРегистрации.ДобавитьСообщениеДляЖурналаРегистрации("Инициализация показателя виджета", 
										УровеньЖурналаРегистрации.Информация, 
										Метаданные.Справочники.рарусПоказателиВиджетов, 
										ДобавляемыйПоказатель.Ссылка, 
										"Элемент создан при инициализации показателей");
			Исключение
				
				Если Результат <> Неопределено Тогда
					СтрокаРезультата = Результат.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРезультата, ВыборкаОтсутствующиеПоказатели);
					СтрокаРезультата.Успешно = Ложь;
				КонецЕсли;
				
				ЖурналРегистрации.ДобавитьСообщениеДляЖурналаРегистрации("Инициализация показателя виджета", 
										УровеньЖурналаРегистрации.Ошибка, 
										Метаданные.Справочники.рарусПоказателиВиджетов, 
										, 
										ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				ВызватьИсключение;
			КонецПопытки;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
