#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	УстановитьТекстЗапросаСписка();

	ИспользоватьСУБ = ПолучитьФункциональнуюОпцию("рарусИспользоватьФункционалСУБ");
	
	Элементы.НомерДокументаСУБ.Видимость = ИспользоватьСУБ; 
	//Элементы.Архив.Видимость = ИспользоватьСУБ;
	Элементы.Код.Видимость = Не ИспользоватьСУБ;
	//Элементы.Архивный.Видимость = Не ИспользоватьСУБ;

	 //СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	 //Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьДанныеСписка" Тогда 
		УстановитьТекстЗапросаСписка();	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	                                                              
	УсловноеОформление.Элементы.Очистить();
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле         = Новый ПолеКомпоновкиДанных("Список");
	
	ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Список.Архивный");
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Истина;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Серый);
				
КонецПроцедуры

&НаСервере
Процедура УстановитьТекстЗапросаСписка()
	
	СвойстваСписка = ОбщегоНазначения.СтруктураСвойствДинамическогоСписка();
	ЗаполнитьЗначенияСвойств(СвойстваСписка, Список);
	
	ТекстЗапроса  = "ВЫБРАТЬ
	                |	vftСУБ.Ссылка КАК Ссылка,
	                |	vftСУБ.ПометкаУдаления КАК ПометкаУдаления,
	                |	vftСУБ.Родитель КАК Родитель,
	                |	vftСУБ.ЭтоГруппа КАК ЭтоГруппа,
	                |	vftСУБ.Код КАК Код,
	                |	vftСУБ.Наименование КАК Наименование,
	                |	vftСУБ.Архивный КАК Архивный,
	                |	vftСУБ.Комментарий КАК Комментарий,
	                |	vftСУБ.Предопределенный КАК Предопределенный,
	                |	vftСУБ.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных,
	                |	vftСУБ.НомерДокументаСУБ КАК НомерДокументаСУБ,
	                |	ВЫБОР
	                |		КОГДА ВложенныйЗапрос.ВладелецФайла ЕСТЬ NULL
	                |			ТОГДА 0
	                |		ИНАЧЕ 1
	                |	КОНЕЦ КАК ЕстьПрикрепления
	                |ИЗ
	                |	Справочник.vftСУБ КАК vftСУБ
	                |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	                |			vftСУБПрисоединенныеФайлы.ВладелецФайла КАК ВладелецФайла
	                |		ИЗ
	                |			Справочник.vftСУБПрисоединенныеФайлы КАК vftСУБПрисоединенныеФайлы
	                |		ГДЕ
	                |			НЕ vftСУБПрисоединенныеФайлы.ПометкаУдаления) КАК ВложенныйЗапрос
	                |		ПО vftСУБ.Ссылка = ВложенныйЗапрос.ВладелецФайла";
	
	Если НЕ Архив Тогда
		
		ТекстЗапроса = 	ТекстЗапроса + "
		|ГДЕ
		|	НЕ vftСУБ.Архивный";
		
	КонецЕсли;
	
	СвойстваСписка.ТекстЗапроса = ТекстЗапроса;
	
	ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(Элементы.Список, СвойстваСписка);
	
	УстановитьУсловноеОформление();

КонецПроцедуры

&НаКлиенте
Процедура АрхивПриИзменении(Элемент)
	
	УстановитьТекстЗапросаСписка();
	
КонецПроцедуры


#КонецОбласти

