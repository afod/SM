#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает реквизиты объекта, которые разрешается редактировать
// с помощью обработки группового изменения реквизитов.
//
// Возвращаемое значение:
//  Массив - список имен реквизитов объекта.
Функция РеквизитыРедактируемыеВГрупповойОбработке() Экспорт
	
	Возврат РаботаСФайлами.РеквизитыРедактируемыеВГрупповойОбработке();
	
КонецФункции

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	РаботаСФайлами.ОпределитьФормуПрисоединенногоФайла(
			Справочники.рарусРасходТМЦПрисоединенныеФайлы, 
			ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка);
	
КонецПроцедуры
#КонецОбласти

#Область РегистрацияКОбмену

// Событие выполняется перед применением правила регистрации, в момент, когда запрос к информационной базе для определения узлов-получателей еще не выполнен.
// Контекст выполнения
// Перед записью объекта; При выгрузке объекта.
//
// Параметры:
// 	Отказ 			– Булево – флаг отказа от выполнения правила регистрации. Отказ от выполнения правила означает, 
// 						что объект не будет зарегистрирован на узлах плана обмена, для которого создано это правило.
// 	Объект 			– СправочникОбъект.рарусРасходТМЦПрисоединенныеФайлы - объект для которого выполняется правило регистрации
// 	ОбъектМетаданных– ОбъектМетаданных - объект метаданных, соответствующий параметру Объект.
// 	Выгрузка  		– Булево – (только чтение) параметр определяет контекст выполнения правила регистрации. 
//						Истина – правило регистрации выполняется в контексте выгрузки объекта. 
//						Ложь – правило регистрации выполняется в контексте перед записью объекта.
// 	ПРО 			– СтрокаТаблицыЗначений – ссылка на правило регистрации объектов
//
Процедура ПередОбработкой(ИмяПланаОбмена, Отказ, Объект, ОбъектМетаданных, Выгрузка, ПРО) Экспорт
	
	ОснованиеВладельца = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ВладелецФайла, "ДокументОснование");

	Если ЗначениеЗаполнено(ОснованиеВладельца)
		И (ТипЗнч(ОснованиеВладельца) = Тип("ДокументСсылка.рарусЗаказКлиента")
			ИЛИ ТипЗнч(ОснованиеВладельца) = Тип("ДокументСсылка.рарусЗаказНаПеремещение")) Тогда 
			Отказ = Истина;
			Возврат;
	КонецЕсли;
		
	Если ЕстьНевыгружаемыеКатегории(Объект.ВладелецФайла) Тогда
		Отказ = Истина
	КонецЕсли;

КонецПроцедуры	

#КонецОбласти

#Область ВыгрузкаФайла

// Перед выгрузкой объекта
// Событие выполняется при получении очередного объекта из выборки, до передачи этого объекта правилу конвертации.
//
// Параметры:
// 	Отказ 			- Булево - Если установить значение Истина, то выгрузка объекта производится не будет
// 	Параметры 		- Структура - структура, в которой хранятся переменные доступные во всех обработчиках
// 	ИмяПКО 			- Строка - Имя правила конвертации объектов, указанное по умолчанию в правиле выгрузки данных. При выгрузке конкретных объектов может быть изменено
// 	Правило 		- СтрокаТаблицыЗначений - ссылка на данное правило выгрузки данных
// 	ВходящиеДанные 	- Произвольный - произвольные вспомогательные данные, инициализированные в обработчике «Перед обработкой» правила выгрузки данных как ИсходящиеДанные.
// 	ИсходящиеДанные – Произвольный - произвольные вспомогательные данные, передаваемые правилу конвертации объекта. 
//					В обработчиках ПКО данная информация будет доступна как переменная ВходящиеДанные
// 	Объект 			- СправочникОбъект.рарусРасходТМЦПрисоединенныеФайлы - Выгружаемый объект. Может быть переопределен или назначен непосредственно в обработчике.
//     	
Процедура ПередВыгрузкой(Отказ, Параметры, ИмяПКО, Правило, ВходящиеДанные, ИсходящиеДанные, Объект) Экспорт
	
	КатегорииДокумента = КатегорииДокумента(Объект.ВладелецФайла);
	
	Если КатегорииДокумента <> Неопределено Тогда
		
		ВидОперации = КатегорииДокумента[0].ВидОперации;
		Если ВидОперации = ПредопределенноеЗначение("Перечисление.рарусВидыОперацийРасходаТМЦ.ИзВыданного") Тогда
		    ИмяПКО = "РасходТМЦ_CписаниеИзЭксплуатац_ПрисоединенныеФайлы"
		ИначеЕсли КатегорииДокумента.Найти(ПредопределенноеЗначение("Справочник.рарусКатегорииНоменклатуры.Колпит"), "Категория") <> Неопределено  
			ИЛИ (ПолучитьФункциональнуюОпцию("рарусУчетКартНавигацииКакУслуги") 
			И КатегорииДокумента.Найти(ПредопределенноеЗначение("Справочник.рарусКатегорииНоменклатуры.КартыИПубликации"), "Категория") <> Неопределено) Тогда
			Отказ = Истина
		Иначе
			ИмяПКО = "РасходТМЦ_ВнутреннееПотрТов_ПрисоединенныеФайлы"
		КонецЕсли;
	Иначе
		Отказ = Истина
	КонецЕсли;
		
КонецПроцедуры	

#КонецОбласти

Функция ЕстьНевыгружаемыеКатегории(Ссылка)
	
	РезультатФункции = Ложь;
	
	ИсключаемыеКатегории = Новый Массив;
	ИсключаемыеКатегории.Добавить(ПредопределенноеЗначение("Справочник.рарусКатегорииНоменклатуры.Колпит"));
	Если ПолучитьФункциональнуюОпцию("рарусУчетКартНавигацииКакУслуги") Тогда
		ИсключаемыеКатегории.Добавить(ПредопределенноеЗначение("Справочник.рарусКатегорииНоменклатуры.КартыИПубликации"))
	КонецЕсли;
	
	Запрос = Новый Запрос;

	//Установка значений параметров
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ИсключаемыеКатегории", ИсключаемыеКатегории);

	Запрос.Текст = "ВЫБРАТЬ
	|	КОЛИЧЕСТВО(рарусРасходТМЦТМЦ.Номенклатура) КАК КоличествоСтрок
	|ИЗ
	|	Документ.рарусРасходТМЦ.ТМЦ КАК рарусРасходТМЦТМЦ
	|ГДЕ
	|	рарусРасходТМЦТМЦ.Номенклатура.Категория В (&ИсключаемыеКатегории)
	|	И рарусРасходТМЦТМЦ.Ссылка = &Ссылка";

	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		ВыборкаИсключаемые = РезультатЗапроса.Выбрать();
		ВыборкаИсключаемые.Следующий();
		РезультатФункции = ВыборкаИсключаемые.КоличествоСтрок > 0;
	КонецЕсли;
	
	Возврат РезультатФункции;
	
КонецФункции

Функция КатегорииДокумента(Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	рарусРасходТМЦТМЦ.Ссылка.ВидОперации КАК ВидОперации,
		|	ЕСТЬNULL(рарусКатегорииНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.рарусКатегорииНоменклатуры.ПустаяСсылка)) КАК Категория
		|ИЗ
		|	Документ.рарусРасходТМЦ.ТМЦ КАК рарусРасходТМЦТМЦ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.рарусКатегорииНоменклатуры КАК рарусКатегорииНоменклатуры
		|		ПО рарусРасходТМЦТМЦ.Номенклатура.Категория = рарусКатегорииНоменклатуры.Ссылка
		|ГДЕ
		|	рарусРасходТМЦТМЦ.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		Возврат РезультатЗапроса.Выгрузить()
	Иначе
		Возврат Неопределено
	КонецЕсли;
	
КонецФункции

// ++ rarus makole 2020-12-04 [БСО.ПРОТОКОЛ Р-58 03.12.2020]
// Функция возвращает связанную с объектом информацию, обязательную к выгрузке
//
// Параметры:
//  СсылкаНаОбъект  - СправочникСсылка.впПриходТМЦПрисоединенныеФайлы - ссылка на объект, связанные объекты которого требуется вернуть
//
// Возвращаемое значение:
//   Массив   - Массив структур с ключами "ИмяТипа, Отбор", где ИмяТипа - Строка, представляет полное имя
//				объекта метаданных, Отбор - структура с ключами, соответствующими основному отбору
//
Функция СвязанныеДанные(СсылкаНаОбъект) Экспорт
	
	МассивСвязанных = Новый Массив;
	
	СтруктураОтбора = Новый Структура("Файл", СсылкаНаОбъект);
	СтруктураСведения = Новый Структура("ИмяТипа, Отбор", "РегистрСведений.СведенияОФайлах", СтруктураОтбора);
	МассивСвязанных.Добавить(СтруктураСведения);
	  
	СтруктураОтбора = Новый Структура("ОбъектСФайлами", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СсылкаНаОбъект,"ВладелецФайла"));
	СтруктураНаличие = Новый Структура("ИмяТипа, Отбор", "РегистрСведений.НаличиеФайлов", СтруктураОтбора);
	МассивСвязанных.Добавить(СтруктураНаличие);
	  
	Возврат МассивСвязанных;
	  
КонецФункции // -- rarus makole 2020-12-04 [БСО.ПРОТОКОЛ Р-58 03.12.2020]

#КонецЕсли
