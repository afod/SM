#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьФорму()
	
	Если ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Номенклатура") Тогда
		Элементы.Владелец.Заголовок = НСтр("ru = 'Номенклатура';
											|en = 'Products'");
		Элементы.ДекорацияПредупреждение.Видимость = Ложь;
	Иначе
		Элементы.Владелец.Заголовок = НСтр("ru = 'Набор упаковок';
											|en = 'Packaging set'");
		Элементы.ДекорацияПредупреждение.Видимость = Истина;
	КонецЕсли;

	Если ЗначениеЗаполнено(Объект.ЕдиницаИзмерения) Тогда
		ПредставлениеЕдиницыИзмерения = Строка(Объект.ЕдиницаИзмерения);
	Иначе
		ПредставлениеЕдиницыИзмерения =  НСтр("ru = '<ед. изм. по классификатору>';
												|en = '<classifier UOM>'");
	КонецЕсли;
	
	ТекстПредставления = НСтр("ru = '1 %ЕдиницаПоКлассификатору% состоит из';
								|en = '1 %ЕдиницаПоКлассификатору% contains'");
	ТекстПредставления = СтрЗаменить(ТекстПредставления, "%ЕдиницаПоКлассификатору%", ПредставлениеЕдиницыИзмерения);
	ПунктВыбора = Элементы.ТипУпаковки1.СписокВыбора.НайтиПоЗначению(Перечисления.ТипыУпаковокНоменклатуры.Конечная);
	ПунктВыбора.Представление = ТекстПредставления;
	
	ТекстПредставления = НСтр("ru = '1 %ЕдиницаПоКлассификатору% состоит из';
								|en = '1 %ЕдиницаПоКлассификатору% contains'");
	ТекстПредставления = СтрЗаменить(ТекстПредставления, "%ЕдиницаПоКлассификатору%", ПредставлениеЕдиницыИзмерения);
	ПунктВыбора = Элементы.ТипУпаковки2.СписокВыбора.НайтиПоЗначению(Перечисления.ТипыУпаковокНоменклатуры.Составная);
	ПунктВыбора.Представление = ТекстПредставления;
	
	ТекстПредставления = НСтр("ru = '1 %ЕдиницаИзмеренияВладельца% состоит из';
								|en = '1 %ЕдиницаИзмеренияВладельца% contains'");
	ТекстПредставления = СтрЗаменить(ТекстПредставления, "%ЕдиницаИзмеренияВладельца%", ЕдиницаИзмеренияВладельца);
	ПунктВыбора = Элементы.ТипУпаковки3.СписокВыбора.НайтиПоЗначению(Перечисления.ТипыУпаковокНоменклатуры.Разупаковка);
	ПунктВыбора.Представление = ТекстПредставления;
	
	//Если ИспользоватьОрдерныеСклады Тогда
	//	
		ТекстПредставления = НСтр("ru = 'Входит в состав %ЕдиницаИзмеренияВладельца% в количестве';
									|en = 'Included in %ЕдиницаИзмеренияВладельца% in the amount of'");
		ТекстПредставления = СтрЗаменить(ТекстПредставления, "%ЕдиницаИзмеренияВладельца%", ЕдиницаИзмеренияВладельца);
		ПунктВыбора = Элементы.ТипУпаковки4.СписокВыбора.НайтиПоЗначению(Перечисления.ТипыУпаковокНоменклатуры.ТоварноеМесто);
		ПунктВыбора.Представление = ТекстПредставления;
	//	
	//КонецЕсли;
	
	Элементы.ТипУпаковки4.Видимость        = Истина;
	Элементы.КоличествоУпаковок1.Видимость = Истина;
	Элементы.ЕдиницаИзмерения1.Видимость   = Истина;
	
	Элементы.ТипУпаковки3.Видимость                       = Не Справочники.УпаковкиЕдиницыИзмерения.ЭтоМернаяЕдиница(ЕдиницаИзмеренияВладельца);
	Элементы.Знаменатель.Видимость                        = Элементы.ТипУпаковки3.Видимость;
	Элементы.НадписьЗнаменательЕдиницаИзмерения.Видимость = Элементы.ТипУпаковки3.Видимость;
	Элементы.ДекорацияРазупаковка.Видимость               = Элементы.ТипУпаковки3.Видимость;
	
	Элементы.Числитель.Доступность = Объект.ТипУпаковки = Перечисления.ТипыУпаковокНоменклатуры.Конечная;
	Элементы.Числитель.Родитель.Доступность = Объект.ТипУпаковки = Перечисления.ТипыУпаковокНоменклатуры.Конечная;
	
	Элементы.КоличествоУпаковок.Доступность          = Объект.ТипУпаковки = Перечисления.ТипыУпаковокНоменклатуры.Составная;
	Элементы.КоличествоУпаковок.Родитель.Доступность = Объект.ТипУпаковки = Перечисления.ТипыУпаковокНоменклатуры.Составная;
	
	Элементы.Знаменатель.Доступность = Объект.ТипУпаковки = Перечисления.ТипыУпаковокНоменклатуры.Разупаковка;
	Элементы.Знаменатель.Родитель.Доступность = Объект.ТипУпаковки = Перечисления.ТипыУпаковокНоменклатуры.Разупаковка;
	
	Элементы.КоличествоУпаковок1.Доступность 	= (Объект.ТипУпаковки = Перечисления.ТипыУпаковокНоменклатуры.ТоварноеМесто);
	Элементы.ЕдиницаИзмерения1.Доступность 		= (Объект.ТипУпаковки = Перечисления.ТипыУпаковокНоменклатуры.ТоварноеМесто);
	
	 
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	ОбновитьКоэффициентРодителя();	
 	СтруктураРезультат = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Владелец, 
		Новый Структура("ЕдиницаИзмерения, ТипИзмеряемойВеличины", "ЕдиницаИзмерения", "ЕдиницаИзмерения.ТипИзмеряемойВеличины"));
	ЕдиницаИзмеренияВладельца = СтруктураРезультат.ЕдиницаИзмерения;
	ТипЕдиницыИзмеренияВладельца = СтруктураРезультат.ТипИзмеряемойВеличины;
	НастроитьФорму();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКоэффициентРодителя()
	
	Если Объект.ТипУпаковки = Перечисления.ТипыУпаковокНоменклатуры.Составная Тогда
		ЧислительРодителя = Объект.Родитель.Числитель;
		ЗнаменательРодителя = Объект.Родитель.Знаменатель;
	Иначе
		ЧислительРодителя = 1;
		ЗнаменательРодителя = 1;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Ключ.Пустая() Тогда
		ОбщегоНазначения.СообщитьПользователю("Нельзя создавать новый элемент",,,,Отказ);
	КонецЕсли;
КонецПроцедуры


