
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "ВидДаты, ДатаАктуальности, ПлановыйПериод, Периодичность");
	
	// ++ rarus selmik 23.11.2020 25003
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "ВыделениеКритическихРабот, ВыделениеПросроченныхРабот, ВыделениеПредстоящихРабот, ВыделениеРаботПоКритическомуОборудованию, ЦветКритическихРабот, ЦветКритическихРаботПоОборудованию, ЦветПредстоящихРабот, ЦветПроспоченныхРабот, ПлановыйПериодЦветовоеВыделение, ПериодичностьЦветовоеВыделение");
	// -- rarus selmik 23.11.2020 25003
	
	//ТаблицаПриоритетностиОР.Загрузить(ПолучитьИзВременногоХранилища(Параметры.ТаблицаПриоритетностиОР));
	//ТаблицаПросроченных.Загрузить(ПолучитьИзВременногоХранилища(Параметры.ТаблицаПросроченных));
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	ТаблицаПриоритетов.Приоритет КАК Приоритет
	//|ПОМЕСТИТЬ вт
	//|ИЗ
	//|	&ТаблицаПриоритетов КАК ТаблицаПриоритетов
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	вт.Приоритет КАК Приоритет
	//|ПОМЕСТИТЬ вт_
	//|ИЗ
	//|	вт КАК вт
	//|ГДЕ
	//|	НЕ ВЫРАЗИТЬ(вт.Приоритет КАК Справочник.впПриоритетыОбъектовРемонта).Наименование ЕСТЬ NULL
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ЕСТЬNULL(вт.Приоритет, впПриоритетыОбъектовРемонта.Ссылка) КАК Приоритет
	//|ИЗ
	//|	вт_ КАК вт
	//|		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.впПриоритетыОбъектовРемонта КАК впПриоритетыОбъектовРемонта
	//|		ПО вт.Приоритет = впПриоритетыОбъектовРемонта.Ссылка
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	впПриоритетыОбъектовРемонта.Код";
	//
	//ЦветПоУмолчанию = Новый Цвет(255,255,255);
	//
	//Запрос.УстановитьПараметр("ТаблицаПриоритетов", ТаблицаПриоритетностиОР.Выгрузить());
	
	//Если ТаблицаПриоритетностиОР.Количество() = 0 Тогда
	//	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
		
		//Массив = Новый Массив;
		//Массив.Добавить(Тип("Цвет"));
		//РезультатЗапроса.Колонки.Добавить("Цвет",Новый ОписаниеТипов(Массив));
		//
		//РезультатЗапроса.ЗаполнитьЗначения(ЦветПоУмолчанию,"Цвет");
		
	//	ТаблицаПриоритетностиОР.Загрузить(РезультатЗапроса);
		
	//Иначе 
	//	Выборка = Запрос.Выполнить().Выбрать();
	//	Пока Выборка.Следующий() цикл
	//		Если ТаблицаПриоритетностиОР.НайтиСтроки(Новый Структура("Приоритет", Выборка.Приоритет)).Количество() = 0 Тогда
	//			Нс = ТаблицаПриоритетностиОР.Добавить();
	//			Нс.Приоритет = Выборка.Приоритет;
	//			Нс.Цвет = ЦветПоУмолчанию;
	//		КонецЕсли;
	//	КонецЦикла;
	//КонецЕсли;
	
	//НоваяТаблицаПриоритетов = ТаблицаПриоритетностиОР.Выгрузить().СкопироватьКолонки();
	//Выборка = Запрос.Выполнить().Выбрать();
	//Пока Выборка.Следующий() цикл
	//	МассНайд =  ТаблицаПриоритетностиОР.НайтиСтроки(Новый Структура("Приоритет", Выборка.Приоритет));
	//	Если МассНайд.Количество() = 0  Тогда
	//		Нс = НоваяТаблицаПриоритетов.Добавить();
	//		Нс.Приоритет = Выборка.Приоритет;
	//		Нс.Цвет = ЦветПоУмолчанию;
	//	Иначе
	//		Нс = НоваяТаблицаПриоритетов.Добавить();
	//		Нс.Приоритет = МассНайд[0].Приоритет;
	//		Нс.Цвет = МассНайд[0].Цвет;
	//	КонецЕсли;
	//КонецЦикла;
	
	//ТаблицаПриоритетностиОР.Загрузить(НоваяТаблицаПриоритетов);
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	фВидДаты = ВидДаты;
	Элементы.ДатаАктуальности.Доступность = (фВидДаты = 1);
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВыборВидаДатыПриИзменении(Элемент)
	
	флДатаАктуальности = (фВидДаты = 1);
	Если НЕ флДатаАктуальности Тогда
		ДатаАктуальности = ТекущаяДата();
	КонецЕсли;
	Элементы.ДатаАктуальности.Доступность = флДатаАктуальности;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаКритичности
&НаКлиенте
Процедура ТаблицаКритичностиЦветПриИзменении(Элемент)
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура Применить(Команда)
	
	СтруктураПараметров = Новый Структура("ВидДаты, ДатаАктуальности, ПлановыйПериод, Периодичность",
	фВидДаты, ДатаАктуальности, ПлановыйПериод, Периодичность);
	
	// ++ rarus selmik 23.11.2020 25003
	СтруктураПараметров.Вставить("ВыделениеКритическихРабот"				, ВыделениеКритическихРабот);		
	СтруктураПараметров.Вставить("ВыделениеПросроченныхРабот"				, ВыделениеПросроченныхРабот);
	СтруктураПараметров.Вставить("ВыделениеПредстоящихРабот"				, ВыделениеПредстоящихРабот);
	СтруктураПараметров.Вставить("ВыделениеРаботПоКритическомуОборудованию"	, ВыделениеРаботПоКритическомуОборудованию);
	СтруктураПараметров.Вставить("ЦветКритическихРабот"						, ЦветКритическихРабот);
	СтруктураПараметров.Вставить("ЦветКритическихРаботПоОборудованию"		, ЦветКритическихРаботПоОборудованию);
	СтруктураПараметров.Вставить("ЦветПредстоящихРабот"						, ЦветПредстоящихРабот);
	СтруктураПараметров.Вставить("ЦветПроспоченныхРабот"					, ЦветПроспоченныхРабот);
	СтруктураПараметров.Вставить("ПериодичностьЦветовоеВыделение"			, ПериодичностьЦветовоеВыделение);
	СтруктураПараметров.Вставить("ПлановыйПериодЦветовоеВыделение"			, ПлановыйПериодЦветовоеВыделение);

	
	// -- rarus selmik 23.11.2020 25003
	
	ВладелецФормы.ТаблицаПриоритетностиОР.Очистить();
	Для каждого Стр Из ТаблицаПриоритетностиОР Цикл
		НС = ВладелецФормы.ТаблицаПриоритетностиОР.Добавить();
		ЗаполнитьЗначенияСвойств(НС, Стр);
	КонецЦикла;
	
	ВладелецФормы.ТаблицаПросроченных.Очистить();
	Для каждого Стр Из ТаблицаПросроченных Цикл
		НС = ВладелецФормы.ТаблицаПросроченных.Добавить();
		ЗаполнитьЗначенияСвойств(НС, Стр);
	КонецЦикла;

	Оповестить("ПерезаполнитьТаблицы", СтруктураПараметров);
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	Для каждого Стр Из ТаблицаПриоритетностиОР Цикл
		
		ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
		ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТаблицаПриоритетностиОРЦвет");
		ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаПриоритетностиОР.Приоритет");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = Стр.Приоритет;
		ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", Стр.Цвет);
		
	КонецЦикла;
	
	Для каждого Стр Из ТаблицаПросроченных Цикл
		
		ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
		ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТаблицаПросроченныхЦвет");
		ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", Стр.Цвет);
		
	КонецЦикла;

	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПросроченныхПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПросроченныхПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

// ++ rarus selmik 23.11.2020 25003
&НаКлиенте
Процедура ЦветКритическихРаботПриИзменении(Элемент)
	ВыделениеКритическихРабот = Истина;
КонецПроцедуры // -- rarus selmik 23.11.2020 25003

// ++ rarus selmik 23.11.2020 25003
&НаКлиенте
Процедура ЦветПроспоченныхРаботПриИзменении(Элемент)
	ВыделениеПросроченныхРабот = Истина;
КонецПроцедуры // -- rarus selmik 23.11.2020 25003

// ++ rarus selmik 23.11.2020 25003
&НаКлиенте
Процедура ЦветПредстоящихРаботПриИзменении(Элемент)
	ВыделениеПредстоящихРабот = Истина;
КонецПроцедуры // -- rarus selmik 23.11.2020 25003

// ++ rarus selmik 23.11.2020 25003
&НаКлиенте
Процедура ТаблицаПриоритетностиОРПриИзменении(Элемент)
	ВыделениеРаботПоКритическомуОборудованию = Истина;
КонецПроцедуры // -- rarus selmik 23.11.2020 25003

// ++ rarus selmik 23.11.2020 25003
&НаКлиенте
Процедура ЦветКритическихРаботПоОборудованиюПриИзменении(Элемент)
	ВыделениеРаботПоКритическомуОборудованию = Истина;
КонецПроцедуры  // -- rarus selmik 23.11.2020 25003



#КонецОбласти
