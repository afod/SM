
#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если не параметры.Свойство("Период") тогда
		Период.Вариант = ВариантСтандартногоПериода.ЭтотМесяц;
	Иначе
		Период=Параметры.Период;
	КонецЕсли;

	УстановитьПараметрыДинамическогоСписка();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

#КонецОбласти

#Область ОбработчикиКомандФормы
#КонецОбласти
#Область Список
#КонецОбласти


#Область СлужебныеПроцедурыИФункции
&НаСервере
Процедура УстановитьПараметрыДинамическогоСписка()
СписокОбъектовРемонта= Новый СписокЗначений;
СписокОбъектовРемонта.Добавить(ОРПоСудну( vftОбщегоНазначения.ПолучитьОсновноеСудно()));

	
ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ОбъектыРемонта",СписокОбъектовРемонта);
ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "НачПериода", Период.ДатаНачала);
ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "КонПериода", ?(ЗначениеЗаполнено(Период.ДатаОкончания), Период.ДатаОкончания,Дата(3999,1,1)));
ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "НеИспользоватьID", Истина);
ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ID",  Новый СписокЗначений);
СписокКритическоеОборудование= Новый СписокЗначений;
КритическоеОборудование= Справочники.впПриоритетыОбъектовРемонта.НайтиПоНаименованию("Критическое оборудование");
Если ЗначениеЗаполнено(КритическоеОборудование) тогда
СписокКритическоеОборудование.Добавить(Справочники.впПриоритетыОбъектовРемонта.НайтиПоНаименованию("Критическое оборудование"));
КонецЕсли;
ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "КритическоеОборудование", СписокКритическоеОборудование );
	

КонецПроцедуры 
&НаСервереБезКонтекста
Функция ОРПоСудну(Судно)
	ОР = ПредопределенноеЗначение("Справочник.впОбъектыРемонта.ПустаяСсылка");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	впОбъектыРемонта.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.впОбъектыРемонта КАК впОбъектыРемонта
	|ГДЕ
	|	впОбъектыРемонта.ПодразделениеИсполнитель = &Судно
	|	И впОбъектыРемонта.Родитель = ЗНАЧЕНИЕ(Справочник.впОбъектыРемонта.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("Судно", Судно);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() тогда
		ОР=ВыборкаДетальныеЗаписи.Ссылка;
	КонецЕсли;
	
	Возврат ОР;	
	
КонецФункции 

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	УстановитьПараметрыДинамическогоСписка();
КонецПроцедуры
&НаСервере
Функция КоличествоЗаписейСписка() Экспорт
Схема = Элементы.Список.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.Список.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();

	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
	ТЗ = Новый ТаблицаЗначений;
	ПроцессорВывода.УстановитьОбъект(ТЗ); 
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Возврат ТЗ.Количество();

КонецФункции 

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	ДанныеСтрокиСписка=Элемент.ТекущиеДанные;
	//ПоказатьЗначение(, Элемент.ТекущиеДанные.ОбъектРемонта);
	Форма=ОткрытьФорму("ОбщаяФорма.vftФормаЖурнала",,,"рарусСписокРемонтов");
	Форма.Элементы.Страницы.ТекущаяСтраница = Форма.Элементы.Страницы.ПодчиненныеЭлементы.ТОиР;
	Если не (Форма.Элементы.СправочникОР2.ДанныеСтроки(Элемент.ТекущиеДанные.ОбъектРемонта))=неопределено тогда
		Форма.Элементы.СправочникОР2.ТекущаяСтрока = Форма.Элементы.СправочникОР2.ДанныеСтроки(Элемент.ТекущиеДанные.ОбъектРемонта).Ссылка;
		//в ДС НормативныеРемонты  нет основной таблицы. Поэтому чтобы спозиционироваться на нужной строке, придется перебрать все строки и проверить ОР, работу
		к=0;
		Пока Истина Цикл
			к = к + 1;
			ПеребираемСтроки = Форма.Элементы.НормативныеРемонты.ДанныеСтроки(к);
			Если ПеребираемСтроки = Неопределено Тогда
				Прервать;
			КонецЕсли;
			Если ПеребираемСтроки.ОбъектРемонта = ДанныеСтрокиСписка.ОбъектРемонта и ПеребираемСтроки.ВидРемонта=ДанныеСтрокиСписка.ВидРемонтныхРабот  Тогда
				Форма.Элементы.НормативныеРемонты.ТекущаяСтрока= к;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		//в ДС История (ремонты) нет основной таблицы. Поэтому чтобы спозиционироваться на нужной строке, придется перебрать все строки и проверить ОР, работу и дату
		к=0;
		Пока Истина Цикл
			к = к + 1;
			ПеребираемСтроки = Форма.Элементы.Ремонты.ДанныеСтроки(к);
			Если ПеребираемСтроки = Неопределено Тогда
				Прервать;
			КонецЕсли;
			Если ПеребираемСтроки.ОбъектРемонта = ДанныеСтрокиСписка.ОбъектРемонта и ПеребираемСтроки.ВидРемонта=ДанныеСтрокиСписка.ВидРемонтныхРабот и  ПеребираемСтроки.ПланируемаяДатаНачалаРемонта=Элемент.ТекущиеДанные.ДатаНачала Тогда
				Форма.Элементы.Ремонты.ТекущаяСтрока= к;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	КонецПроцедуры

#КонецОбласти
